FIRRTL version 1.2.0
circuit Add :
  module Add :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 9:18]
    input a_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Add.scala 10:13]
    input b_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Add.scala 11:13]
    input subtract : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 12:20]
    input roundingMode : UInt<2> @[\\src\\main\\scala\\fpu8\\Add.scala 13:24]
    output sign : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 14:16]
    output exponent : UInt<5> @[\\src\\main\\scala\\fpu8\\Add.scala 15:20]
    output fraction : UInt<4> @[\\src\\main\\scala\\fpu8\\Add.scala 16:20]
    output overflow : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 17:20]
    output isInfty : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 18:19]
    output is0 : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 19:15]
    output isNaN : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 20:17]
    output NaNFractionValue : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 21:28]

    node _compare_T = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:70]
    node _compare_T_1 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:89]
    node compare = gt(_compare_T, _compare_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:77]
    node greaterOperand_data = mux(compare, a_data, b_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 129:29]
    node smallerOperand_data = mux(compare, b_data, a_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 130:29]
    node _sign_T = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _sign_T_1 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _sign_T_2 = xor(_sign_T_1, subtract) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 131:51]
    node resultSign = mux(compare, _sign_T, _sign_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 131:19]
    node _subtraction_T = bits(greaterOperand_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _subtraction_T_1 = xor(subtract, _subtraction_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 132:32]
    node _subtraction_T_2 = bits(smallerOperand_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node subtraction = xor(_subtraction_T_1, _subtraction_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 132:54]
    node exponent_1 = bits(greaterOperand_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _greaterOperandFraction_T = bits(greaterOperand_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _greaterOperandFraction_T_1 = eq(_greaterOperandFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _greaterOperandFraction_T_2 = eq(_greaterOperandFraction_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 134:38]
    node _greaterOperandFraction_T_3 = bits(greaterOperand_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node greaterOperandFraction = cat(_greaterOperandFraction_T_2, _greaterOperandFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 134:37]
    node _smallerOperandFraction_T = bits(smallerOperand_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _smallerOperandFraction_T_1 = eq(_smallerOperandFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _smallerOperandFraction_T_2 = eq(_smallerOperandFraction_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 135:38]
    node _smallerOperandFraction_T_3 = bits(smallerOperand_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node smallerOperandFraction = cat(_smallerOperandFraction_T_2, _smallerOperandFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 135:37]
    node _isOnlySmallerDenormalized_T = bits(greaterOperand_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isOnlySmallerDenormalized_T_1 = eq(_isOnlySmallerDenormalized_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _isOnlySmallerDenormalized_T_2 = eq(_isOnlySmallerDenormalized_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 136:37]
    node _isOnlySmallerDenormalized_T_3 = bits(smallerOperand_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isOnlySmallerDenormalized_T_4 = eq(_isOnlySmallerDenormalized_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node isOnlySmallerDenormalized = and(_isOnlySmallerDenormalized_T_2, _isOnlySmallerDenormalized_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 136:60]
    node _shift_T = bits(greaterOperand_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _shift_T_1 = sub(_shift_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 139:31]
    node _shift_T_2 = tail(_shift_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 139:31]
    node _shift_T_3 = bits(greaterOperand_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _shift_T_4 = bits(smallerOperand_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _shift_T_5 = sub(_shift_T_3, _shift_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 140:31]
    node _shift_T_6 = tail(_shift_T_5, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 140:31]
    node shift = mux(isOnlySmallerDenormalized, _shift_T_2, _shift_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 137:20]
    node _shiftedFraction_shifted_T = geq(shift, UInt<3>("h6")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 145:15]
    node _shiftedFraction_shifted_T_1 = cat(UInt<6>("h0"), smallerOperandFraction) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 146:12]
    node _shiftedFraction_shifted_T_2 = cat(smallerOperandFraction, UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 147:12]
    node _shiftedFraction_shifted_T_3 = dshr(_shiftedFraction_shifted_T_2, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 147:54]
    node shiftedFraction_shifted = mux(_shiftedFraction_shifted_T, _shiftedFraction_shifted_T_1, _shiftedFraction_shifted_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 144:24]
    node _shiftedFraction_T = bits(shiftedFraction_shifted, 9, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 149:18]
    node _shiftedFraction_T_1 = bits(shiftedFraction_shifted, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 149:74]
    node _shiftedFraction_T_2 = orr(_shiftedFraction_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 149:94]
    node smallerOperandFraction_1 = cat(_shiftedFraction_T, _shiftedFraction_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 149:10]
    node greaterOperandFraction_1 = cat(greaterOperandFraction, UInt<3>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 151:45]
    node _isResultNaN_T = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_1 = eq(_isResultNaN_T, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultNaN_T_2 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_3 = eq(_isResultNaN_T_2, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:46]
    node _isResultNaN_T_4 = and(_isResultNaN_T_1, _isResultNaN_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResultNaN_T_5 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_6 = eq(_isResultNaN_T_5, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultNaN_T_7 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_8 = eq(_isResultNaN_T_7, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:46]
    node _isResultNaN_T_9 = and(_isResultNaN_T_6, _isResultNaN_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResultNaN_T_10 = or(_isResultNaN_T_4, _isResultNaN_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 413:37]
    node _isResult0_T = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 31:70]
    node _isResult0_T_1 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 31:91]
    node _isResult0_T_2 = eq(_isResult0_T, _isResult0_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 31:77]
    node _isResult0_T_3 = bits(subtraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 421:78]
    node _isResult0_T_4 = and(_isResult0_T_2, _isResult0_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 421:63]
    node isResultNaN = _isResultNaN_T_10 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 413:{25,25}]
    node _isResult0_T_5 = eq(isResultNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 421:88]
    node _isResult0_T_6 = and(_isResult0_T_4, _isResult0_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 421:85]
    node _isResult0_T_7 = eq(UInt<1>("h0"), UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 421:104]
    node _isResult0_T_8 = and(_isResult0_T_6, _isResult0_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 421:101]
    node _calculatedValue_T = eq(subtraction, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 425:45]
    node _calculatedValue_T_1 = sub(greaterOperandFraction_1, smallerOperandFraction_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 426:32]
    node _calculatedValue_T_2 = asUInt(_calculatedValue_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 426:32]
    node _calculatedValue_T_3 = add(greaterOperandFraction_1, smallerOperandFraction_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 427:32]
    node calculatedValue = mux(_calculatedValue_T, _calculatedValue_T_2, _calculatedValue_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 425:32]
    node originalCalculatedValue = calculatedValue @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 261:{59,59}]
    node paddedCalcValue = originalCalculatedValue @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 263:31 265:21]
    node _T = bits(paddedCalcValue, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 270:64]
    node _leadingZeros_T = bits(_T, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_1 = bits(_leadingZeros_T, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_2 = bits(_leadingZeros_T_1, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_3 = bits(_leadingZeros_T_1, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_4 = cat(_leadingZeros_T_2, _leadingZeros_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_5 = bits(_leadingZeros_T, 3, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_6 = bits(_leadingZeros_T_5, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_7 = bits(_leadingZeros_T_5, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_8 = cat(_leadingZeros_T_6, _leadingZeros_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_9 = cat(_leadingZeros_T_4, _leadingZeros_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_10 = bits(_T, 6, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_11 = bits(_leadingZeros_T_10, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_12 = bits(_leadingZeros_T_11, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_13 = bits(_leadingZeros_T_11, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_14 = cat(_leadingZeros_T_12, _leadingZeros_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_15 = bits(_leadingZeros_T_10, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_16 = cat(_leadingZeros_T_14, _leadingZeros_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_17 = cat(_leadingZeros_T_9, _leadingZeros_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_18 = bits(_leadingZeros_T_17, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_19 = bits(_leadingZeros_T_17, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_20 = bits(_leadingZeros_T_17, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_21 = bits(_leadingZeros_T_17, 3, 3) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_22 = bits(_leadingZeros_T_17, 4, 4) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_23 = bits(_leadingZeros_T_17, 5, 5) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_24 = bits(_leadingZeros_T_17, 6, 6) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_25 = mux(_leadingZeros_T_23, UInt<3>("h5"), UInt<3>("h6")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_26 = mux(_leadingZeros_T_22, UInt<3>("h4"), _leadingZeros_T_25) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_27 = mux(_leadingZeros_T_21, UInt<2>("h3"), _leadingZeros_T_26) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_28 = mux(_leadingZeros_T_20, UInt<2>("h2"), _leadingZeros_T_27) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_29 = mux(_leadingZeros_T_19, UInt<1>("h1"), _leadingZeros_T_28) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_30 = mux(_leadingZeros_T_18, UInt<1>("h0"), _leadingZeros_T_29) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _shiftedValue_T = bits(_T, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 61:50]
    node _shiftedValue_T_1 = shl(_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 63:23]
    node _shiftedValue_T_2 = bits(_shiftedValue_T_1, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 63:28]
    node _shiftedValue_T_3 = shl(_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 63:23]
    node _shiftedValue_T_4 = bits(_shiftedValue_T_3, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 63:28]
    node _shiftedValue_T_5 = shl(_T, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 63:23]
    node _shiftedValue_T_6 = bits(_shiftedValue_T_5, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 63:28]
    node _shiftedValue_T_7 = shl(_T, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 63:23]
    node _shiftedValue_T_8 = bits(_shiftedValue_T_7, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 63:28]
    node _shiftedValue_T_9 = shl(_T, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 63:23]
    node _shiftedValue_T_10 = bits(_shiftedValue_T_9, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 63:28]
    node _shiftedValue_T_11 = shl(_T, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 63:23]
    node _shiftedValue_T_12 = bits(_shiftedValue_T_11, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 63:28]
    node _shiftedValue_T_13 = shl(_T, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 63:23]
    node _shiftedValue_T_14 = bits(_shiftedValue_T_13, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 63:28]
    node shift_1 = _leadingZeros_T_30 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 55:28 58:18]
    node _shiftedValue_T_15 = eq(UInt<1>("h0"), shift_1) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _shiftedValue_T_16 = mux(_shiftedValue_T_15, _shiftedValue_T_2, _shiftedValue_T) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _shiftedValue_T_17 = eq(UInt<1>("h1"), shift_1) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _shiftedValue_T_18 = mux(_shiftedValue_T_17, _shiftedValue_T_4, _shiftedValue_T_16) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _shiftedValue_T_19 = eq(UInt<2>("h2"), shift_1) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _shiftedValue_T_20 = mux(_shiftedValue_T_19, _shiftedValue_T_6, _shiftedValue_T_18) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _shiftedValue_T_21 = eq(UInt<2>("h3"), shift_1) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _shiftedValue_T_22 = mux(_shiftedValue_T_21, _shiftedValue_T_8, _shiftedValue_T_20) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _shiftedValue_T_23 = eq(UInt<3>("h4"), shift_1) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _shiftedValue_T_24 = mux(_shiftedValue_T_23, _shiftedValue_T_10, _shiftedValue_T_22) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _shiftedValue_T_25 = eq(UInt<3>("h5"), shift_1) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _shiftedValue_T_26 = mux(_shiftedValue_T_25, _shiftedValue_T_12, _shiftedValue_T_24) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _shiftedValue_T_27 = eq(UInt<3>("h6"), shift_1) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _shiftedValue_T_28 = mux(_shiftedValue_T_27, _shiftedValue_T_14, _shiftedValue_T_26) @[src/main/scala/chisel3/util/Mux.scala 77:13]
    node _T_1 = andr(exponent_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 275:19]
    node _T_2 = bits(paddedCalcValue, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 275:42]
    node _T_3 = and(_T_1, _T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 275:24]
    node _T_4 = andr(exponent_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 278:26]
    node _T_5 = eq(_T_4, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 278:16]
    node _T_6 = bits(paddedCalcValue, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 278:49]
    node _T_7 = and(_T_5, _T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 278:31]
    node _tempExponent_T = add(exponent_1, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 279:32]
    node _tempExponent_T_1 = tail(_tempExponent_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 279:32]
    node _tempFraction_T = bits(paddedCalcValue, 7, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 280:42]
    node _tempFraction_T_1 = bits(paddedCalcValue, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 280:65]
    node _tempFraction_T_2 = orr(_tempFraction_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 280:72]
    node _tempFraction_T_3 = cat(_tempFraction_T, _tempFraction_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 280:26]
    node _T_8 = gt(exponent_1, shift_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 281:25]
    node shiftedCalcValue = _shiftedValue_T_28 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 56:28 61:18]
    node _T_9 = bits(shiftedCalcValue, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 281:52]
    node _T_10 = and(_T_8, _T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 281:33]
    node _tempExponent_T_2 = sub(exponent_1, shift_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 282:32]
    node _tempExponent_T_3 = tail(_tempExponent_T_2, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 282:32]
    node _T_11 = gt(exponent_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 286:21]
    node _tempFraction_T_4 = bits(paddedCalcValue, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 287:40]
    node _tempFraction_T_5 = sub(exponent_1, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 287:60]
    node _tempFraction_T_6 = tail(_tempFraction_T_5, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 287:60]
    node _tempFraction_T_7 = dshl(_tempFraction_T_4, _tempFraction_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 287:47]
    node _tempFraction_T_8 = bits(paddedCalcValue, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 289:40]
    node _GEN_0 = mux(_T_11, _tempFraction_T_7, _tempFraction_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 286:28 287:22 289:22]
    node _GEN_1 = mux(_T_10, _tempExponent_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 281:57 282:20 285:20]
    node _GEN_2 = mux(_T_10, shiftedCalcValue, _GEN_0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 281:57 283:20]
    node _GEN_3 = mux(_T_7, _tempExponent_T_1, _GEN_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 278:54 279:20]
    node _GEN_4 = mux(_T_7, _tempFraction_T_3, _GEN_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 278:54 280:20]
    node _GEN_5 = mux(_T_3, exponent_1, _GEN_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 275:47 276:20]
    node _GEN_6 = mux(_T_3, UInt<7>("h7f"), _GEN_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 275:47 277:20]
    node tempFraction = bits(_GEN_6, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 273:28]
    node _T_12 = bits(tempFraction, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 293:41]
    node _addOne_T = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:33]
    node _addOne_T_1 = bits(_T_12, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:57]
    node _addOne_T_2 = and(_addOne_T, _addOne_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:42]
    node _addOne_T_3 = bits(_T_12, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:77]
    node _addOne_T_4 = bits(_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:96]
    node _addOne_T_5 = or(_addOne_T_3, _addOne_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:81]
    node _addOne_T_6 = and(_addOne_T_2, _addOne_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:61]
    node _addOne_T_7 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 235:22]
    node _addOne_T_8 = bits(_T_12, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 235:46]
    node _addOne_T_9 = and(_addOne_T_7, _addOne_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 235:31]
    node _addOne_T_10 = bits(_T_12, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 235:66]
    node _addOne_T_11 = eq(_addOne_T_10, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 235:53]
    node _addOne_T_12 = and(_addOne_T_9, _addOne_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 235:50]
    node _addOne_T_13 = bits(_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 235:86]
    node _addOne_T_14 = eq(_addOne_T_13, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 235:73]
    node _addOne_T_15 = and(_addOne_T_12, _addOne_T_14) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 235:70]
    node _addOne_T_16 = bits(_T_12, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 235:105]
    node _addOne_T_17 = and(_addOne_T_15, _addOne_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 235:90]
    node _addOne_T_18 = or(_addOne_T_6, _addOne_T_17) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:102]
    node _addOne_T_19 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:22]
    node _addOne_T_20 = bits(_T_12, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:47]
    node _addOne_T_21 = bits(_T_12, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:66]
    node _addOne_T_22 = or(_addOne_T_20, _addOne_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:51]
    node _addOne_T_23 = bits(_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:85]
    node _addOne_T_24 = or(_addOne_T_22, _addOne_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:70]
    node _addOne_T_25 = and(_addOne_T_19, _addOne_T_24) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:31]
    node _addOne_T_26 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:98]
    node _addOne_T_27 = and(_addOne_T_25, _addOne_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:90]
    node _addOne_T_28 = or(_addOne_T_18, _addOne_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 235:110]
    node _addOne_T_29 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 237:22]
    node _addOne_T_30 = bits(_T_12, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 237:47]
    node _addOne_T_31 = bits(_T_12, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 237:66]
    node _addOne_T_32 = or(_addOne_T_30, _addOne_T_31) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 237:51]
    node _addOne_T_33 = bits(_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 237:85]
    node _addOne_T_34 = or(_addOne_T_32, _addOne_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 237:70]
    node _addOne_T_35 = and(_addOne_T_29, _addOne_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 237:31]
    node _addOne_T_36 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 237:99]
    node _addOne_T_37 = eq(_addOne_T_36, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 237:93]
    node _addOne_T_38 = and(_addOne_T_35, _addOne_T_37) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 237:90]
    node addOne = or(_addOne_T_28, _addOne_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:106]
    node _roundedFraction_T = bits(_T_12, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:39]
    node roundedFraction = add(_roundedFraction_T, addOne) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:66]
    node _finalFraction_T = bits(roundedFraction, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 241:44]
    node _finalFraction_T_1 = eq(_finalFraction_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 241:65]
    node _finalFraction_T_2 = bits(roundedFraction, 4, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 242:22]
    node _finalFraction_T_3 = bits(roundedFraction, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 242:62]
    node resultFraction = mux(_finalFraction_T_1, _finalFraction_T_2, _finalFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 241:28]
    node _finalExponent_T = bits(roundedFraction, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 244:44]
    node _finalExponent_T_1 = eq(_finalExponent_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 244:65]
    node _finalExponent_T_2 = bits(roundedFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 244:92]
    node tempExponent = _GEN_5 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 272:28]
    node _finalExponent_T_3 = eq(tempExponent, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 244:125]
    node _finalExponent_T_4 = and(_finalExponent_T_2, _finalExponent_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 244:109]
    node _finalExponent_T_5 = or(_finalExponent_T_1, _finalExponent_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 244:73]
    node _finalExponent_T_6 = add(tempExponent, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 245:20]
    node _finalExponent_T_7 = tail(_finalExponent_T_6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 245:20]
    node resultExponent = mux(_finalExponent_T_5, _finalExponent_T_7, tempExponent) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 244:28]
    node _overflow_T = gt(resultExponent, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 249:27]
    node _overflow_T_1 = bits(resultExponent, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 249:62]
    node _overflow_T_2 = eq(_overflow_T_1, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 249:86]
    node _overflow_T_3 = eq(resultFraction, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 249:123]
    node _overflow_T_4 = and(_overflow_T_2, _overflow_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 249:105]
    node _overflow_T_5 = or(_overflow_T, _overflow_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 249:44]
    node _overflow_T_6 = geq(tempExponent, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:24]
    node _overflow_T_7 = bits(_T_12, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:58]
    node _overflow_T_8 = eq(_overflow_T_7, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:85]
    node _overflow_T_9 = and(_overflow_T_6, _overflow_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:42]
    node resultOverflow = or(_overflow_T_5, _overflow_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 249:134]
    node _T_13 = eq(enable, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\Add.scala 26:15]
    node _GEN_7 = mux(_T_13, resultSign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 26:24 27:10 36:10]
    node _GEN_8 = mux(_T_13, resultExponent, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 26:24 28:14 37:14]
    node _GEN_9 = mux(_T_13, resultFraction, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 26:24 29:14 38:14]
    node _GEN_10 = mux(_T_13, resultOverflow, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 26:24 30:14 39:14]
    node _GEN_11 = mux(_T_13, UInt<1>("h0"), UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 26:24 31:13 40:13]
    node isResult0 = _isResult0_T_8 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 421:{34,34}]
    node _GEN_12 = mux(_T_13, isResult0, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 26:24 32:9 41:9]
    node _GEN_13 = mux(_T_13, isResultNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 26:24 33:11 42:11]
    sign <= _GEN_7
    exponent <= pad(_GEN_8, 5)
    fraction <= _GEN_9
    overflow <= _GEN_10
    isInfty <= _GEN_11
    is0 <= _GEN_12
    isNaN <= _GEN_13
    NaNFractionValue <= _GEN_11
