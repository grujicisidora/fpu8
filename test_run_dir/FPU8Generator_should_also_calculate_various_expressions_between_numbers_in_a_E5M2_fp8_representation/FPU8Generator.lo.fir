FIRRTL version 1.2.0
circuit FPU8Generator :
  module Add :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 9:18]
    input a_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Add.scala 10:13]
    input b_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Add.scala 11:13]
    input subtract : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 12:20]
    input roundingMode : UInt<2> @[\\src\\main\\scala\\fpu8\\Add.scala 13:24]
    output sign : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 14:16]
    output exponent : UInt<6> @[\\src\\main\\scala\\fpu8\\Add.scala 15:20]
    output fraction : UInt<3> @[\\src\\main\\scala\\fpu8\\Add.scala 16:20]
    output overflow : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 17:20]
    output isInfty : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 18:19]
    output is0 : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 19:15]
    output isNaN : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 20:17]
    output NaNFractionValue : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 21:28]

    node _compare_T = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:70]
    node _compare_T_1 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:89]
    node compare = gt(_compare_T, _compare_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:77]
    node greaterOperand_data = mux(compare, a_data, b_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 124:29]
    node smallerOperand_data = mux(compare, b_data, a_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 125:29]
    node _sign_T = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _sign_T_1 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _sign_T_2 = xor(_sign_T_1, subtract) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 126:51]
    node resultSign = mux(compare, _sign_T, _sign_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 126:19]
    node _subtraction_T = bits(greaterOperand_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _subtraction_T_1 = xor(subtract, _subtraction_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 127:32]
    node _subtraction_T_2 = bits(smallerOperand_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node subtraction = xor(_subtraction_T_1, _subtraction_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 127:54]
    node exponent_1 = bits(greaterOperand_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _greaterOperandFraction_T = bits(greaterOperand_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _greaterOperandFraction_T_1 = eq(_greaterOperandFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _greaterOperandFraction_T_2 = eq(_greaterOperandFraction_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 129:38]
    node _greaterOperandFraction_T_3 = bits(greaterOperand_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node greaterOperandFraction = cat(_greaterOperandFraction_T_2, _greaterOperandFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 129:37]
    node _smallerOperandFraction_T = bits(smallerOperand_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _smallerOperandFraction_T_1 = eq(_smallerOperandFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _smallerOperandFraction_T_2 = eq(_smallerOperandFraction_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 130:38]
    node _smallerOperandFraction_T_3 = bits(smallerOperand_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node smallerOperandFraction = cat(_smallerOperandFraction_T_2, _smallerOperandFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 130:37]
    node _isOnlySmallerDenormalized_T = bits(greaterOperand_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isOnlySmallerDenormalized_T_1 = eq(_isOnlySmallerDenormalized_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _isOnlySmallerDenormalized_T_2 = eq(_isOnlySmallerDenormalized_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 131:37]
    node _isOnlySmallerDenormalized_T_3 = bits(smallerOperand_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isOnlySmallerDenormalized_T_4 = eq(_isOnlySmallerDenormalized_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node isOnlySmallerDenormalized = and(_isOnlySmallerDenormalized_T_2, _isOnlySmallerDenormalized_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 131:60]
    node _shift_T = bits(greaterOperand_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _shift_T_1 = sub(_shift_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 134:31]
    node _shift_T_2 = tail(_shift_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 134:31]
    node _shift_T_3 = bits(greaterOperand_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _shift_T_4 = bits(smallerOperand_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _shift_T_5 = sub(_shift_T_3, _shift_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 135:31]
    node _shift_T_6 = tail(_shift_T_5, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 135:31]
    node shift = mux(isOnlySmallerDenormalized, _shift_T_2, _shift_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 132:20]
    node _shiftedFraction_shifted_T = geq(shift, UInt<3>("h5")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 140:15]
    node _shiftedFraction_shifted_T_1 = cat(UInt<5>("h0"), smallerOperandFraction) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 141:12]
    node _shiftedFraction_shifted_T_2 = cat(smallerOperandFraction, UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 142:12]
    node _shiftedFraction_shifted_T_3 = dshr(_shiftedFraction_shifted_T_2, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 142:54]
    node shiftedFraction_shifted = mux(_shiftedFraction_shifted_T, _shiftedFraction_shifted_T_1, _shiftedFraction_shifted_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 139:24]
    node _shiftedFraction_T = bits(shiftedFraction_shifted, 7, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 144:18]
    node _shiftedFraction_T_1 = bits(shiftedFraction_shifted, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 144:74]
    node _shiftedFraction_T_2 = orr(_shiftedFraction_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 144:94]
    node smallerOperandFraction_1 = cat(_shiftedFraction_T, _shiftedFraction_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 144:10]
    node greaterOperandFraction_1 = cat(greaterOperandFraction, UInt<3>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 146:45]
    node _isResultNaN_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_1 = eq(_isResultNaN_T, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultNaN_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_3 = eq(_isResultNaN_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultNaN_T_4 = eq(_isResultNaN_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _isResultNaN_T_5 = and(_isResultNaN_T_1, _isResultNaN_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResultNaN_T_6 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_7 = eq(_isResultNaN_T_6, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultNaN_T_8 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_9 = eq(_isResultNaN_T_8, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultNaN_T_10 = eq(_isResultNaN_T_9, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _isResultNaN_T_11 = and(_isResultNaN_T_7, _isResultNaN_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResultNaN_T_12 = or(_isResultNaN_T_5, _isResultNaN_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 392:42]
    node _isResultNaN_T_13 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_14 = eq(_isResultNaN_T_13, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultNaN_T_15 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_16 = eq(_isResultNaN_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultNaN_T_17 = and(_isResultNaN_T_14, _isResultNaN_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 47:24]
    node _isResultNaN_T_18 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_19 = eq(_isResultNaN_T_18, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultNaN_T_20 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_21 = eq(_isResultNaN_T_20, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultNaN_T_22 = and(_isResultNaN_T_19, _isResultNaN_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 47:24]
    node _isResultNaN_T_23 = and(_isResultNaN_T_17, _isResultNaN_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 392:74]
    node _isResultNaN_T_24 = bits(subtraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 392:106]
    node _isResultNaN_T_25 = and(_isResultNaN_T_23, _isResultNaN_T_24) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 392:91]
    node _isResultNaN_T_26 = or(_isResultNaN_T_12, _isResultNaN_T_25) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 392:57]
    node _isResultInfty_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_1 = eq(_isResultInfty_T, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultInfty_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_3 = eq(_isResultInfty_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultInfty_T_4 = and(_isResultInfty_T_1, _isResultInfty_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 47:24]
    node _isResultInfty_T_5 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_6 = eq(_isResultInfty_T_5, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultInfty_T_7 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_8 = eq(_isResultInfty_T_7, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultInfty_T_9 = and(_isResultInfty_T_6, _isResultInfty_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 47:24]
    node _isResultInfty_T_10 = or(_isResultInfty_T_4, _isResultInfty_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 397:45]
    node isResultNaN = _isResultNaN_T_26 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 392:{30,30}]
    node _isResultInfty_T_11 = eq(isResultNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 397:65]
    node _isResultInfty_T_12 = and(_isResultInfty_T_10, _isResultInfty_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 397:63]
    node _isResult0_T = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 31:70]
    node _isResult0_T_1 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 31:91]
    node _isResult0_T_2 = eq(_isResult0_T, _isResult0_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 31:77]
    node _isResult0_T_3 = bits(subtraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 401:78]
    node _isResult0_T_4 = and(_isResult0_T_2, _isResult0_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 401:63]
    node _isResult0_T_5 = eq(isResultNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 401:88]
    node _isResult0_T_6 = and(_isResult0_T_4, _isResult0_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 401:85]
    node isResultInfty = _isResultInfty_T_12 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 397:{30,30}]
    node _isResult0_T_7 = eq(isResultInfty, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 401:104]
    node _isResult0_T_8 = and(_isResult0_T_6, _isResult0_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 401:101]
    node _resultNaNFractionValue_T = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_1 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_2 = gt(_resultNaNFractionValue_T, _resultNaNFractionValue_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:33]
    node _resultNaNFractionValue_T_3 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_4 = bits(_resultNaNFractionValue_T_3, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:64]
    node _resultNaNFractionValue_T_5 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_6 = bits(_resultNaNFractionValue_T_5, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:83]
    node resultNaNFractionValue = mux(_resultNaNFractionValue_T_2, _resultNaNFractionValue_T_4, _resultNaNFractionValue_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:18]
    node _calculatedValue_T = eq(subtraction, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 405:45]
    node _calculatedValue_T_1 = sub(greaterOperandFraction_1, smallerOperandFraction_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 406:32]
    node _calculatedValue_T_2 = asUInt(_calculatedValue_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 406:32]
    node _calculatedValue_T_3 = add(greaterOperandFraction_1, smallerOperandFraction_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 407:32]
    node calculatedValue = mux(_calculatedValue_T, _calculatedValue_T_2, _calculatedValue_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 405:32]
    node originalCalculatedValue = calculatedValue @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 256:{59,59}]
    node _paddedCalcValue_T = cat(originalCalculatedValue, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 262:15]
    node paddedCalcValue = _paddedCalcValue_T @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 258:31 260:21]
    node _T = bits(paddedCalcValue, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 265:64]
    node _leadingZeros_T = bits(_T, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_1 = bits(_leadingZeros_T, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_2 = bits(_leadingZeros_T_1, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_3 = bits(_leadingZeros_T_1, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_4 = cat(_leadingZeros_T_2, _leadingZeros_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_5 = bits(_leadingZeros_T, 3, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_6 = bits(_leadingZeros_T_5, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_7 = bits(_leadingZeros_T_5, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_8 = cat(_leadingZeros_T_6, _leadingZeros_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_9 = cat(_leadingZeros_T_4, _leadingZeros_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_10 = bits(_T, 6, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_11 = bits(_leadingZeros_T_10, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_12 = bits(_leadingZeros_T_11, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_13 = bits(_leadingZeros_T_11, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_14 = cat(_leadingZeros_T_12, _leadingZeros_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_15 = bits(_leadingZeros_T_10, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_16 = cat(_leadingZeros_T_14, _leadingZeros_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_17 = cat(_leadingZeros_T_9, _leadingZeros_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_18 = bits(_leadingZeros_T_17, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_19 = bits(_leadingZeros_T_17, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_20 = bits(_leadingZeros_T_17, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_21 = bits(_leadingZeros_T_17, 3, 3) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_22 = bits(_leadingZeros_T_17, 4, 4) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_23 = bits(_leadingZeros_T_17, 5, 5) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_24 = bits(_leadingZeros_T_17, 6, 6) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_25 = mux(_leadingZeros_T_23, UInt<3>("h5"), UInt<3>("h6")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_26 = mux(_leadingZeros_T_22, UInt<3>("h4"), _leadingZeros_T_25) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_27 = mux(_leadingZeros_T_21, UInt<2>("h3"), _leadingZeros_T_26) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_28 = mux(_leadingZeros_T_20, UInt<2>("h2"), _leadingZeros_T_27) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_29 = mux(_leadingZeros_T_19, UInt<1>("h1"), _leadingZeros_T_28) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_30 = mux(_leadingZeros_T_18, UInt<1>("h0"), _leadingZeros_T_29) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node shift_1 = _leadingZeros_T_30 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 55:28 58:18]
    node _shiftedValue_T = dshl(_T, shift_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:27]
    node _T_1 = andr(exponent_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 270:19]
    node _T_2 = bits(paddedCalcValue, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 270:42]
    node _T_3 = and(_T_1, _T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 270:24]
    node _T_4 = andr(exponent_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 273:26]
    node _T_5 = eq(_T_4, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 273:16]
    node _T_6 = bits(paddedCalcValue, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 273:49]
    node _T_7 = and(_T_5, _T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 273:31]
    node _tempExponent_T = add(exponent_1, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 274:32]
    node _tempExponent_T_1 = tail(_tempExponent_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 274:32]
    node _tempFraction_T = bits(paddedCalcValue, 7, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 275:42]
    node _tempFraction_T_1 = bits(paddedCalcValue, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 275:65]
    node _tempFraction_T_2 = orr(_tempFraction_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 275:72]
    node _tempFraction_T_3 = cat(_tempFraction_T, _tempFraction_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 275:26]
    node _T_8 = gt(exponent_1, shift_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 276:25]
    node shiftedCalcValue = bits(_shiftedValue_T, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 56:28 60:18]
    node _T_9 = bits(shiftedCalcValue, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 276:52]
    node _T_10 = and(_T_8, _T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 276:33]
    node _tempExponent_T_2 = sub(exponent_1, shift_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 277:32]
    node _tempExponent_T_3 = tail(_tempExponent_T_2, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 277:32]
    node _T_11 = gt(exponent_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 281:21]
    node _tempFraction_T_4 = bits(paddedCalcValue, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 282:40]
    node _tempFraction_T_5 = sub(exponent_1, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 282:60]
    node _tempFraction_T_6 = tail(_tempFraction_T_5, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 282:60]
    node _tempFraction_T_7 = dshl(_tempFraction_T_4, _tempFraction_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 282:47]
    node _tempFraction_T_8 = bits(paddedCalcValue, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 284:40]
    node _GEN_0 = mux(_T_11, _tempFraction_T_7, _tempFraction_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 281:28 282:22 284:22]
    node _GEN_1 = mux(_T_10, _tempExponent_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 276:57 277:20 280:20]
    node _GEN_2 = mux(_T_10, shiftedCalcValue, _GEN_0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 276:57 278:20]
    node _GEN_3 = mux(_T_7, _tempExponent_T_1, _GEN_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 273:54 274:20]
    node _GEN_4 = mux(_T_7, _tempFraction_T_3, _GEN_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 273:54 275:20]
    node _GEN_5 = mux(_T_3, exponent_1, _GEN_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 270:47 271:20]
    node _GEN_6 = mux(_T_3, UInt<7>("h7f"), _GEN_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 270:47 272:20]
    node tempFraction = bits(_GEN_6, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 268:28]
    node _T_12 = bits(tempFraction, 6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 288:41]
    node _addOne_T = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:33]
    node _addOne_T_1 = bits(_T_12, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:57]
    node _addOne_T_2 = and(_addOne_T, _addOne_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:42]
    node _addOne_T_3 = bits(_T_12, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:77]
    node _addOne_T_4 = bits(_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:96]
    node _addOne_T_5 = or(_addOne_T_3, _addOne_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:81]
    node _addOne_T_6 = and(_addOne_T_2, _addOne_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:61]
    node _addOne_T_7 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:22]
    node _addOne_T_8 = bits(_T_12, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:46]
    node _addOne_T_9 = and(_addOne_T_7, _addOne_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:31]
    node _addOne_T_10 = bits(_T_12, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:66]
    node _addOne_T_11 = eq(_addOne_T_10, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:53]
    node _addOne_T_12 = and(_addOne_T_9, _addOne_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:50]
    node _addOne_T_13 = bits(_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:86]
    node _addOne_T_14 = eq(_addOne_T_13, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:73]
    node _addOne_T_15 = and(_addOne_T_12, _addOne_T_14) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:70]
    node _addOne_T_16 = bits(_T_12, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:105]
    node _addOne_T_17 = and(_addOne_T_15, _addOne_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:90]
    node _addOne_T_18 = or(_addOne_T_6, _addOne_T_17) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:102]
    node _addOne_T_19 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:22]
    node _addOne_T_20 = bits(_T_12, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:47]
    node _addOne_T_21 = bits(_T_12, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:66]
    node _addOne_T_22 = or(_addOne_T_20, _addOne_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:51]
    node _addOne_T_23 = bits(_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:85]
    node _addOne_T_24 = or(_addOne_T_22, _addOne_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:70]
    node _addOne_T_25 = and(_addOne_T_19, _addOne_T_24) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:31]
    node _addOne_T_26 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:98]
    node _addOne_T_27 = and(_addOne_T_25, _addOne_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:90]
    node _addOne_T_28 = or(_addOne_T_18, _addOne_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:110]
    node _addOne_T_29 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:22]
    node _addOne_T_30 = bits(_T_12, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:47]
    node _addOne_T_31 = bits(_T_12, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:66]
    node _addOne_T_32 = or(_addOne_T_30, _addOne_T_31) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:51]
    node _addOne_T_33 = bits(_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:85]
    node _addOne_T_34 = or(_addOne_T_32, _addOne_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:70]
    node _addOne_T_35 = and(_addOne_T_29, _addOne_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:31]
    node _addOne_T_36 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:99]
    node _addOne_T_37 = eq(_addOne_T_36, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:93]
    node _addOne_T_38 = and(_addOne_T_35, _addOne_T_37) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:90]
    node addOne = or(_addOne_T_28, _addOne_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:106]
    node _roundedFraction_T = bits(_T_12, 5, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:39]
    node roundedFraction = add(_roundedFraction_T, addOne) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:66]
    node _finalFraction_T = bits(roundedFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:44]
    node _finalFraction_T_1 = eq(_finalFraction_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:65]
    node _finalFraction_T_2 = bits(roundedFraction, 3, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 237:22]
    node _finalFraction_T_3 = bits(roundedFraction, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 237:62]
    node resultFraction = mux(_finalFraction_T_1, _finalFraction_T_2, _finalFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:28]
    node _finalExponent_T = bits(roundedFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:44]
    node _finalExponent_T_1 = eq(_finalExponent_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:65]
    node _finalExponent_T_2 = bits(roundedFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:92]
    node tempExponent = _GEN_5 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 267:28]
    node _finalExponent_T_3 = eq(tempExponent, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:125]
    node _finalExponent_T_4 = and(_finalExponent_T_2, _finalExponent_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:109]
    node _finalExponent_T_5 = or(_finalExponent_T_1, _finalExponent_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:73]
    node _finalExponent_T_6 = add(tempExponent, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 240:20]
    node _finalExponent_T_7 = tail(_finalExponent_T_6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 240:20]
    node resultExponent = mux(_finalExponent_T_5, _finalExponent_T_7, tempExponent) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:28]
    node _overflow_T = add(UInt<5>("h1f"), UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 243:50]
    node _overflow_T_1 = geq(resultExponent, _overflow_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 243:32]
    node _overflow_T_2 = eq(tempExponent, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 243:76]
    node resultOverflow = or(_overflow_T_1, _overflow_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 243:59]
    node _T_13 = eq(enable, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\Add.scala 26:15]
    node _GEN_7 = mux(_T_13, resultSign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 26:24 27:10 36:10]
    node _GEN_8 = mux(_T_13, resultExponent, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 26:24 28:14 37:14]
    node _GEN_9 = mux(_T_13, resultFraction, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 26:24 29:14 38:14]
    node _GEN_10 = mux(_T_13, resultOverflow, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 26:24 30:14 39:14]
    node _GEN_11 = mux(_T_13, isResultInfty, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 26:24 31:13 40:13]
    node isResult0 = _isResult0_T_8 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 401:{34,34}]
    node _GEN_12 = mux(_T_13, isResult0, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 26:24 32:9 41:9]
    node _GEN_13 = mux(_T_13, isResultNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 26:24 33:11 42:11]
    node _GEN_14 = mux(_T_13, resultNaNFractionValue, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 26:24 34:22 43:22]
    sign <= _GEN_7
    exponent <= pad(_GEN_8, 6)
    fraction <= _GEN_9
    overflow <= _GEN_10
    isInfty <= _GEN_11
    is0 <= _GEN_12
    isNaN <= _GEN_13
    NaNFractionValue <= _GEN_14

  module Multiply :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 9:18]
    input a_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Multiply.scala 10:13]
    input b_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Multiply.scala 11:13]
    input roundingMode : UInt<2> @[\\src\\main\\scala\\fpu8\\Multiply.scala 12:24]
    output sign : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 13:16]
    output exponent : UInt<6> @[\\src\\main\\scala\\fpu8\\Multiply.scala 14:20]
    output fraction : UInt<3> @[\\src\\main\\scala\\fpu8\\Multiply.scala 15:20]
    output overflow : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 16:20]
    output isInfty : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 17:19]
    output is0 : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 18:15]
    output isNaN : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 19:17]
    output NaNFractionValue : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 20:28]

    node _isResultNaN_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_1 = eq(_isResultNaN_T, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultNaN_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_3 = eq(_isResultNaN_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultNaN_T_4 = and(_isResultNaN_T_1, _isResultNaN_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 47:24]
    node _isResultNaN_T_5 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_6 = eq(_isResultNaN_T_5, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _isResultNaN_T_7 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_8 = eq(_isResultNaN_T_7, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultNaN_T_9 = and(_isResultNaN_T_6, _isResultNaN_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 51:26]
    node _isResultNaN_T_10 = and(_isResultNaN_T_4, _isResultNaN_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 420:45]
    node _isResultNaN_T_11 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_12 = eq(_isResultNaN_T_11, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultNaN_T_13 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_14 = eq(_isResultNaN_T_13, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultNaN_T_15 = eq(_isResultNaN_T_14, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _isResultNaN_T_16 = and(_isResultNaN_T_12, _isResultNaN_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResultNaN_T_17 = or(_isResultNaN_T_10, _isResultNaN_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 420:59]
    node _isResultNaN_T_18 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_19 = eq(_isResultNaN_T_18, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultNaN_T_20 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_21 = eq(_isResultNaN_T_20, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultNaN_T_22 = and(_isResultNaN_T_19, _isResultNaN_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 47:24]
    node _isResultNaN_T_23 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_24 = eq(_isResultNaN_T_23, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _isResultNaN_T_25 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_26 = eq(_isResultNaN_T_25, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultNaN_T_27 = and(_isResultNaN_T_24, _isResultNaN_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 51:26]
    node _isResultNaN_T_28 = and(_isResultNaN_T_22, _isResultNaN_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 420:91]
    node _isResultNaN_T_29 = or(_isResultNaN_T_17, _isResultNaN_T_28) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 420:73]
    node _isResultNaN_T_30 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_31 = eq(_isResultNaN_T_30, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultNaN_T_32 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_33 = eq(_isResultNaN_T_32, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultNaN_T_34 = eq(_isResultNaN_T_33, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _isResultNaN_T_35 = and(_isResultNaN_T_31, _isResultNaN_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResultNaN_T_36 = or(_isResultNaN_T_29, _isResultNaN_T_35) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 420:104]
    node _isResultInfty_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_1 = eq(_isResultInfty_T, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultInfty_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_3 = eq(_isResultInfty_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultInfty_T_4 = and(_isResultInfty_T_1, _isResultInfty_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 47:24]
    node _isResultInfty_T_5 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_6 = eq(_isResultInfty_T_5, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _isResultInfty_T_7 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_8 = eq(_isResultInfty_T_7, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultInfty_T_9 = and(_isResultInfty_T_6, _isResultInfty_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 51:26]
    node _isResultInfty_T_10 = eq(_isResultInfty_T_9, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 425:48]
    node _isResultInfty_T_11 = and(_isResultInfty_T_4, _isResultInfty_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 425:45]
    node _isResultInfty_T_12 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_13 = eq(_isResultInfty_T_12, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultInfty_T_14 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_15 = eq(_isResultInfty_T_14, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultInfty_T_16 = eq(_isResultInfty_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _isResultInfty_T_17 = and(_isResultInfty_T_13, _isResultInfty_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResultInfty_T_18 = eq(_isResultInfty_T_17, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 425:62]
    node _isResultInfty_T_19 = and(_isResultInfty_T_11, _isResultInfty_T_18) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 425:59]
    node _isResultInfty_T_20 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_21 = eq(_isResultInfty_T_20, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultInfty_T_22 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_23 = eq(_isResultInfty_T_22, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultInfty_T_24 = and(_isResultInfty_T_21, _isResultInfty_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 47:24]
    node _isResultInfty_T_25 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_26 = eq(_isResultInfty_T_25, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _isResultInfty_T_27 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_28 = eq(_isResultInfty_T_27, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultInfty_T_29 = and(_isResultInfty_T_26, _isResultInfty_T_28) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 51:26]
    node _isResultInfty_T_30 = eq(_isResultInfty_T_29, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 425:97]
    node _isResultInfty_T_31 = and(_isResultInfty_T_24, _isResultInfty_T_30) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 425:94]
    node _isResultInfty_T_32 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_33 = eq(_isResultInfty_T_32, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultInfty_T_34 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_35 = eq(_isResultInfty_T_34, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultInfty_T_36 = eq(_isResultInfty_T_35, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _isResultInfty_T_37 = and(_isResultInfty_T_33, _isResultInfty_T_36) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResultInfty_T_38 = eq(_isResultInfty_T_37, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 425:110]
    node _isResultInfty_T_39 = and(_isResultInfty_T_31, _isResultInfty_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 425:107]
    node _isResultInfty_T_40 = or(_isResultInfty_T_19, _isResultInfty_T_39) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 425:76]
    node _isResult0_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_1 = eq(_isResult0_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _isResult0_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_3 = eq(_isResult0_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResult0_T_4 = and(_isResult0_T_1, _isResult0_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 51:26]
    node _isResult0_T_5 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_6 = eq(_isResult0_T_5, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResult0_T_7 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_8 = eq(_isResult0_T_7, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResult0_T_9 = eq(_isResult0_T_8, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _isResult0_T_10 = and(_isResult0_T_6, _isResult0_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResult0_T_11 = eq(_isResult0_T_10, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 429:48]
    node _isResult0_T_12 = and(_isResult0_T_4, _isResult0_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 429:45]
    node _isResult0_T_13 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_14 = eq(_isResult0_T_13, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _isResult0_T_15 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_16 = eq(_isResult0_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResult0_T_17 = and(_isResult0_T_14, _isResult0_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 51:26]
    node _isResult0_T_18 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_19 = eq(_isResult0_T_18, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResult0_T_20 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_21 = eq(_isResult0_T_20, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResult0_T_22 = eq(_isResult0_T_21, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _isResult0_T_23 = and(_isResult0_T_19, _isResult0_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResult0_T_24 = eq(_isResult0_T_23, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 429:79]
    node _isResult0_T_25 = and(_isResult0_T_17, _isResult0_T_24) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 429:76]
    node _isResult0_T_26 = or(_isResult0_T_12, _isResult0_T_25) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 429:62]
    node _resultNaNFractionValue_T = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_1 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_2 = gt(_resultNaNFractionValue_T, _resultNaNFractionValue_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:33]
    node _resultNaNFractionValue_T_3 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_4 = bits(_resultNaNFractionValue_T_3, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:64]
    node _resultNaNFractionValue_T_5 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_6 = bits(_resultNaNFractionValue_T_5, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:83]
    node resultNaNFractionValue = mux(_resultNaNFractionValue_T_2, _resultNaNFractionValue_T_4, _resultNaNFractionValue_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:18]
    node _sign_T = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _sign_T_1 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node resultSign = xor(_sign_T, _sign_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 151:26]
    node _exponent_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_1 = eq(_exponent_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _exponent_T_2 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_3 = eq(_exponent_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _exponent_T_4 = and(_exponent_T_1, _exponent_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 160:25]
    node _exponent_T_5 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_6 = eq(_exponent_T_5, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _exponent_T_7 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_8 = eq(_exponent_T_7, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _exponent_T_9 = xor(_exponent_T_6, _exponent_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 162:27]
    node _exponent_T_10 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_11 = cat(UInt<2>("h0"), _exponent_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 163:16]
    node _exponent_T_12 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_13 = cat(UInt<2>("h0"), _exponent_T_12) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 163:47]
    node _exponent_T_14 = add(_exponent_T_11, _exponent_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 163:42]
    node _exponent_T_15 = tail(_exponent_T_14, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 163:42]
    node _exponent_T_16 = sub(_exponent_T_15, UInt<7>("he")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 163:74]
    node _exponent_T_17 = tail(_exponent_T_16, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 163:74]
    node _exponent_T_18 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_19 = cat(UInt<2>("h0"), _exponent_T_18) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 164:16]
    node _exponent_T_20 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_21 = cat(UInt<2>("h0"), _exponent_T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 164:47]
    node _exponent_T_22 = add(_exponent_T_19, _exponent_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 164:42]
    node _exponent_T_23 = tail(_exponent_T_22, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 164:42]
    node _exponent_T_24 = sub(_exponent_T_23, UInt<7>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 164:74]
    node _exponent_T_25 = tail(_exponent_T_24, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 164:74]
    node _exponent_T_26 = mux(_exponent_T_9, _exponent_T_17, _exponent_T_25) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 162:14]
    node exponent_1 = mux(_exponent_T_4, UInt<7>("h1c"), _exponent_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 160:12]
    node _firstOperandFraction_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _firstOperandFraction_T_1 = eq(_firstOperandFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _firstOperandFraction_T_2 = eq(_firstOperandFraction_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 166:36]
    node _firstOperandFraction_T_3 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node firstOperandFraction = cat(_firstOperandFraction_T_2, _firstOperandFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 166:35]
    node _secondOperandFraction_T = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _secondOperandFraction_T_1 = eq(_secondOperandFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _secondOperandFraction_T_2 = eq(_secondOperandFraction_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 167:37]
    node _secondOperandFraction_T_3 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node secondOperandFraction = cat(_secondOperandFraction_T_2, _secondOperandFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 167:36]
    node _product_partialProducts_compare_T = bits(secondOperandFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node product_partialProducts_compare = mux(_product_partialProducts_compare_T, UInt<3>("h7"), UInt<3>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _product_partialProducts_T = and(firstOperandFraction, product_partialProducts_compare) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node product_partialProducts_0 = shl(_product_partialProducts_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _product_partialProducts_compare_T_1 = bits(secondOperandFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node product_partialProducts_compare_1 = mux(_product_partialProducts_compare_T_1, UInt<3>("h7"), UInt<3>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _product_partialProducts_T_1 = and(firstOperandFraction, product_partialProducts_compare_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node product_partialProducts_1 = shl(_product_partialProducts_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _product_partialProducts_compare_T_2 = bits(secondOperandFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node product_partialProducts_compare_2 = mux(_product_partialProducts_compare_T_2, UInt<3>("h7"), UInt<3>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _product_partialProducts_T_2 = and(firstOperandFraction, product_partialProducts_compare_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node product_partialProducts_2 = shl(_product_partialProducts_T_2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _product_partialSums_T = add(product_partialProducts_0, product_partialProducts_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 107:34]
    node product = add(_product_partialSums_T, product_partialProducts_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 107:39]
    node _T = bits(product, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 294:64]
    node _leadingZeros_T = bits(_T, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_1 = bits(_leadingZeros_T, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_2 = bits(_leadingZeros_T_1, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_3 = bits(_leadingZeros_T_1, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_4 = cat(_leadingZeros_T_2, _leadingZeros_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_5 = bits(_leadingZeros_T, 3, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_6 = bits(_leadingZeros_T_5, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_7 = bits(_leadingZeros_T_5, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_8 = cat(_leadingZeros_T_6, _leadingZeros_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_9 = cat(_leadingZeros_T_4, _leadingZeros_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_10 = bits(_T, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_11 = cat(_leadingZeros_T_9, _leadingZeros_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_12 = bits(_leadingZeros_T_11, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_13 = bits(_leadingZeros_T_11, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_14 = bits(_leadingZeros_T_11, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_15 = bits(_leadingZeros_T_11, 3, 3) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_16 = bits(_leadingZeros_T_11, 4, 4) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_17 = mux(_leadingZeros_T_15, UInt<2>("h3"), UInt<3>("h4")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_18 = mux(_leadingZeros_T_14, UInt<2>("h2"), _leadingZeros_T_17) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_19 = mux(_leadingZeros_T_13, UInt<1>("h1"), _leadingZeros_T_18) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_20 = mux(_leadingZeros_T_12, UInt<1>("h0"), _leadingZeros_T_19) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node shift = _leadingZeros_T_20 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 55:28 58:18]
    node _shiftedValue_T = dshl(_T, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:27]
    node _exponentShiftRight_T = sub(UInt<7>("h0"), exponent_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 296:58]
    node exponentShiftRight = tail(_exponentShiftRight_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 296:58]
    node _exponentShiftLeft_T = sub(exponent_1, UInt<7>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 298:38]
    node exponentShiftLeft = tail(_exponentShiftLeft_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 298:38]
    node _T_1 = bits(exponent_1, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 304:19]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 304:10]
    node _T_3 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 304:52]
    node _T_4 = geq(_T_3, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 304:72]
    node _T_5 = and(_T_2, _T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 304:40]
    node _T_6 = bits(product, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 305:25]
    node _T_7 = and(_T_5, _T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 305:7]
    node _T_8 = bits(exponent_1, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 308:25]
    node _T_9 = eq(_T_8, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 308:16]
    node _T_10 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 308:58]
    node _T_11 = lt(_T_10, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 308:78]
    node _T_12 = and(_T_9, _T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 308:46]
    node _T_13 = bits(product, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 309:25]
    node _T_14 = and(_T_12, _T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 309:7]
    node _tempExponent_T = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 310:31]
    node _tempExponent_T_1 = add(_tempExponent_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 310:38]
    node _tempExponent_T_2 = tail(_tempExponent_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 310:38]
    node _tempFraction_T = bits(product, 5, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 311:42]
    node _tempFraction_T_1 = bits(product, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 311:89]
    node _tempFraction_T_2 = orr(_tempFraction_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 311:96]
    node _tempFraction_T_3 = cat(_tempFraction_T, _tempFraction_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 311:26]
    node _T_15 = bits(exponent_1, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 312:25]
    node _T_16 = eq(_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 312:16]
    node _T_17 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 312:58]
    node _T_18 = gt(_T_17, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 312:78]
    node _T_19 = and(_T_16, _T_18) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 312:46]
    node shiftedCalcValue = bits(_shiftedValue_T, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 56:28 60:18]
    node _T_20 = bits(shiftedCalcValue, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 313:26]
    node _T_21 = and(_T_19, _T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 313:7]
    node _tempExponent_T_3 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 314:31]
    node _tempExponent_T_4 = sub(_tempExponent_T_3, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 314:51]
    node _tempExponent_T_5 = tail(_tempExponent_T_4, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 314:51]
    node _T_22 = bits(exponent_1, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 318:21]
    node _T_23 = eq(_T_22, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 318:12]
    node _T_24 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 318:54]
    node _T_25 = gt(_T_24, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 318:74]
    node _T_26 = and(_T_23, _T_25) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 318:42]
    node _tempFraction_T_4 = bits(product, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 319:40]
    node _tempFraction_T_5 = dshl(_tempFraction_T_4, exponentShiftLeft) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 319:71]
    node _tempFraction_T_6 = bits(product, 5, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 321:44]
    node _tempFraction_T_7 = bits(product, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 321:91]
    node _tempFraction_T_8 = orr(_tempFraction_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 321:98]
    node _tempFraction_T_9 = cat(_tempFraction_T_6, _tempFraction_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 321:28]
    node _tempFraction_T_10 = dshr(_tempFraction_T_9, exponentShiftRight) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 321:110]
    node _GEN_0 = mux(_T_26, _tempFraction_T_5, _tempFraction_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 318:82 319:22 321:22]
    node _GEN_1 = mux(_T_21, _tempExponent_T_5, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 313:55 314:20 317:20]
    node _GEN_2 = mux(_T_21, shiftedCalcValue, _GEN_0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 313:55 315:20]
    node _GEN_3 = mux(_T_14, _tempExponent_T_2, _GEN_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 309:54 310:20]
    node _GEN_4 = mux(_T_14, _tempFraction_T_3, _GEN_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 309:54 311:20]
    node _GEN_5 = mux(_T_7, UInt<5>("h1f"), _GEN_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 305:54 306:20]
    node _GEN_6 = mux(_T_7, UInt<5>("h1f"), _GEN_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 305:54 307:20]
    node _addOne_T = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:33]
    node tempFraction = bits(_GEN_6, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 302:28]
    node _addOne_T_1 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:57]
    node _addOne_T_2 = and(_addOne_T, _addOne_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:42]
    node _addOne_T_3 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:77]
    node _addOne_T_4 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:96]
    node _addOne_T_5 = or(_addOne_T_3, _addOne_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:81]
    node _addOne_T_6 = and(_addOne_T_2, _addOne_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:61]
    node _addOne_T_7 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:22]
    node _addOne_T_8 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:46]
    node _addOne_T_9 = and(_addOne_T_7, _addOne_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:31]
    node _addOne_T_10 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:66]
    node _addOne_T_11 = eq(_addOne_T_10, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:53]
    node _addOne_T_12 = and(_addOne_T_9, _addOne_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:50]
    node _addOne_T_13 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:86]
    node _addOne_T_14 = eq(_addOne_T_13, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:73]
    node _addOne_T_15 = and(_addOne_T_12, _addOne_T_14) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:70]
    node _addOne_T_16 = bits(tempFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:105]
    node _addOne_T_17 = and(_addOne_T_15, _addOne_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:90]
    node _addOne_T_18 = or(_addOne_T_6, _addOne_T_17) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:102]
    node _addOne_T_19 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:22]
    node _addOne_T_20 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:47]
    node _addOne_T_21 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:66]
    node _addOne_T_22 = or(_addOne_T_20, _addOne_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:51]
    node _addOne_T_23 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:85]
    node _addOne_T_24 = or(_addOne_T_22, _addOne_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:70]
    node _addOne_T_25 = and(_addOne_T_19, _addOne_T_24) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:31]
    node _addOne_T_26 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:98]
    node _addOne_T_27 = and(_addOne_T_25, _addOne_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:90]
    node _addOne_T_28 = or(_addOne_T_18, _addOne_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:110]
    node _addOne_T_29 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:22]
    node _addOne_T_30 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:47]
    node _addOne_T_31 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:66]
    node _addOne_T_32 = or(_addOne_T_30, _addOne_T_31) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:51]
    node _addOne_T_33 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:85]
    node _addOne_T_34 = or(_addOne_T_32, _addOne_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:70]
    node _addOne_T_35 = and(_addOne_T_29, _addOne_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:31]
    node _addOne_T_36 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:99]
    node _addOne_T_37 = eq(_addOne_T_36, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:93]
    node _addOne_T_38 = and(_addOne_T_35, _addOne_T_37) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:90]
    node addOne = or(_addOne_T_28, _addOne_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:106]
    node _roundedFraction_T = bits(tempFraction, 4, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:39]
    node roundedFraction = add(_roundedFraction_T, addOne) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:66]
    node _finalFraction_T = bits(roundedFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:44]
    node _finalFraction_T_1 = eq(_finalFraction_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:65]
    node _finalFraction_T_2 = bits(roundedFraction, 3, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 237:22]
    node _finalFraction_T_3 = bits(roundedFraction, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 237:62]
    node resultFraction = mux(_finalFraction_T_1, _finalFraction_T_2, _finalFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:28]
    node _finalExponent_T = bits(roundedFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:44]
    node _finalExponent_T_1 = eq(_finalExponent_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:65]
    node _finalExponent_T_2 = bits(roundedFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:92]
    node tempExponent = bits(_GEN_5, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 300:28]
    node _finalExponent_T_3 = eq(tempExponent, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:125]
    node _finalExponent_T_4 = and(_finalExponent_T_2, _finalExponent_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:109]
    node _finalExponent_T_5 = or(_finalExponent_T_1, _finalExponent_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:73]
    node _finalExponent_T_6 = add(tempExponent, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 240:20]
    node _finalExponent_T_7 = tail(_finalExponent_T_6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 240:20]
    node resultExponent = mux(_finalExponent_T_5, _finalExponent_T_7, tempExponent) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:28]
    node _overflow_T = add(UInt<5>("h1f"), UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 243:50]
    node _overflow_T_1 = geq(resultExponent, _overflow_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 243:32]
    node _overflow_T_2 = eq(tempExponent, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 243:76]
    node resultOverflow = or(_overflow_T_1, _overflow_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 243:59]
    node _T_27 = eq(enable, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 25:15]
    node _GEN_7 = mux(_T_27, resultSign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 25:24 26:10 35:10]
    node _GEN_8 = mux(_T_27, resultExponent, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 25:24 27:14 36:14]
    node _GEN_9 = mux(_T_27, resultFraction, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 25:24 28:14 37:14]
    node _GEN_10 = mux(_T_27, resultOverflow, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 25:24 29:14 38:14]
    node isResultInfty = _isResultInfty_T_40 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 425:{30,30}]
    node _GEN_11 = mux(_T_27, isResultInfty, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 25:24 30:13 39:13]
    node isResult0 = _isResult0_T_26 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 429:{34,34}]
    node _GEN_12 = mux(_T_27, isResult0, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 25:24 31:9 40:9]
    node isResultNaN = _isResultNaN_T_36 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 420:{30,30}]
    node _GEN_13 = mux(_T_27, isResultNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 25:24 32:11 41:11]
    node _GEN_14 = mux(_T_27, resultNaNFractionValue, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 25:24 33:22 42:22]
    sign <= _GEN_7
    exponent <= pad(_GEN_8, 6)
    fraction <= _GEN_9
    overflow <= _GEN_10
    isInfty <= _GEN_11
    is0 <= _GEN_12
    isNaN <= _GEN_13
    NaNFractionValue <= _GEN_14

  module Divide :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 9:18]
    input a_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Divide.scala 10:13]
    input b_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Divide.scala 11:13]
    input roundingMode : UInt<2> @[\\src\\main\\scala\\fpu8\\Divide.scala 12:24]
    output sign : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 13:16]
    output exponent : UInt<6> @[\\src\\main\\scala\\fpu8\\Divide.scala 14:20]
    output fraction : UInt<3> @[\\src\\main\\scala\\fpu8\\Divide.scala 15:20]
    output overflow : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 16:20]
    output isInfty : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 17:19]
    output is0 : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 18:15]
    output isNaN : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 19:17]
    output NaNFractionValue : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 20:28]

    node _isResultNaN_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_1 = eq(_isResultNaN_T, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultNaN_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_3 = eq(_isResultNaN_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultNaN_T_4 = eq(_isResultNaN_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _isResultNaN_T_5 = and(_isResultNaN_T_1, _isResultNaN_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResultNaN_T_6 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_7 = eq(_isResultNaN_T_6, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultNaN_T_8 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_9 = eq(_isResultNaN_T_8, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultNaN_T_10 = eq(_isResultNaN_T_9, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _isResultNaN_T_11 = and(_isResultNaN_T_7, _isResultNaN_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResultNaN_T_12 = or(_isResultNaN_T_5, _isResultNaN_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 448:42]
    node _isResultNaN_T_13 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_14 = eq(_isResultNaN_T_13, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _isResultNaN_T_15 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_16 = eq(_isResultNaN_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultNaN_T_17 = and(_isResultNaN_T_14, _isResultNaN_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 51:26]
    node _isResultNaN_T_18 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_19 = eq(_isResultNaN_T_18, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _isResultNaN_T_20 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_21 = eq(_isResultNaN_T_20, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultNaN_T_22 = and(_isResultNaN_T_19, _isResultNaN_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 51:26]
    node _isResultNaN_T_23 = and(_isResultNaN_T_17, _isResultNaN_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 448:70]
    node _isResultNaN_T_24 = or(_isResultNaN_T_12, _isResultNaN_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 448:57]
    node _isResultNaN_T_25 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_26 = eq(_isResultNaN_T_25, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultNaN_T_27 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_28 = eq(_isResultNaN_T_27, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultNaN_T_29 = and(_isResultNaN_T_26, _isResultNaN_T_28) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 47:24]
    node _isResultNaN_T_30 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_31 = eq(_isResultNaN_T_30, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultNaN_T_32 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_33 = eq(_isResultNaN_T_32, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultNaN_T_34 = and(_isResultNaN_T_31, _isResultNaN_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 47:24]
    node _isResultNaN_T_35 = and(_isResultNaN_T_29, _isResultNaN_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 448:101]
    node _isResultNaN_T_36 = or(_isResultNaN_T_24, _isResultNaN_T_35) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 448:84]
    node _isResultInfty_T = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_1 = eq(_isResultInfty_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _isResultInfty_T_2 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_3 = eq(_isResultInfty_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultInfty_T_4 = and(_isResultInfty_T_1, _isResultInfty_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 51:26]
    node _isResultInfty_T_5 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_6 = eq(_isResultInfty_T_5, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _isResultInfty_T_7 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_8 = eq(_isResultInfty_T_7, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultInfty_T_9 = and(_isResultInfty_T_6, _isResultInfty_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 51:26]
    node _isResultInfty_T_10 = eq(_isResultInfty_T_9, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 453:45]
    node _isResultInfty_T_11 = and(_isResultInfty_T_4, _isResultInfty_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 453:42]
    node _isResultInfty_T_12 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_13 = eq(_isResultInfty_T_12, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultInfty_T_14 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_15 = eq(_isResultInfty_T_14, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultInfty_T_16 = and(_isResultInfty_T_13, _isResultInfty_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 47:24]
    node _isResultInfty_T_17 = eq(_isResultInfty_T_16, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 453:58]
    node _isResultInfty_T_18 = and(_isResultInfty_T_11, _isResultInfty_T_17) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 453:55]
    node _isResultInfty_T_19 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_20 = eq(_isResultInfty_T_19, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultInfty_T_21 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_22 = eq(_isResultInfty_T_21, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultInfty_T_23 = eq(_isResultInfty_T_22, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _isResultInfty_T_24 = and(_isResultInfty_T_20, _isResultInfty_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResultInfty_T_25 = eq(_isResultInfty_T_24, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 453:75]
    node _isResultInfty_T_26 = and(_isResultInfty_T_18, _isResultInfty_T_25) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 453:72]
    node _isResultInfty_T_27 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_28 = eq(_isResultInfty_T_27, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultInfty_T_29 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_30 = eq(_isResultInfty_T_29, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultInfty_T_31 = and(_isResultInfty_T_28, _isResultInfty_T_30) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 47:24]
    node _isResultInfty_T_32 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_33 = eq(_isResultInfty_T_32, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultInfty_T_34 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_35 = eq(_isResultInfty_T_34, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResultInfty_T_36 = eq(_isResultInfty_T_35, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _isResultInfty_T_37 = and(_isResultInfty_T_33, _isResultInfty_T_36) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResultInfty_T_38 = eq(_isResultInfty_T_37, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 453:108]
    node _isResultInfty_T_39 = and(_isResultInfty_T_31, _isResultInfty_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 453:105]
    node _isResultInfty_T_40 = or(_isResultInfty_T_26, _isResultInfty_T_39) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 453:88]
    node _isResult0_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_1 = eq(_isResult0_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _isResult0_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_3 = eq(_isResult0_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResult0_T_4 = and(_isResult0_T_1, _isResult0_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 51:26]
    node _isResult0_T_5 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_6 = eq(_isResult0_T_5, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _isResult0_T_7 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_8 = eq(_isResult0_T_7, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResult0_T_9 = and(_isResult0_T_6, _isResult0_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 51:26]
    node _isResult0_T_10 = eq(_isResult0_T_9, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 458:44]
    node _isResult0_T_11 = and(_isResult0_T_4, _isResult0_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 458:41]
    node _isResult0_T_12 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_13 = eq(_isResult0_T_12, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResult0_T_14 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_15 = eq(_isResult0_T_14, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResult0_T_16 = eq(_isResult0_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _isResult0_T_17 = and(_isResult0_T_13, _isResult0_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResult0_T_18 = eq(_isResult0_T_17, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 458:58]
    node _isResult0_T_19 = and(_isResult0_T_11, _isResult0_T_18) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 458:55]
    node _isResult0_T_20 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_21 = eq(_isResult0_T_20, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResult0_T_22 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_23 = eq(_isResult0_T_22, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResult0_T_24 = and(_isResult0_T_21, _isResult0_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 47:24]
    node _isResult0_T_25 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_26 = eq(_isResult0_T_25, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResult0_T_27 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_28 = eq(_isResult0_T_27, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResult0_T_29 = and(_isResult0_T_26, _isResult0_T_28) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 47:24]
    node _isResult0_T_30 = eq(_isResult0_T_29, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 458:93]
    node _isResult0_T_31 = and(_isResult0_T_24, _isResult0_T_30) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 458:90]
    node _isResult0_T_32 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_33 = eq(_isResult0_T_32, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResult0_T_34 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_35 = eq(_isResult0_T_34, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResult0_T_36 = eq(_isResult0_T_35, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _isResult0_T_37 = and(_isResult0_T_33, _isResult0_T_36) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResult0_T_38 = eq(_isResult0_T_37, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 458:110]
    node _isResult0_T_39 = and(_isResult0_T_31, _isResult0_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 458:107]
    node _isResult0_T_40 = or(_isResult0_T_19, _isResult0_T_39) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 458:72]
    node _resultNaNFractionValue_T = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_1 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_2 = gt(_resultNaNFractionValue_T, _resultNaNFractionValue_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:33]
    node _resultNaNFractionValue_T_3 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_4 = bits(_resultNaNFractionValue_T_3, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:64]
    node _resultNaNFractionValue_T_5 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_6 = bits(_resultNaNFractionValue_T_5, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:83]
    node resultNaNFractionValue = mux(_resultNaNFractionValue_T_2, _resultNaNFractionValue_T_4, _resultNaNFractionValue_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:18]
    node _sign_T = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _sign_T_1 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node resultSign = xor(_sign_T, _sign_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 173:26]
    node _tempDividendFraction_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _tempDividendFraction_T_1 = eq(_tempDividendFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _tempDividendFraction_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _tempDividendFraction_T_3 = cat(_tempDividendFraction_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 175:10]
    node _tempDividendFraction_T_4 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _tempDividendFraction_T_5 = cat(UInt<1>("h1"), _tempDividendFraction_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 176:10]
    node tempDividendFraction = mux(_tempDividendFraction_T_1, _tempDividendFraction_T_3, _tempDividendFraction_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 174:35]
    node _tempDivisorFraction_T = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _tempDivisorFraction_T_1 = eq(_tempDivisorFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _tempDivisorFraction_T_2 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _tempDivisorFraction_T_3 = cat(_tempDivisorFraction_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 179:10]
    node _tempDivisorFraction_T_4 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _tempDivisorFraction_T_5 = cat(UInt<1>("h1"), _tempDivisorFraction_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 180:10]
    node tempDivisorFraction = mux(_tempDivisorFraction_T_1, _tempDivisorFraction_T_3, _tempDivisorFraction_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 178:34]
    node _tempExponent_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _tempExponent_T_1 = cat(UInt<2>("h0"), _tempExponent_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 182:27]
    node _tempExponent_T_2 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _tempExponent_T_3 = cat(UInt<2>("h0"), _tempExponent_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 183:10]
    node _tempExponent_T_4 = sub(_tempExponent_T_1, _tempExponent_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 182:53]
    node _tempExponent_T_5 = tail(_tempExponent_T_4, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 182:53]
    node _tempExponent_T_6 = add(_tempExponent_T_5, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 183:37]
    node tempExponent = tail(_tempExponent_T_6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 183:37]
    node _leadingZeros_T = bits(tempDividendFraction, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_1 = bits(_leadingZeros_T, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_2 = bits(_leadingZeros_T, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_3 = cat(_leadingZeros_T_1, _leadingZeros_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_4 = bits(tempDividendFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_5 = cat(_leadingZeros_T_3, _leadingZeros_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_6 = bits(_leadingZeros_T_5, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_7 = bits(_leadingZeros_T_5, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_8 = bits(_leadingZeros_T_5, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_9 = mux(_leadingZeros_T_7, UInt<1>("h1"), UInt<2>("h2")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_10 = mux(_leadingZeros_T_6, UInt<1>("h0"), _leadingZeros_T_9) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node dividendShift = _leadingZeros_T_10 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 55:28 58:18]
    node _shiftedValue_T = dshl(tempDividendFraction, dividendShift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:27]
    node _leadingZeros_T_11 = bits(tempDivisorFraction, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_12 = bits(_leadingZeros_T_11, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_13 = bits(_leadingZeros_T_11, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_14 = cat(_leadingZeros_T_12, _leadingZeros_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_15 = bits(tempDivisorFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_16 = cat(_leadingZeros_T_14, _leadingZeros_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_17 = bits(_leadingZeros_T_16, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_18 = bits(_leadingZeros_T_16, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_19 = bits(_leadingZeros_T_16, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_20 = mux(_leadingZeros_T_18, UInt<1>("h1"), UInt<2>("h2")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_21 = mux(_leadingZeros_T_17, UInt<1>("h0"), _leadingZeros_T_20) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node divisorShift = _leadingZeros_T_21 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 55:28 58:18]
    node _shiftedValue_T_1 = dshl(tempDivisorFraction, divisorShift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:27]
    node _exponent_T = sub(tempExponent, dividendShift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 190:33]
    node _exponent_T_1 = tail(_exponent_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 190:33]
    node _exponent_T_2 = add(_exponent_T_1, divisorShift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 190:49]
    node exponent_1 = tail(_exponent_T_2, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 190:49]
    node divisorFraction = bits(_shiftedValue_T_1, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 56:28 60:18]
    node _quotient_initGuess_T = bits(divisorFraction, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 198:54]
    node quotient_rom_0 = UInt<3>("h7") @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 82:25 87:17]
    node _GEN_0 = validif(eq(UInt<1>("h0"), _quotient_initGuess_T), quotient_rom_0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 198:{24,24}]
    node quotient_rom_1 = UInt<3>("h5") @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 82:25 87:17]
    node _GEN_1 = mux(eq(UInt<1>("h1"), _quotient_initGuess_T), quotient_rom_1, _GEN_0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 198:{24,24}]
    node quotient_rom_2 = UInt<3>("h3") @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 82:25 87:17]
    node _GEN_2 = mux(eq(UInt<2>("h2"), _quotient_initGuess_T), quotient_rom_2, _GEN_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 198:{24,24}]
    node quotient_rom_3 = UInt<3>("h1") @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 82:25 87:17]
    node _GEN_3 = mux(eq(UInt<2>("h3"), _quotient_initGuess_T), quotient_rom_3, _GEN_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 198:{24,24}]
    node _quotient_rom_quotient_initGuess_T = _GEN_3 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 198:24]
    node quotient_initGuess = cat(UInt<2>("h1"), _quotient_rom_quotient_initGuess_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 198:24]
    node _quotient_secondGuess_firstStep_partialProducts_compare_T = bits(divisorFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node quotient_secondGuess_firstStep_partialProducts_compare = mux(_quotient_secondGuess_firstStep_partialProducts_compare_T, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _quotient_secondGuess_firstStep_partialProducts_T = and(quotient_initGuess, quotient_secondGuess_firstStep_partialProducts_compare) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node quotient_secondGuess_firstStep_partialProducts_0 = shl(_quotient_secondGuess_firstStep_partialProducts_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _quotient_secondGuess_firstStep_partialProducts_compare_T_1 = bits(divisorFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node quotient_secondGuess_firstStep_partialProducts_compare_1 = mux(_quotient_secondGuess_firstStep_partialProducts_compare_T_1, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _quotient_secondGuess_firstStep_partialProducts_T_1 = and(quotient_initGuess, quotient_secondGuess_firstStep_partialProducts_compare_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node quotient_secondGuess_firstStep_partialProducts_1 = shl(_quotient_secondGuess_firstStep_partialProducts_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _quotient_secondGuess_firstStep_partialProducts_compare_T_2 = bits(divisorFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node quotient_secondGuess_firstStep_partialProducts_compare_2 = mux(_quotient_secondGuess_firstStep_partialProducts_compare_T_2, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _quotient_secondGuess_firstStep_partialProducts_T_2 = and(quotient_initGuess, quotient_secondGuess_firstStep_partialProducts_compare_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node quotient_secondGuess_firstStep_partialProducts_2 = shl(_quotient_secondGuess_firstStep_partialProducts_T_2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _quotient_secondGuess_firstStep_partialSums_T = add(quotient_secondGuess_firstStep_partialProducts_0, quotient_secondGuess_firstStep_partialProducts_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 107:34]
    node quotient_secondGuess_firstStep = add(_quotient_secondGuess_firstStep_partialSums_T, quotient_secondGuess_firstStep_partialProducts_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 107:39]
    node _quotient_secondGuess_firstStepRnd_T = bits(quotient_secondGuess_firstStep, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 206:46]
    node _quotient_secondGuess_firstStepRnd_roundedValue_T = bits(_quotient_secondGuess_firstStepRnd_T, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:23]
    node quotient_secondGuess_firstStepRnd = cat(UInt<1>("h0"), _quotient_secondGuess_firstStepRnd_roundedValue_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:12]
    node _quotient_secondGuess_secondStep_T = bits(quotient_secondGuess_firstStepRnd, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:38]
    node _quotient_secondGuess_secondStep_T_1 = not(_quotient_secondGuess_secondStep_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:25]
    node _quotient_secondGuess_secondStep_T_2 = add(_quotient_secondGuess_secondStep_T_1, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:70]
    node quotient_secondGuess_secondStep = tail(_quotient_secondGuess_secondStep_T_2, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:70]
    node _quotient_secondGuess_finalStep_partialProducts_compare_T = bits(quotient_secondGuess_secondStep, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node quotient_secondGuess_finalStep_partialProducts_compare = mux(_quotient_secondGuess_finalStep_partialProducts_compare_T, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _quotient_secondGuess_finalStep_partialProducts_T = and(quotient_initGuess, quotient_secondGuess_finalStep_partialProducts_compare) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node quotient_secondGuess_finalStep_partialProducts_0 = shl(_quotient_secondGuess_finalStep_partialProducts_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _quotient_secondGuess_finalStep_partialProducts_compare_T_1 = bits(quotient_secondGuess_secondStep, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node quotient_secondGuess_finalStep_partialProducts_compare_1 = mux(_quotient_secondGuess_finalStep_partialProducts_compare_T_1, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _quotient_secondGuess_finalStep_partialProducts_T_1 = and(quotient_initGuess, quotient_secondGuess_finalStep_partialProducts_compare_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node quotient_secondGuess_finalStep_partialProducts_1 = shl(_quotient_secondGuess_finalStep_partialProducts_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _quotient_secondGuess_finalStep_partialProducts_compare_T_2 = bits(quotient_secondGuess_secondStep, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node quotient_secondGuess_finalStep_partialProducts_compare_2 = mux(_quotient_secondGuess_finalStep_partialProducts_compare_T_2, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _quotient_secondGuess_finalStep_partialProducts_T_2 = and(quotient_initGuess, quotient_secondGuess_finalStep_partialProducts_compare_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node quotient_secondGuess_finalStep_partialProducts_2 = shl(_quotient_secondGuess_finalStep_partialProducts_T_2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _quotient_secondGuess_finalStep_partialProducts_compare_T_3 = bits(quotient_secondGuess_secondStep, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node quotient_secondGuess_finalStep_partialProducts_compare_3 = mux(_quotient_secondGuess_finalStep_partialProducts_compare_T_3, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _quotient_secondGuess_finalStep_partialProducts_T_3 = and(quotient_initGuess, quotient_secondGuess_finalStep_partialProducts_compare_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node quotient_secondGuess_finalStep_partialProducts_3 = shl(_quotient_secondGuess_finalStep_partialProducts_T_3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _quotient_secondGuess_finalStep_partialProducts_compare_T_4 = bits(quotient_secondGuess_secondStep, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node quotient_secondGuess_finalStep_partialProducts_compare_4 = mux(_quotient_secondGuess_finalStep_partialProducts_compare_T_4, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _quotient_secondGuess_finalStep_partialProducts_T_4 = and(quotient_initGuess, quotient_secondGuess_finalStep_partialProducts_compare_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node quotient_secondGuess_finalStep_partialProducts_4 = shl(_quotient_secondGuess_finalStep_partialProducts_T_4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _quotient_secondGuess_finalStep_partialSums_T = add(quotient_secondGuess_finalStep_partialProducts_0, quotient_secondGuess_finalStep_partialProducts_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 107:34]
    node quotient_secondGuess_finalStep_partialSums_0 = add(_quotient_secondGuess_finalStep_partialSums_T, quotient_secondGuess_finalStep_partialProducts_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 107:39]
    node quotient_secondGuess_finalStep_partialSums_1 = add(quotient_secondGuess_finalStep_partialProducts_3, quotient_secondGuess_finalStep_partialProducts_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 108:31]
    node _quotient_secondGuess_finalStep_T = add(quotient_secondGuess_finalStep_partialSums_0, quotient_secondGuess_finalStep_partialSums_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 104:15]
    node quotient_secondGuess_finalStep = bits(_quotient_secondGuess_finalStep_T, 9, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 213:27 214:17]
    node _quotient_secondGuess_res_T = bits(quotient_secondGuess_finalStep, 8, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 216:37]
    node _quotient_secondGuess_res_roundedValue_T = bits(_quotient_secondGuess_res_T, 8, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 72:14]
    node _quotient_secondGuess_res_roundedValue_T_1 = bits(_quotient_secondGuess_res_T, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 72:44]
    node _quotient_secondGuess_res_roundedValue_T_2 = bits(_quotient_secondGuess_res_T, 2, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 72:66]
    node _quotient_secondGuess_res_roundedValue_T_3 = orr(_quotient_secondGuess_res_roundedValue_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 72:95]
    node _quotient_secondGuess_res_roundedValue_T_4 = and(_quotient_secondGuess_res_roundedValue_T_1, _quotient_secondGuess_res_roundedValue_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 72:59]
    node quotient_secondGuess = add(_quotient_secondGuess_res_roundedValue_T, _quotient_secondGuess_res_roundedValue_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 72:35]
    node _quotient_finalGuess_T = bits(quotient_secondGuess, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 223:43]
    node _quotient_finalGuess_firstStep_partialProducts_compare_T = bits(divisorFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node quotient_finalGuess_firstStep_partialProducts_compare = mux(_quotient_finalGuess_firstStep_partialProducts_compare_T, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _quotient_finalGuess_firstStep_partialProducts_T = and(_quotient_finalGuess_T, quotient_finalGuess_firstStep_partialProducts_compare) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node quotient_finalGuess_firstStep_partialProducts_0 = shl(_quotient_finalGuess_firstStep_partialProducts_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _quotient_finalGuess_firstStep_partialProducts_compare_T_1 = bits(divisorFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node quotient_finalGuess_firstStep_partialProducts_compare_1 = mux(_quotient_finalGuess_firstStep_partialProducts_compare_T_1, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _quotient_finalGuess_firstStep_partialProducts_T_1 = and(_quotient_finalGuess_T, quotient_finalGuess_firstStep_partialProducts_compare_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node quotient_finalGuess_firstStep_partialProducts_1 = shl(_quotient_finalGuess_firstStep_partialProducts_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _quotient_finalGuess_firstStep_partialProducts_compare_T_2 = bits(divisorFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node quotient_finalGuess_firstStep_partialProducts_compare_2 = mux(_quotient_finalGuess_firstStep_partialProducts_compare_T_2, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _quotient_finalGuess_firstStep_partialProducts_T_2 = and(_quotient_finalGuess_T, quotient_finalGuess_firstStep_partialProducts_compare_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node quotient_finalGuess_firstStep_partialProducts_2 = shl(_quotient_finalGuess_firstStep_partialProducts_T_2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _quotient_finalGuess_firstStep_partialSums_T = add(quotient_finalGuess_firstStep_partialProducts_0, quotient_finalGuess_firstStep_partialProducts_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 107:34]
    node quotient_finalGuess_firstStep = add(_quotient_finalGuess_firstStep_partialSums_T, quotient_finalGuess_firstStep_partialProducts_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 107:39]
    node _quotient_finalGuess_firstStepRnd_T = bits(quotient_finalGuess_firstStep, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 206:46]
    node _quotient_finalGuess_firstStepRnd_roundedValue_T = bits(_quotient_finalGuess_firstStepRnd_T, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:23]
    node quotient_finalGuess_firstStepRnd = cat(UInt<1>("h0"), _quotient_finalGuess_firstStepRnd_roundedValue_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:12]
    node _quotient_finalGuess_secondStep_T = bits(quotient_finalGuess_firstStepRnd, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:38]
    node _quotient_finalGuess_secondStep_T_1 = not(_quotient_finalGuess_secondStep_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:25]
    node _quotient_finalGuess_secondStep_T_2 = add(_quotient_finalGuess_secondStep_T_1, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:70]
    node quotient_finalGuess_secondStep = tail(_quotient_finalGuess_secondStep_T_2, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:70]
    node _quotient_finalGuess_finalStep_partialProducts_compare_T = bits(quotient_finalGuess_secondStep, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node quotient_finalGuess_finalStep_partialProducts_compare = mux(_quotient_finalGuess_finalStep_partialProducts_compare_T, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _quotient_finalGuess_finalStep_partialProducts_T = and(_quotient_finalGuess_T, quotient_finalGuess_finalStep_partialProducts_compare) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node quotient_finalGuess_finalStep_partialProducts_0 = shl(_quotient_finalGuess_finalStep_partialProducts_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _quotient_finalGuess_finalStep_partialProducts_compare_T_1 = bits(quotient_finalGuess_secondStep, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node quotient_finalGuess_finalStep_partialProducts_compare_1 = mux(_quotient_finalGuess_finalStep_partialProducts_compare_T_1, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _quotient_finalGuess_finalStep_partialProducts_T_1 = and(_quotient_finalGuess_T, quotient_finalGuess_finalStep_partialProducts_compare_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node quotient_finalGuess_finalStep_partialProducts_1 = shl(_quotient_finalGuess_finalStep_partialProducts_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _quotient_finalGuess_finalStep_partialProducts_compare_T_2 = bits(quotient_finalGuess_secondStep, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node quotient_finalGuess_finalStep_partialProducts_compare_2 = mux(_quotient_finalGuess_finalStep_partialProducts_compare_T_2, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _quotient_finalGuess_finalStep_partialProducts_T_2 = and(_quotient_finalGuess_T, quotient_finalGuess_finalStep_partialProducts_compare_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node quotient_finalGuess_finalStep_partialProducts_2 = shl(_quotient_finalGuess_finalStep_partialProducts_T_2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _quotient_finalGuess_finalStep_partialProducts_compare_T_3 = bits(quotient_finalGuess_secondStep, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node quotient_finalGuess_finalStep_partialProducts_compare_3 = mux(_quotient_finalGuess_finalStep_partialProducts_compare_T_3, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _quotient_finalGuess_finalStep_partialProducts_T_3 = and(_quotient_finalGuess_T, quotient_finalGuess_finalStep_partialProducts_compare_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node quotient_finalGuess_finalStep_partialProducts_3 = shl(_quotient_finalGuess_finalStep_partialProducts_T_3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _quotient_finalGuess_finalStep_partialProducts_compare_T_4 = bits(quotient_finalGuess_secondStep, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node quotient_finalGuess_finalStep_partialProducts_compare_4 = mux(_quotient_finalGuess_finalStep_partialProducts_compare_T_4, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _quotient_finalGuess_finalStep_partialProducts_T_4 = and(_quotient_finalGuess_T, quotient_finalGuess_finalStep_partialProducts_compare_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node quotient_finalGuess_finalStep_partialProducts_4 = shl(_quotient_finalGuess_finalStep_partialProducts_T_4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _quotient_finalGuess_finalStep_partialSums_T = add(quotient_finalGuess_finalStep_partialProducts_0, quotient_finalGuess_finalStep_partialProducts_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 107:34]
    node quotient_finalGuess_finalStep_partialSums_0 = add(_quotient_finalGuess_finalStep_partialSums_T, quotient_finalGuess_finalStep_partialProducts_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 107:39]
    node quotient_finalGuess_finalStep_partialSums_1 = add(quotient_finalGuess_finalStep_partialProducts_3, quotient_finalGuess_finalStep_partialProducts_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 108:31]
    node _quotient_finalGuess_finalStep_T = add(quotient_finalGuess_finalStep_partialSums_0, quotient_finalGuess_finalStep_partialSums_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 104:15]
    node quotient_finalGuess_finalStep = bits(_quotient_finalGuess_finalStep_T, 9, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 213:27 214:17]
    node _quotient_finalGuess_res_T = bits(quotient_finalGuess_finalStep, 8, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 216:37]
    node _quotient_finalGuess_res_roundedValue_T = bits(_quotient_finalGuess_res_T, 8, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 72:14]
    node _quotient_finalGuess_res_roundedValue_T_1 = bits(_quotient_finalGuess_res_T, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 72:44]
    node _quotient_finalGuess_res_roundedValue_T_2 = bits(_quotient_finalGuess_res_T, 2, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 72:66]
    node _quotient_finalGuess_res_roundedValue_T_3 = orr(_quotient_finalGuess_res_roundedValue_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 72:95]
    node _quotient_finalGuess_res_roundedValue_T_4 = and(_quotient_finalGuess_res_roundedValue_T_1, _quotient_finalGuess_res_roundedValue_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 72:59]
    node quotient_finalGuess = add(_quotient_finalGuess_res_roundedValue_T, _quotient_finalGuess_res_roundedValue_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 72:35]
    node _quotient_T = bits(quotient_finalGuess, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 225:24]
    node dividendFraction = bits(_shiftedValue_T, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 56:28 60:18]
    node _quotient_partialProducts_compare_T = bits(dividendFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node quotient_partialProducts_compare = mux(_quotient_partialProducts_compare_T, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _quotient_partialProducts_T = and(_quotient_T, quotient_partialProducts_compare) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node quotient_partialProducts_0 = shl(_quotient_partialProducts_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _quotient_partialProducts_compare_T_1 = bits(dividendFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node quotient_partialProducts_compare_1 = mux(_quotient_partialProducts_compare_T_1, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _quotient_partialProducts_T_1 = and(_quotient_T, quotient_partialProducts_compare_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node quotient_partialProducts_1 = shl(_quotient_partialProducts_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _quotient_partialProducts_compare_T_2 = bits(dividendFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node quotient_partialProducts_compare_2 = mux(_quotient_partialProducts_compare_T_2, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _quotient_partialProducts_T_2 = and(_quotient_T, quotient_partialProducts_compare_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node quotient_partialProducts_2 = shl(_quotient_partialProducts_T_2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _quotient_partialSums_T = add(quotient_partialProducts_0, quotient_partialProducts_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 107:34]
    node quotient = add(_quotient_partialSums_T, quotient_partialProducts_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 107:39]
    node _T = bits(quotient, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 331:64]
    node _leadingZeros_T_22 = bits(_T, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_23 = bits(_leadingZeros_T_22, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_24 = bits(_leadingZeros_T_23, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_25 = bits(_leadingZeros_T_23, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_26 = cat(_leadingZeros_T_24, _leadingZeros_T_25) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_27 = bits(_leadingZeros_T_22, 3, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_28 = bits(_leadingZeros_T_27, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_29 = bits(_leadingZeros_T_27, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_30 = cat(_leadingZeros_T_28, _leadingZeros_T_29) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_31 = cat(_leadingZeros_T_26, _leadingZeros_T_30) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_32 = bits(_T, 6, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_33 = bits(_leadingZeros_T_32, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_34 = bits(_leadingZeros_T_33, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_35 = bits(_leadingZeros_T_33, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_36 = cat(_leadingZeros_T_34, _leadingZeros_T_35) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_37 = bits(_leadingZeros_T_32, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_38 = cat(_leadingZeros_T_36, _leadingZeros_T_37) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_39 = cat(_leadingZeros_T_31, _leadingZeros_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_40 = bits(_leadingZeros_T_39, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_41 = bits(_leadingZeros_T_39, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_42 = bits(_leadingZeros_T_39, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_43 = bits(_leadingZeros_T_39, 3, 3) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_44 = bits(_leadingZeros_T_39, 4, 4) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_45 = bits(_leadingZeros_T_39, 5, 5) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_46 = bits(_leadingZeros_T_39, 6, 6) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_47 = mux(_leadingZeros_T_45, UInt<3>("h5"), UInt<3>("h6")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_48 = mux(_leadingZeros_T_44, UInt<3>("h4"), _leadingZeros_T_47) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_49 = mux(_leadingZeros_T_43, UInt<2>("h3"), _leadingZeros_T_48) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_50 = mux(_leadingZeros_T_42, UInt<2>("h2"), _leadingZeros_T_49) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_51 = mux(_leadingZeros_T_41, UInt<1>("h1"), _leadingZeros_T_50) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_52 = mux(_leadingZeros_T_40, UInt<1>("h0"), _leadingZeros_T_51) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node shift = _leadingZeros_T_52 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 55:28 58:18]
    node _shiftedValue_T_2 = dshl(_T, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:27]
    node _exponentShiftRight_T = sub(UInt<7>("h0"), exponent_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 333:58]
    node exponentShiftRight = tail(_exponentShiftRight_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 333:58]
    node _exponentShiftLeft_T = sub(exponent_1, UInt<7>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 335:38]
    node exponentShiftLeft = tail(_exponentShiftLeft_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 335:38]
    node _T_1 = bits(exponent_1, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 343:19]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 343:10]
    node _T_3 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 343:52]
    node _T_4 = geq(_T_3, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 343:72]
    node _T_5 = and(_T_2, _T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 343:40]
    node _T_6 = bits(quotient, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 344:25]
    node _T_7 = and(_T_5, _T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 344:7]
    node _T_8 = bits(exponent_1, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 347:25]
    node _T_9 = eq(_T_8, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 347:16]
    node _T_10 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 347:58]
    node _T_11 = lt(_T_10, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 347:78]
    node _T_12 = and(_T_9, _T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 347:46]
    node _T_13 = bits(quotient, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 348:25]
    node _T_14 = and(_T_12, _T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 348:7]
    node _tempExponent_T_7 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 349:31]
    node _tempExponent_T_8 = add(_tempExponent_T_7, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 349:51]
    node _tempExponent_T_9 = tail(_tempExponent_T_8, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 349:51]
    node _tempFraction_T = bits(quotient, 6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 355:26]
    node _T_15 = bits(exponent_1, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 357:25]
    node _T_16 = eq(_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 357:16]
    node _T_17 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 357:58]
    node _T_18 = gt(_T_17, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 357:78]
    node _T_19 = and(_T_16, _T_18) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 357:46]
    node shiftedCalcValue = bits(_shiftedValue_T_2, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 56:28 60:18]
    node _T_20 = bits(shiftedCalcValue, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 358:26]
    node _T_21 = and(_T_19, _T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 358:7]
    node _tempExponent_T_10 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 359:31]
    node _tempExponent_T_11 = sub(_tempExponent_T_10, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 359:51]
    node _tempExponent_T_12 = tail(_tempExponent_T_11, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 359:51]
    node _tempFraction_T_1 = bits(shiftedCalcValue, 6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 365:27]
    node _T_22 = bits(exponent_1, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 369:21]
    node _T_23 = eq(_T_22, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 369:12]
    node _T_24 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 369:54]
    node _T_25 = gt(_T_24, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 369:74]
    node _T_26 = and(_T_23, _T_25) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 369:42]
    node _tempFraction_T_2 = bits(quotient, 6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 375:28]
    node _tempFraction_T_3 = dshl(_tempFraction_T_2, exponentShiftLeft) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 375:83]
    node _tempFraction_T_4 = bits(quotient, 7, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 378:41]
    node _tempFraction_T_5 = bits(quotient, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 379:26]
    node _tempFraction_T_6 = andr(_tempFraction_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 379:125]
    node _tempFraction_T_7 = add(_tempFraction_T_4, _tempFraction_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 378:118]
    node _tempFraction_T_8 = tail(_tempFraction_T_7, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 378:118]
    node _tempFraction_T_9 = dshr(_tempFraction_T_8, exponentShiftRight) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 379:138]
    node _GEN_4 = mux(_T_26, _tempFraction_T_3, _tempFraction_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 369:82 370:22 378:22]
    node _GEN_5 = mux(_T_21, _tempExponent_T_12, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 358:55 359:20 368:20]
    node _GEN_6 = mux(_T_21, _tempFraction_T_1, _GEN_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 358:55 360:20]
    node _GEN_7 = mux(_T_14, _tempExponent_T_9, _GEN_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 348:54 349:20]
    node _GEN_8 = mux(_T_14, _tempFraction_T, _GEN_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 348:54 350:20]
    node _GEN_9 = mux(_T_7, UInt<5>("h1f"), _GEN_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 344:54 345:20]
    node _GEN_10 = mux(_T_7, UInt<7>("h7f"), _GEN_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 344:54 346:20]
    node _addOne_T = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:33]
    node tempFraction = bits(_GEN_10, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 339:28]
    node _addOne_T_1 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:57]
    node _addOne_T_2 = and(_addOne_T, _addOne_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:42]
    node _addOne_T_3 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:77]
    node _addOne_T_4 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:96]
    node _addOne_T_5 = or(_addOne_T_3, _addOne_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:81]
    node _addOne_T_6 = and(_addOne_T_2, _addOne_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:61]
    node _addOne_T_7 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:22]
    node _addOne_T_8 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:46]
    node _addOne_T_9 = and(_addOne_T_7, _addOne_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:31]
    node _addOne_T_10 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:66]
    node _addOne_T_11 = eq(_addOne_T_10, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:53]
    node _addOne_T_12 = and(_addOne_T_9, _addOne_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:50]
    node _addOne_T_13 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:86]
    node _addOne_T_14 = eq(_addOne_T_13, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:73]
    node _addOne_T_15 = and(_addOne_T_12, _addOne_T_14) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:70]
    node _addOne_T_16 = bits(tempFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:105]
    node _addOne_T_17 = and(_addOne_T_15, _addOne_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:90]
    node _addOne_T_18 = or(_addOne_T_6, _addOne_T_17) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:102]
    node _addOne_T_19 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:22]
    node _addOne_T_20 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:47]
    node _addOne_T_21 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:66]
    node _addOne_T_22 = or(_addOne_T_20, _addOne_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:51]
    node _addOne_T_23 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:85]
    node _addOne_T_24 = or(_addOne_T_22, _addOne_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:70]
    node _addOne_T_25 = and(_addOne_T_19, _addOne_T_24) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:31]
    node _addOne_T_26 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:98]
    node _addOne_T_27 = and(_addOne_T_25, _addOne_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:90]
    node _addOne_T_28 = or(_addOne_T_18, _addOne_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:110]
    node _addOne_T_29 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:22]
    node _addOne_T_30 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:47]
    node _addOne_T_31 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:66]
    node _addOne_T_32 = or(_addOne_T_30, _addOne_T_31) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:51]
    node _addOne_T_33 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:85]
    node _addOne_T_34 = or(_addOne_T_32, _addOne_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:70]
    node _addOne_T_35 = and(_addOne_T_29, _addOne_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:31]
    node _addOne_T_36 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:99]
    node _addOne_T_37 = eq(_addOne_T_36, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:93]
    node _addOne_T_38 = and(_addOne_T_35, _addOne_T_37) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:90]
    node addOne = or(_addOne_T_28, _addOne_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:106]
    node _roundedFraction_T = bits(tempFraction, 5, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:39]
    node roundedFraction = add(_roundedFraction_T, addOne) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:66]
    node _finalFraction_T = bits(roundedFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:44]
    node _finalFraction_T_1 = eq(_finalFraction_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:65]
    node _finalFraction_T_2 = bits(roundedFraction, 3, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 237:22]
    node _finalFraction_T_3 = bits(roundedFraction, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 237:62]
    node resultFraction = mux(_finalFraction_T_1, _finalFraction_T_2, _finalFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:28]
    node _finalExponent_T = bits(roundedFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:44]
    node _finalExponent_T_1 = eq(_finalExponent_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:65]
    node _finalExponent_T_2 = bits(roundedFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:92]
    node tempExponent_1 = _GEN_9 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 337:28]
    node _finalExponent_T_3 = eq(tempExponent_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:125]
    node _finalExponent_T_4 = and(_finalExponent_T_2, _finalExponent_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:109]
    node _finalExponent_T_5 = or(_finalExponent_T_1, _finalExponent_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:73]
    node _finalExponent_T_6 = add(tempExponent_1, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 240:20]
    node _finalExponent_T_7 = tail(_finalExponent_T_6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 240:20]
    node resultExponent = mux(_finalExponent_T_5, _finalExponent_T_7, tempExponent_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:28]
    node _overflow_T = add(UInt<5>("h1f"), UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 243:50]
    node _overflow_T_1 = geq(resultExponent, _overflow_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 243:32]
    node _overflow_T_2 = eq(tempExponent_1, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 243:76]
    node resultOverflow = or(_overflow_T_1, _overflow_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 243:59]
    node _T_27 = eq(enable, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\Divide.scala 25:15]
    node _GEN_11 = mux(_T_27, resultSign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 25:24 26:10 35:10]
    node _GEN_12 = mux(_T_27, resultExponent, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 25:24 27:14 36:14]
    node _GEN_13 = mux(_T_27, resultFraction, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 25:24 28:14 37:14]
    node _GEN_14 = mux(_T_27, resultOverflow, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 25:24 29:14 38:14]
    node isResultInfty = _isResultInfty_T_40 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 453:{30,30}]
    node _GEN_15 = mux(_T_27, isResultInfty, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 25:24 30:13 39:13]
    node isResult0 = _isResult0_T_40 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 458:{30,30}]
    node _GEN_16 = mux(_T_27, isResult0, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 25:24 31:9 40:9]
    node isResultNaN = _isResultNaN_T_36 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 448:{30,30}]
    node _GEN_17 = mux(_T_27, isResultNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 25:24 32:11 41:11]
    node _GEN_18 = mux(_T_27, resultNaNFractionValue, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 25:24 33:22 42:22]
    sign <= _GEN_11
    exponent <= _GEN_12
    fraction <= _GEN_13
    overflow <= _GEN_14
    isInfty <= _GEN_15
    is0 <= _GEN_16
    isNaN <= _GEN_17
    NaNFractionValue <= _GEN_18

  module Compare :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\Compare.scala 6:18]
    input compareMode : UInt<3> @[\\src\\main\\scala\\fpu8\\Compare.scala 7:23]
    input a_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Compare.scala 8:13]
    input b_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Compare.scala 9:13]
    output z : UInt<8> @[\\src\\main\\scala\\fpu8\\Compare.scala 10:13]

    node _T = eq(enable, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\Compare.scala 12:15]
    node _T_1 = eq(compareMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Compare.scala 13:22]
    node _z_isResultNaN_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_1 = eq(_z_isResultNaN_T, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_isResultNaN_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_3 = eq(_z_isResultNaN_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_isResultNaN_T_4 = eq(_z_isResultNaN_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_isResultNaN_T_5 = and(_z_isResultNaN_T_1, _z_isResultNaN_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _z_isResultNaN_T_6 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_7 = eq(_z_isResultNaN_T_6, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_isResultNaN_T_8 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_9 = eq(_z_isResultNaN_T_8, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_isResultNaN_T_10 = eq(_z_isResultNaN_T_9, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_isResultNaN_T_11 = and(_z_isResultNaN_T_7, _z_isResultNaN_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node z_isResultNaN = or(_z_isResultNaN_T_5, _z_isResultNaN_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 478:34]
    node _z_resultNaNFractionValue_T = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_1 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_2 = gt(_z_resultNaNFractionValue_T, _z_resultNaNFractionValue_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:33]
    node _z_resultNaNFractionValue_T_3 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_4 = bits(_z_resultNaNFractionValue_T_3, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:64]
    node _z_resultNaNFractionValue_T_5 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_6 = bits(_z_resultNaNFractionValue_T_5, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:83]
    node z_resultNaNFractionValue = mux(_z_resultNaNFractionValue_T_2, _z_resultNaNFractionValue_T_4, _z_resultNaNFractionValue_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:18]
    node z_result_lo = cat(UInt<1>("h1"), z_resultNaNFractionValue) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 483:22]
    node z_result_hi = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 483:22]
    node _z_result_T = cat(z_result_hi, z_result_lo) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 483:22]
    node _z_T = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_1 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_2 = gt(_z_T, _z_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 486:26]
    node _z_T_3 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_4 = eq(_z_T_3, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 486:53]
    node _z_T_5 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:70]
    node _z_T_6 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:89]
    node _z_T_7 = gt(_z_T_5, _z_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:77]
    node _z_T_8 = and(_z_T_4, _z_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 486:61]
    node _z_T_9 = or(_z_T_2, _z_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 486:39]
    node _z_T_10 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_11 = eq(_z_T_10, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 486:102]
    node _z_T_12 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:70]
    node _z_T_13 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:89]
    node _z_T_14 = gt(_z_T_12, _z_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:77]
    node _z_T_15 = eq(_z_T_14, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 486:113]
    node _z_T_16 = and(_z_T_11, _z_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 486:110]
    node _z_T_17 = or(_z_T_9, _z_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 486:88]
    node z_result_hi_1 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 488:20]
    node _z_result_T_1 = cat(z_result_hi_1, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 488:20]
    node _GEN_0 = mux(_z_T_17, _z_result_T_1, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 486:138 488:14 490:14]
    node _GEN_1 = mux(z_isResultNaN, _z_result_T, _GEN_0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 481:22 482:14]
    node _T_2 = eq(compareMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\Compare.scala 15:28]
    node _z_isResultNaN_T_12 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_13 = eq(_z_isResultNaN_T_12, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_isResultNaN_T_14 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_15 = eq(_z_isResultNaN_T_14, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_isResultNaN_T_16 = eq(_z_isResultNaN_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_isResultNaN_T_17 = and(_z_isResultNaN_T_13, _z_isResultNaN_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _z_isResultNaN_T_18 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_19 = eq(_z_isResultNaN_T_18, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_isResultNaN_T_20 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_21 = eq(_z_isResultNaN_T_20, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_isResultNaN_T_22 = eq(_z_isResultNaN_T_21, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_isResultNaN_T_23 = and(_z_isResultNaN_T_19, _z_isResultNaN_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node z_isResultNaN_1 = or(_z_isResultNaN_T_17, _z_isResultNaN_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 499:34]
    node _z_resultNaNFractionValue_T_7 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_8 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_9 = gt(_z_resultNaNFractionValue_T_7, _z_resultNaNFractionValue_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:33]
    node _z_resultNaNFractionValue_T_10 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_11 = bits(_z_resultNaNFractionValue_T_10, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:64]
    node _z_resultNaNFractionValue_T_12 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_13 = bits(_z_resultNaNFractionValue_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:83]
    node z_resultNaNFractionValue_1 = mux(_z_resultNaNFractionValue_T_9, _z_resultNaNFractionValue_T_11, _z_resultNaNFractionValue_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:18]
    node z_result_lo_1 = cat(UInt<1>("h1"), z_resultNaNFractionValue_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 504:22]
    node z_result_hi_2 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 504:22]
    node _z_result_T_2 = cat(z_result_hi_2, z_result_lo_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 504:22]
    node _z_T_18 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_19 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_20 = lt(_z_T_18, _z_T_19) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 507:26]
    node _z_T_21 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_22 = eq(_z_T_21, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 507:53]
    node _z_T_23 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:70]
    node _z_T_24 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:89]
    node _z_T_25 = gt(_z_T_23, _z_T_24) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:77]
    node _z_T_26 = eq(_z_T_25, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 507:64]
    node _z_T_27 = and(_z_T_22, _z_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 507:61]
    node _z_T_28 = or(_z_T_20, _z_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 507:39]
    node _z_T_29 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_30 = eq(_z_T_29, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 507:103]
    node _z_T_31 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:70]
    node _z_T_32 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:89]
    node _z_T_33 = gt(_z_T_31, _z_T_32) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:77]
    node _z_T_34 = and(_z_T_30, _z_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 507:111]
    node _z_T_35 = or(_z_T_28, _z_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 507:89]
    node z_result_hi_3 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 509:20]
    node _z_result_T_3 = cat(z_result_hi_3, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 509:20]
    node _GEN_2 = mux(_z_T_35, _z_result_T_3, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 507:139 509:14 511:14]
    node _GEN_3 = mux(z_isResultNaN_1, _z_result_T_2, _GEN_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 502:22 503:14]
    node _T_3 = eq(compareMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\Compare.scala 17:28]
    node _z_isResultNaN_T_24 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_25 = eq(_z_isResultNaN_T_24, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_isResultNaN_T_26 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_27 = eq(_z_isResultNaN_T_26, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_isResultNaN_T_28 = eq(_z_isResultNaN_T_27, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_isResultNaN_T_29 = and(_z_isResultNaN_T_25, _z_isResultNaN_T_28) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _z_isResultNaN_T_30 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_31 = eq(_z_isResultNaN_T_30, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_isResultNaN_T_32 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_33 = eq(_z_isResultNaN_T_32, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_isResultNaN_T_34 = eq(_z_isResultNaN_T_33, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_isResultNaN_T_35 = and(_z_isResultNaN_T_31, _z_isResultNaN_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node z_isResultNaN_2 = or(_z_isResultNaN_T_29, _z_isResultNaN_T_35) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 520:34]
    node _z_resultNaNFractionValue_T_14 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_15 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_16 = gt(_z_resultNaNFractionValue_T_14, _z_resultNaNFractionValue_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:33]
    node _z_resultNaNFractionValue_T_17 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_18 = bits(_z_resultNaNFractionValue_T_17, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:64]
    node _z_resultNaNFractionValue_T_19 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_20 = bits(_z_resultNaNFractionValue_T_19, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:83]
    node z_resultNaNFractionValue_2 = mux(_z_resultNaNFractionValue_T_16, _z_resultNaNFractionValue_T_18, _z_resultNaNFractionValue_T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:18]
    node z_result_lo_2 = cat(UInt<1>("h1"), z_resultNaNFractionValue_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 525:22]
    node z_result_hi_4 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 525:22]
    node _z_result_T_4 = cat(z_result_hi_4, z_result_lo_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 525:22]
    node _z_T_36 = eq(a_data, b_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 528:26]
    node z_result_hi_5 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 530:20]
    node _z_result_T_5 = cat(z_result_hi_5, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 530:20]
    node _GEN_4 = mux(_z_T_36, _z_result_T_5, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 528:42 530:14 532:14]
    node _GEN_5 = mux(z_isResultNaN_2, _z_result_T_4, _GEN_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 523:23 524:14]
    node _T_4 = eq(compareMode, UInt<2>("h3")) @[\\src\\main\\scala\\fpu8\\Compare.scala 19:28]
    node _z_isResultNaN_T_36 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_37 = eq(_z_isResultNaN_T_36, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_isResultNaN_T_38 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_39 = eq(_z_isResultNaN_T_38, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_isResultNaN_T_40 = eq(_z_isResultNaN_T_39, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_isResultNaN_T_41 = and(_z_isResultNaN_T_37, _z_isResultNaN_T_40) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _z_isResultNaN_T_42 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_43 = eq(_z_isResultNaN_T_42, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_isResultNaN_T_44 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_45 = eq(_z_isResultNaN_T_44, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_isResultNaN_T_46 = eq(_z_isResultNaN_T_45, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_isResultNaN_T_47 = and(_z_isResultNaN_T_43, _z_isResultNaN_T_46) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node z_isResultNaN_3 = or(_z_isResultNaN_T_41, _z_isResultNaN_T_47) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 541:34]
    node _z_resultNaNFractionValue_T_21 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_22 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_23 = gt(_z_resultNaNFractionValue_T_21, _z_resultNaNFractionValue_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:33]
    node _z_resultNaNFractionValue_T_24 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_25 = bits(_z_resultNaNFractionValue_T_24, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:64]
    node _z_resultNaNFractionValue_T_26 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_27 = bits(_z_resultNaNFractionValue_T_26, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:83]
    node z_resultNaNFractionValue_3 = mux(_z_resultNaNFractionValue_T_23, _z_resultNaNFractionValue_T_25, _z_resultNaNFractionValue_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:18]
    node z_result_lo_3 = cat(UInt<1>("h1"), z_resultNaNFractionValue_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 546:22]
    node z_result_hi_6 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 546:22]
    node _z_result_T_6 = cat(z_result_hi_6, z_result_lo_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 546:22]
    node _z_result_isResultNaN_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_1 = eq(_z_result_isResultNaN_T, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_result_isResultNaN_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_3 = eq(_z_result_isResultNaN_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_result_isResultNaN_T_4 = eq(_z_result_isResultNaN_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_result_isResultNaN_T_5 = and(_z_result_isResultNaN_T_1, _z_result_isResultNaN_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _z_result_isResultNaN_T_6 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_7 = eq(_z_result_isResultNaN_T_6, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_result_isResultNaN_T_8 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_9 = eq(_z_result_isResultNaN_T_8, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_result_isResultNaN_T_10 = eq(_z_result_isResultNaN_T_9, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_result_isResultNaN_T_11 = and(_z_result_isResultNaN_T_7, _z_result_isResultNaN_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node z_result_isResultNaN = or(_z_result_isResultNaN_T_5, _z_result_isResultNaN_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 478:34]
    node _z_result_resultNaNFractionValue_T = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_1 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_2 = gt(_z_result_resultNaNFractionValue_T, _z_result_resultNaNFractionValue_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:33]
    node _z_result_resultNaNFractionValue_T_3 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_4 = bits(_z_result_resultNaNFractionValue_T_3, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:64]
    node _z_result_resultNaNFractionValue_T_5 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_6 = bits(_z_result_resultNaNFractionValue_T_5, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:83]
    node z_result_resultNaNFractionValue = mux(_z_result_resultNaNFractionValue_T_2, _z_result_resultNaNFractionValue_T_4, _z_result_resultNaNFractionValue_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:18]
    node z_result_result_lo = cat(UInt<1>("h1"), z_result_resultNaNFractionValue) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 483:22]
    node z_result_result_hi = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 483:22]
    node _z_result_result_T = cat(z_result_result_hi, z_result_result_lo) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 483:22]
    node _z_result_T_7 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_8 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_9 = gt(_z_result_T_7, _z_result_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 486:26]
    node _z_result_T_10 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_11 = eq(_z_result_T_10, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 486:53]
    node _z_result_T_12 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:70]
    node _z_result_T_13 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:89]
    node _z_result_T_14 = gt(_z_result_T_12, _z_result_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:77]
    node _z_result_T_15 = and(_z_result_T_11, _z_result_T_14) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 486:61]
    node _z_result_T_16 = or(_z_result_T_9, _z_result_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 486:39]
    node _z_result_T_17 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_18 = eq(_z_result_T_17, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 486:102]
    node _z_result_T_19 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:70]
    node _z_result_T_20 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:89]
    node _z_result_T_21 = gt(_z_result_T_19, _z_result_T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:77]
    node _z_result_T_22 = eq(_z_result_T_21, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 486:113]
    node _z_result_T_23 = and(_z_result_T_18, _z_result_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 486:110]
    node _z_result_T_24 = or(_z_result_T_16, _z_result_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 486:88]
    node z_result_result_hi_1 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 488:20]
    node _z_result_result_T_1 = cat(z_result_result_hi_1, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 488:20]
    node _GEN_6 = mux(_z_result_T_24, _z_result_result_T_1, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 486:138 488:14 490:14]
    node _GEN_7 = mux(z_result_isResultNaN, _z_result_result_T, _GEN_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 481:22 482:14]
    node _z_result_isResultNaN_T_12 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_13 = eq(_z_result_isResultNaN_T_12, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_result_isResultNaN_T_14 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_15 = eq(_z_result_isResultNaN_T_14, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_result_isResultNaN_T_16 = eq(_z_result_isResultNaN_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_result_isResultNaN_T_17 = and(_z_result_isResultNaN_T_13, _z_result_isResultNaN_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _z_result_isResultNaN_T_18 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_19 = eq(_z_result_isResultNaN_T_18, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_result_isResultNaN_T_20 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_21 = eq(_z_result_isResultNaN_T_20, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_result_isResultNaN_T_22 = eq(_z_result_isResultNaN_T_21, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_result_isResultNaN_T_23 = and(_z_result_isResultNaN_T_19, _z_result_isResultNaN_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node z_result_isResultNaN_1 = or(_z_result_isResultNaN_T_17, _z_result_isResultNaN_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 520:34]
    node _z_result_resultNaNFractionValue_T_7 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_8 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_9 = gt(_z_result_resultNaNFractionValue_T_7, _z_result_resultNaNFractionValue_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:33]
    node _z_result_resultNaNFractionValue_T_10 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_11 = bits(_z_result_resultNaNFractionValue_T_10, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:64]
    node _z_result_resultNaNFractionValue_T_12 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_13 = bits(_z_result_resultNaNFractionValue_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:83]
    node z_result_resultNaNFractionValue_1 = mux(_z_result_resultNaNFractionValue_T_9, _z_result_resultNaNFractionValue_T_11, _z_result_resultNaNFractionValue_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:18]
    node z_result_result_lo_1 = cat(UInt<1>("h1"), z_result_resultNaNFractionValue_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 525:22]
    node z_result_result_hi_2 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 525:22]
    node _z_result_result_T_2 = cat(z_result_result_hi_2, z_result_result_lo_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 525:22]
    node _z_result_T_25 = eq(a_data, b_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 528:26]
    node z_result_result_hi_3 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 530:20]
    node _z_result_result_T_3 = cat(z_result_result_hi_3, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 530:20]
    node _GEN_8 = mux(_z_result_T_25, _z_result_result_T_3, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 528:42 530:14 532:14]
    node _GEN_9 = mux(z_result_isResultNaN_1, _z_result_result_T_2, _GEN_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 523:23 524:14]
    node z_result_result = _GEN_7 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 476:22]
    node z_result_result_1 = _GEN_9 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 518:22]
    node _z_result_T_26 = xor(z_result_result, z_result_result_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 550:32]
    node _GEN_10 = mux(z_isResultNaN_3, _z_result_T_6, _z_result_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 544:23 545:14 550:14]
    node _T_5 = eq(compareMode, UInt<3>("h4")) @[\\src\\main\\scala\\fpu8\\Compare.scala 21:28]
    node _z_isResultNaN_T_48 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_49 = eq(_z_isResultNaN_T_48, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_isResultNaN_T_50 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_51 = eq(_z_isResultNaN_T_50, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_isResultNaN_T_52 = eq(_z_isResultNaN_T_51, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_isResultNaN_T_53 = and(_z_isResultNaN_T_49, _z_isResultNaN_T_52) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _z_isResultNaN_T_54 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_55 = eq(_z_isResultNaN_T_54, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_isResultNaN_T_56 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_57 = eq(_z_isResultNaN_T_56, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_isResultNaN_T_58 = eq(_z_isResultNaN_T_57, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_isResultNaN_T_59 = and(_z_isResultNaN_T_55, _z_isResultNaN_T_58) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node z_isResultNaN_4 = or(_z_isResultNaN_T_53, _z_isResultNaN_T_59) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 559:34]
    node _z_resultNaNFractionValue_T_28 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_29 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_30 = gt(_z_resultNaNFractionValue_T_28, _z_resultNaNFractionValue_T_29) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:33]
    node _z_resultNaNFractionValue_T_31 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_32 = bits(_z_resultNaNFractionValue_T_31, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:64]
    node _z_resultNaNFractionValue_T_33 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_34 = bits(_z_resultNaNFractionValue_T_33, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:83]
    node z_resultNaNFractionValue_4 = mux(_z_resultNaNFractionValue_T_30, _z_resultNaNFractionValue_T_32, _z_resultNaNFractionValue_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:18]
    node z_result_lo_4 = cat(UInt<1>("h1"), z_resultNaNFractionValue_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 564:22]
    node z_result_hi_7 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 564:22]
    node _z_result_T_27 = cat(z_result_hi_7, z_result_lo_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 564:22]
    node _z_result_isResultNaN_T_24 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_25 = eq(_z_result_isResultNaN_T_24, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_result_isResultNaN_T_26 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_27 = eq(_z_result_isResultNaN_T_26, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_result_isResultNaN_T_28 = eq(_z_result_isResultNaN_T_27, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_result_isResultNaN_T_29 = and(_z_result_isResultNaN_T_25, _z_result_isResultNaN_T_28) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _z_result_isResultNaN_T_30 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_31 = eq(_z_result_isResultNaN_T_30, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_result_isResultNaN_T_32 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_33 = eq(_z_result_isResultNaN_T_32, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_result_isResultNaN_T_34 = eq(_z_result_isResultNaN_T_33, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_result_isResultNaN_T_35 = and(_z_result_isResultNaN_T_31, _z_result_isResultNaN_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node z_result_isResultNaN_2 = or(_z_result_isResultNaN_T_29, _z_result_isResultNaN_T_35) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 499:34]
    node _z_result_resultNaNFractionValue_T_14 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_15 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_16 = gt(_z_result_resultNaNFractionValue_T_14, _z_result_resultNaNFractionValue_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:33]
    node _z_result_resultNaNFractionValue_T_17 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_18 = bits(_z_result_resultNaNFractionValue_T_17, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:64]
    node _z_result_resultNaNFractionValue_T_19 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_20 = bits(_z_result_resultNaNFractionValue_T_19, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:83]
    node z_result_resultNaNFractionValue_2 = mux(_z_result_resultNaNFractionValue_T_16, _z_result_resultNaNFractionValue_T_18, _z_result_resultNaNFractionValue_T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:18]
    node z_result_result_lo_2 = cat(UInt<1>("h1"), z_result_resultNaNFractionValue_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 504:22]
    node z_result_result_hi_4 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 504:22]
    node _z_result_result_T_4 = cat(z_result_result_hi_4, z_result_result_lo_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 504:22]
    node _z_result_T_28 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_29 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_30 = lt(_z_result_T_28, _z_result_T_29) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 507:26]
    node _z_result_T_31 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_32 = eq(_z_result_T_31, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 507:53]
    node _z_result_T_33 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:70]
    node _z_result_T_34 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:89]
    node _z_result_T_35 = gt(_z_result_T_33, _z_result_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:77]
    node _z_result_T_36 = eq(_z_result_T_35, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 507:64]
    node _z_result_T_37 = and(_z_result_T_32, _z_result_T_36) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 507:61]
    node _z_result_T_38 = or(_z_result_T_30, _z_result_T_37) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 507:39]
    node _z_result_T_39 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_40 = eq(_z_result_T_39, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 507:103]
    node _z_result_T_41 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:70]
    node _z_result_T_42 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:89]
    node _z_result_T_43 = gt(_z_result_T_41, _z_result_T_42) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:77]
    node _z_result_T_44 = and(_z_result_T_40, _z_result_T_43) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 507:111]
    node _z_result_T_45 = or(_z_result_T_38, _z_result_T_44) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 507:89]
    node z_result_result_hi_5 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 509:20]
    node _z_result_result_T_5 = cat(z_result_result_hi_5, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 509:20]
    node _GEN_11 = mux(_z_result_T_45, _z_result_result_T_5, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 507:139 509:14 511:14]
    node _GEN_12 = mux(z_result_isResultNaN_2, _z_result_result_T_4, _GEN_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 502:22 503:14]
    node _z_result_isResultNaN_T_36 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_37 = eq(_z_result_isResultNaN_T_36, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_result_isResultNaN_T_38 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_39 = eq(_z_result_isResultNaN_T_38, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_result_isResultNaN_T_40 = eq(_z_result_isResultNaN_T_39, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_result_isResultNaN_T_41 = and(_z_result_isResultNaN_T_37, _z_result_isResultNaN_T_40) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _z_result_isResultNaN_T_42 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_43 = eq(_z_result_isResultNaN_T_42, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_result_isResultNaN_T_44 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_45 = eq(_z_result_isResultNaN_T_44, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_result_isResultNaN_T_46 = eq(_z_result_isResultNaN_T_45, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_result_isResultNaN_T_47 = and(_z_result_isResultNaN_T_43, _z_result_isResultNaN_T_46) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node z_result_isResultNaN_3 = or(_z_result_isResultNaN_T_41, _z_result_isResultNaN_T_47) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 520:34]
    node _z_result_resultNaNFractionValue_T_21 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_22 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_23 = gt(_z_result_resultNaNFractionValue_T_21, _z_result_resultNaNFractionValue_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:33]
    node _z_result_resultNaNFractionValue_T_24 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_25 = bits(_z_result_resultNaNFractionValue_T_24, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:64]
    node _z_result_resultNaNFractionValue_T_26 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_27 = bits(_z_result_resultNaNFractionValue_T_26, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:83]
    node z_result_resultNaNFractionValue_3 = mux(_z_result_resultNaNFractionValue_T_23, _z_result_resultNaNFractionValue_T_25, _z_result_resultNaNFractionValue_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:18]
    node z_result_result_lo_3 = cat(UInt<1>("h1"), z_result_resultNaNFractionValue_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 525:22]
    node z_result_result_hi_6 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 525:22]
    node _z_result_result_T_6 = cat(z_result_result_hi_6, z_result_result_lo_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 525:22]
    node _z_result_T_46 = eq(a_data, b_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 528:26]
    node z_result_result_hi_7 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 530:20]
    node _z_result_result_T_7 = cat(z_result_result_hi_7, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 530:20]
    node _GEN_13 = mux(_z_result_T_46, _z_result_result_T_7, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 528:42 530:14 532:14]
    node _GEN_14 = mux(z_result_isResultNaN_3, _z_result_result_T_6, _GEN_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 523:23 524:14]
    node z_result_result_2 = _GEN_12 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 497:22]
    node z_result_result_3 = _GEN_14 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 518:22]
    node _z_result_T_47 = xor(z_result_result_2, z_result_result_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 568:32]
    node _GEN_15 = mux(z_isResultNaN_4, _z_result_T_27, _z_result_T_47) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 562:23 563:14 568:14]
    node _z_isResultNaN_T_60 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_61 = eq(_z_isResultNaN_T_60, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_isResultNaN_T_62 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_63 = eq(_z_isResultNaN_T_62, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_isResultNaN_T_64 = eq(_z_isResultNaN_T_63, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_isResultNaN_T_65 = and(_z_isResultNaN_T_61, _z_isResultNaN_T_64) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _z_isResultNaN_T_66 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_67 = eq(_z_isResultNaN_T_66, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_isResultNaN_T_68 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_69 = eq(_z_isResultNaN_T_68, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_isResultNaN_T_70 = eq(_z_isResultNaN_T_69, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_isResultNaN_T_71 = and(_z_isResultNaN_T_67, _z_isResultNaN_T_70) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node z_isResultNaN_5 = or(_z_isResultNaN_T_65, _z_isResultNaN_T_71) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 577:34]
    node _z_resultNaNFractionValue_T_35 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_36 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_37 = gt(_z_resultNaNFractionValue_T_35, _z_resultNaNFractionValue_T_36) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:33]
    node _z_resultNaNFractionValue_T_38 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_39 = bits(_z_resultNaNFractionValue_T_38, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:64]
    node _z_resultNaNFractionValue_T_40 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_41 = bits(_z_resultNaNFractionValue_T_40, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:83]
    node z_resultNaNFractionValue_5 = mux(_z_resultNaNFractionValue_T_37, _z_resultNaNFractionValue_T_39, _z_resultNaNFractionValue_T_41) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 118:18]
    node z_result_lo_5 = cat(UInt<1>("h1"), z_resultNaNFractionValue_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 582:22]
    node z_result_hi_8 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 582:22]
    node _z_result_T_48 = cat(z_result_hi_8, z_result_lo_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 582:22]
    node _z_T_37 = neq(a_data, b_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 585:26]
    node z_result_hi_9 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 587:20]
    node _z_result_T_49 = cat(z_result_hi_9, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 587:20]
    node _GEN_16 = mux(_z_T_37, _z_result_T_49, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 585:42 587:14 589:14]
    node _GEN_17 = mux(z_isResultNaN_5, _z_result_T_48, _GEN_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 580:23 581:14]
    node z_result_4 = _GEN_15 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 557:22]
    node z_result_5 = _GEN_17 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 575:22]
    node _GEN_18 = mux(_T_5, z_result_4, z_result_5) @[\\src\\main\\scala\\fpu8\\Compare.scala 21:37 22:9 24:9]
    node z_result_3 = _GEN_10 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 539:22]
    node _GEN_19 = mux(_T_4, z_result_3, _GEN_18) @[\\src\\main\\scala\\fpu8\\Compare.scala 19:37 20:9]
    node z_result_2 = _GEN_5 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 518:22]
    node _GEN_20 = mux(_T_3, z_result_2, _GEN_19) @[\\src\\main\\scala\\fpu8\\Compare.scala 17:37 18:9]
    node z_result_1 = _GEN_3 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 497:22]
    node _GEN_21 = mux(_T_2, z_result_1, _GEN_20) @[\\src\\main\\scala\\fpu8\\Compare.scala 15:37 16:9]
    node z_result = _GEN_1 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 476:22]
    node _GEN_22 = mux(_T_1, z_result, _GEN_21) @[\\src\\main\\scala\\fpu8\\Compare.scala 13:31 14:9]
    node _GEN_23 = mux(_T, _GEN_22, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Compare.scala 12:23 27:6]
    z <= _GEN_23

  module Convert :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\Convert.scala 6:18]
    input a_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Convert.scala 7:13]
    input roundingMode : UInt<2> @[\\src\\main\\scala\\fpu8\\Convert.scala 8:24]
    input saturationMode : UInt<1> @[\\src\\main\\scala\\fpu8\\Convert.scala 9:26]
    output z : UInt<8> @[\\src\\main\\scala\\fpu8\\Convert.scala 10:13]

    node _T = eq(enable, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\Convert.scala 12:15]
    node _z_isResultNaN_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_1 = eq(_z_isResultNaN_T, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_isResultNaN_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_3 = eq(_z_isResultNaN_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_isResultNaN_T_4 = eq(_z_isResultNaN_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:15]
    node _z_isResultNaN_T_5 = and(_z_isResultNaN_T_1, _z_isResultNaN_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _z_isResultNaN_T_6 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_7 = eq(_z_isResultNaN_T_6, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _z_isResultNaN_T_8 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_9 = eq(_z_isResultNaN_T_8, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _z_isResultNaN_T_10 = and(_z_isResultNaN_T_7, _z_isResultNaN_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 47:24]
    node z_isResultNaN = or(_z_isResultNaN_T_5, _z_isResultNaN_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 628:29]
    node _z_fraction_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_fraction_T_1 = eq(_z_fraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _z_fraction_T_2 = eq(_z_fraction_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 630:24]
    node _z_fraction_T_3 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node z_fraction = cat(_z_fraction_T_2, _z_fraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 630:23]
    node _z_tempExponent_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_tempExponent_T_1 = sub(_z_tempExponent_T, UInt<4>("h8")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 632:33]
    node z_tempExponent = asUInt(_z_tempExponent_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 632:33]
    node _z_isDenormalized_T = bits(z_tempExponent, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 634:38]
    node _z_isDenormalized_T_1 = bits(z_tempExponent, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 634:71]
    node _z_isDenormalized_T_2 = eq(_z_isDenormalized_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 634:95]
    node z_isDenormalized = or(_z_isDenormalized_T, _z_isDenormalized_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 634:55]
    node _z_overflow_T = bits(z_tempExponent, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 635:33]
    node _z_overflow_T_1 = eq(_z_overflow_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 635:20]
    node _z_overflow_T_2 = bits(z_tempExponent, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 635:65]
    node z_overflow = and(_z_overflow_T_1, _z_overflow_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 635:50]
    node _z_shift_T = sub(UInt<1>("h1"), z_tempExponent) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 636:41]
    node _z_shift_T_1 = asUInt(_z_shift_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 636:41]
    node z_shift = mux(z_isDenormalized, _z_shift_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 636:20]
    node _z_tempFraction_T = cat(z_fraction, UInt<4>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 638:27]
    node z_tempFraction = dshr(_z_tempFraction_T, z_shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 638:67]
    node _z_addOne_T = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 640:33]
    node _z_addOne_T_1 = bits(z_tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 640:57]
    node _z_addOne_T_2 = and(_z_addOne_T, _z_addOne_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 640:42]
    node _z_addOne_T_3 = bits(z_tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 640:77]
    node _z_addOne_T_4 = bits(z_tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 640:96]
    node _z_addOne_T_5 = or(_z_addOne_T_3, _z_addOne_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 640:81]
    node _z_addOne_T_6 = and(_z_addOne_T_2, _z_addOne_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 640:61]
    node _z_addOne_T_7 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 641:22]
    node _z_addOne_T_8 = bits(z_tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 641:46]
    node _z_addOne_T_9 = and(_z_addOne_T_7, _z_addOne_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 641:31]
    node _z_addOne_T_10 = bits(z_tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 641:66]
    node _z_addOne_T_11 = eq(_z_addOne_T_10, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 641:53]
    node _z_addOne_T_12 = and(_z_addOne_T_9, _z_addOne_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 641:50]
    node _z_addOne_T_13 = bits(z_tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 641:86]
    node _z_addOne_T_14 = eq(_z_addOne_T_13, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 641:73]
    node _z_addOne_T_15 = and(_z_addOne_T_12, _z_addOne_T_14) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 641:70]
    node _z_addOne_T_16 = bits(z_tempFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 641:105]
    node _z_addOne_T_17 = and(_z_addOne_T_15, _z_addOne_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 641:90]
    node _z_addOne_T_18 = or(_z_addOne_T_6, _z_addOne_T_17) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 640:102]
    node _z_addOne_T_19 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 642:22]
    node _z_addOne_T_20 = bits(z_tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 642:47]
    node _z_addOne_T_21 = bits(z_tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 642:66]
    node _z_addOne_T_22 = or(_z_addOne_T_20, _z_addOne_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 642:51]
    node _z_addOne_T_23 = bits(z_tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 642:85]
    node _z_addOne_T_24 = or(_z_addOne_T_22, _z_addOne_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 642:70]
    node _z_addOne_T_25 = and(_z_addOne_T_19, _z_addOne_T_24) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 642:31]
    node _z_addOne_T_26 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_addOne_T_27 = bits(_z_addOne_T_26, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 642:98]
    node _z_addOne_T_28 = and(_z_addOne_T_25, _z_addOne_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 642:90]
    node _z_addOne_T_29 = or(_z_addOne_T_18, _z_addOne_T_28) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 641:110]
    node _z_addOne_T_30 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 643:22]
    node _z_addOne_T_31 = bits(z_tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 643:47]
    node _z_addOne_T_32 = bits(z_tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 643:66]
    node _z_addOne_T_33 = or(_z_addOne_T_31, _z_addOne_T_32) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 643:51]
    node _z_addOne_T_34 = bits(z_tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 643:85]
    node _z_addOne_T_35 = or(_z_addOne_T_33, _z_addOne_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 643:70]
    node _z_addOne_T_36 = and(_z_addOne_T_30, _z_addOne_T_35) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 643:31]
    node _z_addOne_T_37 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_addOne_T_38 = bits(_z_addOne_T_37, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 643:99]
    node _z_addOne_T_39 = eq(_z_addOne_T_38, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 643:93]
    node _z_addOne_T_40 = and(_z_addOne_T_36, _z_addOne_T_39) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 643:90]
    node z_addOne = or(_z_addOne_T_29, _z_addOne_T_40) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 642:106]
    node _z_roundedFraction_T = bits(z_tempFraction, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 645:39]
    node z_roundedFraction = add(_z_roundedFraction_T, z_addOne) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 645:80]
    node _z_finalExponent_T = bits(z_tempExponent, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 648:44]
    node _z_finalExponent_T_1 = mux(z_isDenormalized, UInt<1>("h0"), _z_finalExponent_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 648:10]
    node z_finalExponent = mux(z_overflow, UInt<4>("hf"), _z_finalExponent_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 647:28]
    node z_finalFraction = bits(z_roundedFraction, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 650:40]
    node _z_T = eq(z_isResultNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 654:10]
    node _z_T_1 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 656:28]
    node _z_T_2 = eq(saturationMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 656:54]
    node _z_T_3 = and(_z_T_1, _z_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 656:36]
    node _z_T_4 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 657:25]
    node _z_T_5 = eq(saturationMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 657:51]
    node _z_T_6 = and(_z_T_4, _z_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 657:33]
    node _z_T_7 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_8 = eq(_z_T_7, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 657:67]
    node _z_T_9 = and(_z_T_6, _z_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 657:59]
    node _z_T_10 = or(_z_T_3, _z_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 656:63]
    node _z_T_11 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 658:25]
    node _z_T_12 = eq(saturationMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 658:51]
    node _z_T_13 = and(_z_T_11, _z_T_12) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 658:33]
    node _z_T_14 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_15 = eq(_z_T_14, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 658:67]
    node _z_T_16 = and(_z_T_13, _z_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 658:59]
    node _z_T_17 = or(_z_T_10, _z_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 657:76]
    node z_result_hi = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 659:24]
    node _z_result_T = cat(z_result_hi, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 659:24]
    node _z_T_18 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 660:34]
    node _z_T_19 = eq(saturationMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 660:60]
    node _z_T_20 = and(_z_T_18, _z_T_19) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 660:42]
    node _z_T_21 = eq(roundingMode, UInt<2>("h3")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 661:25]
    node _z_T_22 = eq(saturationMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 661:51]
    node _z_T_23 = and(_z_T_21, _z_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 661:33]
    node _z_T_24 = or(_z_T_20, _z_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 660:69]
    node _z_result_T_1 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node z_result_hi_1 = cat(_z_result_T_1, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 662:24]
    node _z_result_T_2 = cat(z_result_hi_1, UInt<3>("h6")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 662:24]
    node _z_T_25 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 663:34]
    node _z_T_26 = eq(saturationMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 663:60]
    node _z_T_27 = and(_z_T_25, _z_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 663:42]
    node _z_T_28 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_29 = eq(_z_T_28, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 663:76]
    node _z_T_30 = and(_z_T_27, _z_T_29) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 663:68]
    node _z_T_31 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 664:25]
    node _z_T_32 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_33 = eq(_z_T_32, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 664:41]
    node _z_T_34 = and(_z_T_31, _z_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 664:33]
    node _z_T_35 = or(_z_T_30, _z_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 663:85]
    node _z_result_T_3 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node z_result_hi_2 = cat(_z_result_T_3, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 665:24]
    node _z_result_T_4 = cat(z_result_hi_2, UInt<3>("h6")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 665:24]
    node _z_T_36 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 666:34]
    node _z_T_37 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_38 = eq(_z_T_37, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 666:50]
    node _z_T_39 = and(_z_T_36, _z_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 666:42]
    node _z_T_40 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 667:25]
    node _z_T_41 = eq(saturationMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 667:51]
    node _z_T_42 = and(_z_T_40, _z_T_41) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 667:33]
    node _z_T_43 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_44 = eq(_z_T_43, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 667:67]
    node _z_T_45 = and(_z_T_42, _z_T_44) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 667:59]
    node _z_T_46 = or(_z_T_39, _z_T_45) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 666:59]
    node _z_result_T_5 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node z_result_hi_3 = cat(_z_result_T_5, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 668:24]
    node _z_result_T_6 = cat(z_result_hi_3, UInt<3>("h6")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 668:24]
    node _GEN_0 = mux(_z_T_46, _z_result_T_6, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 667:77 668:18 670:18]
    node _GEN_1 = mux(_z_T_35, _z_result_T_4, _GEN_0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 664:51 665:18]
    node _GEN_2 = mux(_z_T_24, _z_result_T_2, _GEN_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 661:61 662:18]
    node _GEN_3 = mux(_z_T_17, _z_result_T, _GEN_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 658:77 659:18]
    node _z_result_T_7 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_8 = bits(z_finalFraction, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 673:57]
    node z_result_hi_4 = cat(_z_result_T_7, z_finalExponent) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 673:22]
    node _z_result_T_9 = cat(z_result_hi_4, _z_result_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 673:22]
    node _GEN_4 = mux(z_overflow, _GEN_3, _z_result_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 655:22 673:16]
    node z_result_hi_5 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 676:20]
    node _z_result_T_10 = cat(z_result_hi_5, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 676:20]
    node _GEN_5 = mux(z_isResultNaN, _z_result_T_10, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 675:29 676:14 678:14]
    node _GEN_6 = mux(_z_T, _GEN_4, _GEN_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 654:24]
    node z_result = _GEN_6 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 652:22]
    node _GEN_7 = mux(_T, z_result, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Convert.scala 12:23 13:7 18:7]
    z <= _GEN_7

  module GenerateFinalResult :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 12:18]
    input sign : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 13:16]
    input exponent : UInt<5> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 14:20]
    input mantissa : UInt<2> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 15:20]
    input roundingMode : UInt<2> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 16:24]
    input overflow : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 17:20]
    input saturationMode : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 18:26]
    input isInfty : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 19:19]
    input is0 : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 20:15]
    input isNaN : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 21:17]
    input NaNFractionValue : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 22:28]
    output z : UInt<8> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 23:13]

    node _result_T = bits(overflow, 0, 0) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 26:76]
    node _result_T_1 = bits(isInfty, 0, 0) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 27:15]
    node _result_T_2 = bits(is0, 0, 0) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 27:27]
    node _result_T_3 = bits(isNaN, 0, 0) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 27:41]
    node _result_T_4 = eq(_result_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 70:10]
    node _result_T_5 = eq(_result_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 70:22]
    node _result_T_6 = and(_result_T_4, _result_T_5) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 70:19]
    node _result_T_7 = eq(_result_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 70:30]
    node _result_T_8 = and(_result_T_6, _result_T_7) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 70:27]
    node _result_T_9 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 72:27]
    node _result_T_10 = eq(saturationMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 72:53]
    node _result_T_11 = and(_result_T_9, _result_T_10) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 72:35]
    node result_z_hi = cat(sign, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 73:19]
    node _result_z_T = cat(result_z_hi, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 73:19]
    node _result_T_12 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 74:34]
    node _result_T_13 = eq(saturationMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 74:60]
    node _result_T_14 = and(_result_T_12, _result_T_13) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 74:42]
    node _result_T_15 = eq(roundingMode, UInt<2>("h3")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 74:85]
    node _result_T_16 = or(_result_T_14, _result_T_15) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 74:69]
    node result_z_hi_1 = cat(sign, UInt<5>("h1e")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 75:19]
    node _result_z_T_1 = cat(result_z_hi_1, UInt<2>("h3")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 75:19]
    node _result_T_17 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 76:33]
    node _result_T_18 = eq(saturationMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 76:59]
    node _result_T_19 = and(_result_T_17, _result_T_18) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 76:41]
    node _result_T_20 = eq(sign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 76:75]
    node _result_T_21 = and(_result_T_19, _result_T_20) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 76:67]
    node result_z_hi_2 = cat(UInt<1>("h1"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 77:19]
    node _result_z_T_2 = cat(result_z_hi_2, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 77:19]
    node _result_T_22 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:34]
    node _result_T_23 = eq(saturationMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:60]
    node _result_T_24 = and(_result_T_22, _result_T_23) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:42]
    node _result_T_25 = eq(sign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:76]
    node _result_T_26 = and(_result_T_24, _result_T_25) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:68]
    node _result_T_27 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:102]
    node _result_T_28 = eq(sign, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:118]
    node _result_T_29 = and(_result_T_27, _result_T_28) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:110]
    node _result_T_30 = or(_result_T_26, _result_T_29) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:85]
    node result_z_hi_3 = cat(UInt<1>("h1"), UInt<5>("h1e")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 79:19]
    node _result_z_T_3 = cat(result_z_hi_3, UInt<2>("h3")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 79:19]
    node _result_T_31 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:34]
    node _result_T_32 = eq(sign, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:50]
    node _result_T_33 = and(_result_T_31, _result_T_32) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:42]
    node _result_T_34 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:76]
    node _result_T_35 = eq(saturationMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:102]
    node _result_T_36 = and(_result_T_34, _result_T_35) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:84]
    node _result_T_37 = eq(sign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:118]
    node _result_T_38 = and(_result_T_36, _result_T_37) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:110]
    node _result_T_39 = or(_result_T_33, _result_T_38) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:59]
    node result_z_hi_4 = cat(UInt<1>("h0"), UInt<5>("h1e")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 81:19]
    node _result_z_T_4 = cat(result_z_hi_4, UInt<2>("h3")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 81:19]
    node _result_T_40 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 82:33]
    node _result_T_41 = eq(saturationMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 82:59]
    node _result_T_42 = and(_result_T_40, _result_T_41) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 82:41]
    node _result_T_43 = eq(sign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 82:75]
    node _result_T_44 = and(_result_T_42, _result_T_43) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 82:67]
    node result_z_hi_5 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 83:19]
    node _result_z_T_5 = cat(result_z_hi_5, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 83:19]
    node _GEN_0 = mux(_result_T_44, _result_z_T_5, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 82:84 83:13 85:13]
    node _GEN_1 = mux(_result_T_39, _result_z_T_4, _GEN_0) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:128 81:13]
    node _GEN_2 = mux(_result_T_30, _result_z_T_3, _GEN_1) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:128 79:13]
    node _GEN_3 = mux(_result_T_21, _result_z_T_2, _GEN_2) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 76:84 77:13]
    node _GEN_4 = mux(_result_T_16, _result_z_T_1, _GEN_3) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 74:94 75:13]
    node _GEN_5 = mux(_result_T_11, _result_z_T, _GEN_4) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 72:62 73:13]
    node result_z_hi_6 = cat(sign, exponent) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 88:17]
    node _result_z_T_6 = cat(result_z_hi_6, mantissa) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 88:17]
    node _GEN_6 = mux(_result_T, _GEN_5, _result_z_T_6) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 71:22 88:11]
    node _result_T_45 = eq(_result_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 90:27]
    node _result_T_46 = and(_result_T_1, _result_T_45) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 90:24]
    node _result_T_47 = eq(_result_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 90:35]
    node _result_T_48 = and(_result_T_46, _result_T_47) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 90:32]
    node result_z_hi_7 = cat(sign, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 91:15]
    node _result_z_T_7 = cat(result_z_hi_7, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 91:15]
    node _result_T_49 = eq(_result_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 92:16]
    node _result_T_50 = and(_result_T_49, _result_T_2) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 92:25]
    node _result_T_51 = eq(_result_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 92:35]
    node _result_T_52 = and(_result_T_50, _result_T_51) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 92:32]
    node result_z_hi_8 = cat(sign, UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 93:15]
    node _result_z_T_8 = cat(result_z_hi_8, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 93:15]
    node result_z_lo = cat(UInt<1>("h1"), NaNFractionValue) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 95:15]
    node result_z_hi_9 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 95:15]
    node _result_z_T_9 = cat(result_z_hi_9, result_z_lo) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 95:15]
    node _GEN_7 = mux(_result_T_3, _result_z_T_9, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 94:23 95:9 97:9]
    node _GEN_8 = mux(_result_T_52, _result_z_T_8, _GEN_7) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 92:43 93:9]
    node _GEN_9 = mux(_result_T_48, _result_z_T_7, _GEN_8) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 90:43 91:9]
    node _GEN_10 = mux(_result_T_8, _GEN_6, _GEN_9) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 70:38]
    node _T = eq(enable, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 31:15]
    node result = _GEN_10 @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 69:17]
    node _GEN_11 = mux(_T, result, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 31:23 32:7 34:7]
    z <= _GEN_11

  module FPU8Generator :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 9:18]
    input a_data : UInt<8> @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 10:13]
    input b_data : UInt<8> @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 11:13]
    input opCode : UInt<4> @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 12:18]
    input roundingMode : UInt<2> @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 13:24]
    input saturationMode : UInt<1> @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 14:26]
    output z : UInt<8> @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 15:13]

    inst addSub of Add @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 17:22]
    inst multiply of Multiply @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 19:24]
    inst divide of Divide @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 21:22]
    inst compare of Compare @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 23:23]
    inst convert of Convert @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 25:23]
    inst generateFinalResult of GenerateFinalResult @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 27:35]
    node _addSub_enable_T = eq(opCode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 29:31]
    node _addSub_enable_T_1 = eq(opCode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 29:49]
    node _addSub_enable_T_2 = or(_addSub_enable_T, _addSub_enable_T_1) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 29:39]
    node _addSub_enable_T_3 = mux(_addSub_enable_T_2, enable, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 29:23]
    node _addSub_subtract_T = eq(opCode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 32:33]
    node _addSub_subtract_T_1 = mux(_addSub_subtract_T, UInt<1>("h1"), UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 32:25]
    node _multiply_enable_T = eq(opCode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 35:33]
    node _multiply_enable_T_1 = mux(_multiply_enable_T, enable, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 35:25]
    node _divide_enable_T = eq(opCode, UInt<2>("h3")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 40:31]
    node _divide_enable_T_1 = mux(_divide_enable_T, enable, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 40:23]
    node _compare_enable_T = eq(opCode, UInt<3>("h4")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 45:32]
    node _compare_enable_T_1 = eq(opCode, UInt<3>("h5")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 45:50]
    node _compare_enable_T_2 = or(_compare_enable_T, _compare_enable_T_1) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 45:40]
    node _compare_enable_T_3 = eq(opCode, UInt<3>("h6")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 45:68]
    node _compare_enable_T_4 = or(_compare_enable_T_2, _compare_enable_T_3) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 45:58]
    node _compare_enable_T_5 = eq(opCode, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 45:86]
    node _compare_enable_T_6 = or(_compare_enable_T_4, _compare_enable_T_5) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 45:76]
    node _compare_enable_T_7 = eq(opCode, UInt<4>("h8")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 45:104]
    node _compare_enable_T_8 = or(_compare_enable_T_6, _compare_enable_T_7) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 45:94]
    node _compare_enable_T_9 = eq(opCode, UInt<4>("h9")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 45:122]
    node _compare_enable_T_10 = or(_compare_enable_T_8, _compare_enable_T_9) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 45:112]
    node _compare_enable_T_11 = mux(_compare_enable_T_10, enable, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 45:24]
    node _compare_compareMode_T = eq(opCode, UInt<3>("h4")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 47:37]
    node _compare_compareMode_T_1 = eq(opCode, UInt<3>("h5")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 48:16]
    node _compare_compareMode_T_2 = eq(opCode, UInt<3>("h6")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 49:18]
    node _compare_compareMode_T_3 = eq(opCode, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 50:20]
    node _compare_compareMode_T_4 = eq(opCode, UInt<4>("h8")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 51:22]
    node _compare_compareMode_T_5 = mux(_compare_compareMode_T_4, UInt<3>("h4"), UInt<3>("h5")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 51:14]
    node _compare_compareMode_T_6 = mux(_compare_compareMode_T_3, UInt<2>("h3"), _compare_compareMode_T_5) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 50:12]
    node _compare_compareMode_T_7 = mux(_compare_compareMode_T_2, UInt<2>("h2"), _compare_compareMode_T_6) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 49:10]
    node _compare_compareMode_T_8 = mux(_compare_compareMode_T_1, UInt<1>("h1"), _compare_compareMode_T_7) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 48:8]
    node _compare_compareMode_T_9 = mux(_compare_compareMode_T, UInt<1>("h0"), _compare_compareMode_T_8) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 47:29]
    node _convert_enable_T = eq(opCode, UInt<4>("ha")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 55:32]
    node _convert_enable_T_1 = mux(_convert_enable_T, enable, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 55:24]
    node _T = eq(opCode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 62:15]
    node _T_1 = eq(opCode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 62:33]
    node _T_2 = or(_T, _T_1) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 62:23]
    node _generateFinalResult_exponent_T = bits(addSub.exponent, 4, 0) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 64:52]
    node _generateFinalResult_mantissa_T = bits(addSub.fraction, 1, 0) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 65:52]
    node _T_3 = eq(opCode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 75:21]
    node _generateFinalResult_exponent_T_1 = bits(multiply.exponent, 4, 0) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 77:54]
    node _generateFinalResult_mantissa_T_1 = bits(multiply.fraction, 1, 0) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 78:54]
    node _T_4 = eq(opCode, UInt<2>("h3")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 88:21]
    node _generateFinalResult_exponent_T_2 = bits(divide.exponent, 4, 0) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 90:52]
    node _generateFinalResult_mantissa_T_2 = bits(divide.fraction, 1, 0) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 91:52]
    node _T_5 = eq(opCode, UInt<3>("h4")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 101:21]
    node _T_6 = eq(opCode, UInt<3>("h5")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 101:39]
    node _T_7 = or(_T_5, _T_6) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 101:29]
    node _T_8 = eq(opCode, UInt<3>("h6")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 101:57]
    node _T_9 = or(_T_7, _T_8) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 101:47]
    node _T_10 = eq(opCode, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 101:75]
    node _T_11 = or(_T_9, _T_10) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 101:65]
    node _T_12 = eq(opCode, UInt<4>("h8")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 101:93]
    node _T_13 = or(_T_11, _T_12) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 101:83]
    node _T_14 = eq(opCode, UInt<4>("h9")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 101:111]
    node _T_15 = or(_T_13, _T_14) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 101:101]
    node _T_16 = eq(opCode, UInt<4>("ha")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 114:21]
    node _GEN_0 = mux(_T_16, UInt<1>("h0"), UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 114:30 115:30 128:30]
    node _GEN_1 = mux(_T_16, convert.z, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 114:30 126:7 139:7]
    node _GEN_2 = mux(_T_15, UInt<1>("h0"), _GEN_0) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 101:119 102:30]
    node _GEN_3 = mux(_T_15, compare.z, _GEN_1) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 101:119 113:7]
    node _GEN_4 = mux(_T_4, divide.sign, _GEN_2) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 88:30 89:30]
    node _GEN_5 = mux(_T_4, _generateFinalResult_exponent_T_2, _GEN_2) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 88:30 90:34]
    node _GEN_6 = mux(_T_4, _generateFinalResult_mantissa_T_2, _GEN_2) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 88:30 91:34]
    node _GEN_7 = mux(_T_4, roundingMode, _GEN_2) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 88:30 92:38]
    node _GEN_8 = mux(_T_4, divide.overflow, _GEN_2) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 88:30 93:34]
    node _GEN_9 = mux(_T_4, saturationMode, _GEN_2) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 88:30 94:40]
    node _GEN_10 = mux(_T_4, divide.isInfty, _GEN_2) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 88:30 95:33]
    node _GEN_11 = mux(_T_4, divide.is0, _GEN_2) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 88:30 96:29]
    node _GEN_12 = mux(_T_4, divide.isNaN, _GEN_2) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 88:30 97:31]
    node _GEN_13 = mux(_T_4, divide.NaNFractionValue, _GEN_2) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 88:30 98:42]
    node _GEN_14 = mux(_T_4, generateFinalResult.z, _GEN_3) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 88:30 100:7]
    node _GEN_15 = mux(_T_3, multiply.sign, _GEN_4) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 75:30 76:30]
    node _GEN_16 = mux(_T_3, _generateFinalResult_exponent_T_1, _GEN_5) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 75:30 77:34]
    node _GEN_17 = mux(_T_3, _generateFinalResult_mantissa_T_1, _GEN_6) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 75:30 78:34]
    node _GEN_18 = mux(_T_3, roundingMode, _GEN_7) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 75:30 79:38]
    node _GEN_19 = mux(_T_3, multiply.overflow, _GEN_8) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 75:30 80:34]
    node _GEN_20 = mux(_T_3, saturationMode, _GEN_9) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 75:30 81:40]
    node _GEN_21 = mux(_T_3, multiply.isInfty, _GEN_10) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 75:30 82:33]
    node _GEN_22 = mux(_T_3, multiply.is0, _GEN_11) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 75:30 83:29]
    node _GEN_23 = mux(_T_3, multiply.isNaN, _GEN_12) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 75:30 84:31]
    node _GEN_24 = mux(_T_3, multiply.NaNFractionValue, _GEN_13) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 75:30 85:42]
    node _GEN_25 = mux(_T_3, generateFinalResult.z, _GEN_14) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 75:30 87:7]
    node _GEN_26 = mux(_T_2, addSub.sign, _GEN_15) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 62:42 63:30]
    node _GEN_27 = mux(_T_2, _generateFinalResult_exponent_T, _GEN_16) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 62:42 64:34]
    node _GEN_28 = mux(_T_2, _generateFinalResult_mantissa_T, _GEN_17) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 62:42 65:34]
    node _GEN_29 = mux(_T_2, roundingMode, _GEN_18) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 62:42 66:38]
    node _GEN_30 = mux(_T_2, addSub.overflow, _GEN_19) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 62:42 67:34]
    node _GEN_31 = mux(_T_2, saturationMode, _GEN_20) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 62:42 68:40]
    node _GEN_32 = mux(_T_2, addSub.isInfty, _GEN_21) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 62:42 69:33]
    node _GEN_33 = mux(_T_2, addSub.is0, _GEN_22) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 62:42 70:29]
    node _GEN_34 = mux(_T_2, addSub.isNaN, _GEN_23) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 62:42 71:31]
    node _GEN_35 = mux(_T_2, addSub.NaNFractionValue, _GEN_24) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 62:42 72:42]
    node _GEN_36 = mux(_T_2, generateFinalResult.z, _GEN_25) @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 62:42 74:7]
    z <= _GEN_36
    addSub.clock <= clock
    addSub.reset <= reset
    addSub.enable <= _addSub_enable_T_3 @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 29:17]
    addSub.a_data <= a_data @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 30:12]
    addSub.b_data <= b_data @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 31:12]
    addSub.subtract <= _addSub_subtract_T_1 @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 32:19]
    addSub.roundingMode <= roundingMode @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 33:23]
    multiply.clock <= clock
    multiply.reset <= reset
    multiply.enable <= _multiply_enable_T_1 @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 35:19]
    multiply.a_data <= a_data @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 36:14]
    multiply.b_data <= b_data @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 37:14]
    multiply.roundingMode <= roundingMode @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 38:25]
    divide.clock <= clock
    divide.reset <= reset
    divide.enable <= _divide_enable_T_1 @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 40:17]
    divide.a_data <= a_data @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 41:12]
    divide.b_data <= b_data @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 42:12]
    divide.roundingMode <= roundingMode @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 43:23]
    compare.clock <= clock
    compare.reset <= reset
    compare.enable <= _compare_enable_T_11 @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 45:18]
    compare.compareMode <= _compare_compareMode_T_9 @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 47:23]
    compare.a_data <= a_data @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 52:13]
    compare.b_data <= b_data @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 53:13]
    convert.clock <= clock
    convert.reset <= reset
    convert.enable <= _convert_enable_T_1 @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 55:18]
    convert.a_data <= a_data @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 56:13]
    convert.roundingMode <= roundingMode @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 57:24]
    convert.saturationMode <= saturationMode @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 58:26]
    generateFinalResult.clock <= clock
    generateFinalResult.reset <= reset
    generateFinalResult.enable <= enable @[\\src\\main\\scala\\fpu8\\FPU8Generator.scala 60:30]
    generateFinalResult.sign <= _GEN_26
    generateFinalResult.exponent <= _GEN_27
    generateFinalResult.mantissa <= _GEN_28
    generateFinalResult.roundingMode <= _GEN_29
    generateFinalResult.overflow <= _GEN_30
    generateFinalResult.saturationMode <= _GEN_31
    generateFinalResult.isInfty <= _GEN_32
    generateFinalResult.is0 <= _GEN_33
    generateFinalResult.isNaN <= _GEN_34
    generateFinalResult.NaNFractionValue <= _GEN_35
