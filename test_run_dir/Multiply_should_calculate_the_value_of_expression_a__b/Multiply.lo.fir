FIRRTL version 1.2.0
circuit Multiply :
  module Multiply :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 9:18]
    input a_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Multiply.scala 10:13]
    input b_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Multiply.scala 11:13]
    input roundingMode : UInt<2> @[\\src\\main\\scala\\fpu8\\Multiply.scala 12:24]
    output sign : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 13:16]
    output exponent : UInt<5> @[\\src\\main\\scala\\fpu8\\Multiply.scala 14:20]
    output fraction : UInt<4> @[\\src\\main\\scala\\fpu8\\Multiply.scala 15:20]
    output overflow : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 16:20]
    output isInfty : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 17:19]
    output is0 : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 18:15]
    output isNaN : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 19:17]
    output NaNFractionValue : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 20:28]

    node _isResultNaN_T = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_1 = eq(_isResultNaN_T, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultNaN_T_2 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_3 = eq(_isResultNaN_T_2, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:46]
    node _isResultNaN_T_4 = and(_isResultNaN_T_1, _isResultNaN_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResultNaN_T_5 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_6 = eq(_isResultNaN_T_5, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResultNaN_T_7 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_8 = eq(_isResultNaN_T_7, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:46]
    node _isResultNaN_T_9 = and(_isResultNaN_T_6, _isResultNaN_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResultNaN_T_10 = or(_isResultNaN_T_4, _isResultNaN_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 421:37]
    node _isResult0_T = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_1 = eq(_isResult0_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _isResult0_T_2 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_3 = eq(_isResult0_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResult0_T_4 = and(_isResult0_T_1, _isResult0_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 51:26]
    node _isResult0_T_5 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_6 = eq(_isResult0_T_5, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResult0_T_7 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_8 = eq(_isResult0_T_7, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:46]
    node _isResult0_T_9 = and(_isResult0_T_6, _isResult0_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResult0_T_10 = eq(_isResult0_T_9, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 429:48]
    node _isResult0_T_11 = and(_isResult0_T_4, _isResult0_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 429:45]
    node _isResult0_T_12 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_13 = eq(_isResult0_T_12, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _isResult0_T_14 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_15 = eq(_isResult0_T_14, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:44]
    node _isResult0_T_16 = and(_isResult0_T_13, _isResult0_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 51:26]
    node _isResult0_T_17 = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_18 = eq(_isResult0_T_17, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:41]
    node _isResult0_T_19 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_20 = eq(_isResult0_T_19, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:46]
    node _isResult0_T_21 = and(_isResult0_T_18, _isResult0_T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 41:30]
    node _isResult0_T_22 = eq(_isResult0_T_21, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 429:79]
    node _isResult0_T_23 = and(_isResult0_T_16, _isResult0_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 429:76]
    node _isResult0_T_24 = or(_isResult0_T_11, _isResult0_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 429:62]
    node _sign_T = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _sign_T_1 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node resultSign = xor(_sign_T, _sign_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 151:26]
    node _exponent_T = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_1 = eq(_exponent_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _exponent_T_2 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_3 = eq(_exponent_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _exponent_T_4 = and(_exponent_T_1, _exponent_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 154:25]
    node _exponent_T_5 = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_6 = eq(_exponent_T_5, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _exponent_T_7 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_8 = eq(_exponent_T_7, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _exponent_T_9 = xor(_exponent_T_6, _exponent_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 156:27]
    node _exponent_T_10 = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_11 = cat(UInt<2>("h0"), _exponent_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 157:16]
    node _exponent_T_12 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_13 = cat(UInt<2>("h0"), _exponent_T_12) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 157:47]
    node _exponent_T_14 = add(_exponent_T_11, _exponent_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 157:42]
    node _exponent_T_15 = tail(_exponent_T_14, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 157:42]
    node _exponent_T_16 = sub(_exponent_T_15, UInt<6>("h6")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 157:74]
    node _exponent_T_17 = tail(_exponent_T_16, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 157:74]
    node _exponent_T_18 = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_19 = cat(UInt<2>("h0"), _exponent_T_18) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 158:16]
    node _exponent_T_20 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_21 = cat(UInt<2>("h0"), _exponent_T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 158:47]
    node _exponent_T_22 = add(_exponent_T_19, _exponent_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 158:42]
    node _exponent_T_23 = tail(_exponent_T_22, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 158:42]
    node _exponent_T_24 = sub(_exponent_T_23, UInt<6>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 158:74]
    node _exponent_T_25 = tail(_exponent_T_24, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 158:74]
    node _exponent_T_26 = mux(_exponent_T_9, _exponent_T_17, _exponent_T_25) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 156:14]
    node exponent_1 = mux(_exponent_T_4, UInt<6>("h34"), _exponent_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 154:12]
    node _firstOperandFraction_T = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _firstOperandFraction_T_1 = eq(_firstOperandFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _firstOperandFraction_T_2 = eq(_firstOperandFraction_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 166:36]
    node _firstOperandFraction_T_3 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node firstOperandFraction = cat(_firstOperandFraction_T_2, _firstOperandFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 166:35]
    node _secondOperandFraction_T = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _secondOperandFraction_T_1 = eq(_secondOperandFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:39]
    node _secondOperandFraction_T_2 = eq(_secondOperandFraction_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 167:37]
    node _secondOperandFraction_T_3 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node secondOperandFraction = cat(_secondOperandFraction_T_2, _secondOperandFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 167:36]
    node _product_partialProducts_compare_T = bits(secondOperandFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node product_partialProducts_compare = mux(_product_partialProducts_compare_T, UInt<4>("hf"), UInt<4>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _product_partialProducts_T = and(firstOperandFraction, product_partialProducts_compare) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node product_partialProducts_0 = shl(_product_partialProducts_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _product_partialProducts_compare_T_1 = bits(secondOperandFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node product_partialProducts_compare_1 = mux(_product_partialProducts_compare_T_1, UInt<4>("hf"), UInt<4>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _product_partialProducts_T_1 = and(firstOperandFraction, product_partialProducts_compare_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node product_partialProducts_1 = shl(_product_partialProducts_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _product_partialProducts_compare_T_2 = bits(secondOperandFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node product_partialProducts_compare_2 = mux(_product_partialProducts_compare_T_2, UInt<4>("hf"), UInt<4>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _product_partialProducts_T_2 = and(firstOperandFraction, product_partialProducts_compare_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node product_partialProducts_2 = shl(_product_partialProducts_T_2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _product_partialProducts_compare_T_3 = bits(secondOperandFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:26]
    node product_partialProducts_compare_3 = mux(_product_partialProducts_compare_T_3, UInt<4>("hf"), UInt<4>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 96:24]
    node _product_partialProducts_T_3 = and(firstOperandFraction, product_partialProducts_compare_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:11]
    node product_partialProducts_3 = shl(_product_partialProducts_T_3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 97:22]
    node _product_partialSums_T = add(product_partialProducts_0, product_partialProducts_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 107:34]
    node product_partialSums_0 = add(_product_partialSums_T, product_partialProducts_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 107:39]
    node product = add(product_partialSums_0, product_partialProducts_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 104:15]
    node _T = bits(product, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 294:64]
    node _leadingZeros_T = bits(_T, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_1 = bits(_leadingZeros_T, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_2 = bits(_leadingZeros_T_1, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_3 = bits(_leadingZeros_T_1, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_4 = cat(_leadingZeros_T_2, _leadingZeros_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_5 = bits(_leadingZeros_T, 3, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_6 = bits(_leadingZeros_T_5, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_7 = bits(_leadingZeros_T_5, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_8 = cat(_leadingZeros_T_6, _leadingZeros_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_9 = cat(_leadingZeros_T_4, _leadingZeros_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_10 = bits(_T, 6, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_11 = bits(_leadingZeros_T_10, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_12 = bits(_leadingZeros_T_11, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_13 = bits(_leadingZeros_T_11, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_14 = cat(_leadingZeros_T_12, _leadingZeros_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_15 = bits(_leadingZeros_T_10, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_16 = cat(_leadingZeros_T_14, _leadingZeros_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_17 = cat(_leadingZeros_T_9, _leadingZeros_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:44]
    node _leadingZeros_T_18 = bits(_leadingZeros_T_17, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_19 = bits(_leadingZeros_T_17, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_20 = bits(_leadingZeros_T_17, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_21 = bits(_leadingZeros_T_17, 3, 3) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_22 = bits(_leadingZeros_T_17, 4, 4) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_23 = bits(_leadingZeros_T_17, 5, 5) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_24 = bits(_leadingZeros_T_17, 6, 6) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_25 = mux(_leadingZeros_T_23, UInt<3>("h5"), UInt<3>("h6")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_26 = mux(_leadingZeros_T_22, UInt<3>("h4"), _leadingZeros_T_25) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_27 = mux(_leadingZeros_T_21, UInt<2>("h3"), _leadingZeros_T_26) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_28 = mux(_leadingZeros_T_20, UInt<2>("h2"), _leadingZeros_T_27) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_29 = mux(_leadingZeros_T_19, UInt<1>("h1"), _leadingZeros_T_28) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_30 = mux(_leadingZeros_T_18, UInt<1>("h0"), _leadingZeros_T_29) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node shift = pad(_leadingZeros_T_30, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 55:28 58:18]
    node _shiftedValue_T = dshl(_T, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:27]
    node _exponentShiftRight_T = sub(UInt<6>("h0"), exponent_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 296:58]
    node exponentShiftRight = tail(_exponentShiftRight_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 296:58]
    node _exponentShiftLeft_T = sub(exponent_1, UInt<6>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 298:38]
    node exponentShiftLeft = tail(_exponentShiftLeft_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 298:38]
    node _T_1 = bits(exponent_1, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 304:19]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 304:10]
    node _T_3 = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 304:52]
    node _T_4 = geq(_T_3, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 304:72]
    node _T_5 = and(_T_2, _T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 304:40]
    node _T_6 = bits(product, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 305:25]
    node _T_7 = and(_T_5, _T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 305:7]
    node _T_8 = bits(exponent_1, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 308:25]
    node _T_9 = eq(_T_8, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 308:16]
    node _T_10 = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 308:58]
    node _T_11 = lt(_T_10, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 308:78]
    node _T_12 = and(_T_9, _T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 308:46]
    node _T_13 = bits(product, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 309:25]
    node _T_14 = and(_T_12, _T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 309:7]
    node _tempExponent_T = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 310:31]
    node _tempExponent_T_1 = add(_tempExponent_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 310:38]
    node _tempExponent_T_2 = tail(_tempExponent_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 310:38]
    node _tempFraction_T = bits(product, 7, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 311:42]
    node _tempFraction_T_1 = bits(product, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 311:89]
    node _tempFraction_T_2 = orr(_tempFraction_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 311:96]
    node _tempFraction_T_3 = cat(_tempFraction_T, _tempFraction_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 311:26]
    node _T_15 = bits(exponent_1, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 312:25]
    node _T_16 = eq(_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 312:16]
    node _T_17 = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 312:58]
    node _T_18 = gt(_T_17, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 312:78]
    node _T_19 = and(_T_16, _T_18) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 312:46]
    node shiftedCalcValue = bits(_shiftedValue_T, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 56:28 60:18]
    node _T_20 = bits(shiftedCalcValue, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 313:26]
    node _T_21 = and(_T_19, _T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 313:7]
    node _tempExponent_T_3 = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 314:31]
    node _tempExponent_T_4 = sub(_tempExponent_T_3, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 314:51]
    node _tempExponent_T_5 = tail(_tempExponent_T_4, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 314:51]
    node _T_22 = bits(exponent_1, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 318:21]
    node _T_23 = eq(_T_22, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 318:12]
    node _T_24 = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 318:54]
    node _T_25 = gt(_T_24, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 318:74]
    node _T_26 = and(_T_23, _T_25) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 318:42]
    node _tempFraction_T_4 = bits(product, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 319:40]
    node _tempFraction_T_5 = dshl(_tempFraction_T_4, exponentShiftLeft) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 319:71]
    node _tempFraction_T_6 = bits(product, 7, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 321:44]
    node _tempFraction_T_7 = bits(product, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 321:91]
    node _tempFraction_T_8 = orr(_tempFraction_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 321:98]
    node _tempFraction_T_9 = cat(_tempFraction_T_6, _tempFraction_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 321:28]
    node _tempFraction_T_10 = dshr(_tempFraction_T_9, exponentShiftRight) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 321:110]
    node _GEN_0 = mux(_T_26, _tempFraction_T_5, _tempFraction_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 318:82 319:22 321:22]
    node _GEN_1 = mux(_T_21, _tempExponent_T_5, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 313:55 314:20 317:20]
    node _GEN_2 = mux(_T_21, shiftedCalcValue, _GEN_0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 313:55 315:20]
    node _GEN_3 = mux(_T_14, _tempExponent_T_2, _GEN_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 309:54 310:20]
    node _GEN_4 = mux(_T_14, _tempFraction_T_3, _GEN_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 309:54 311:20]
    node _GEN_5 = mux(_T_7, UInt<4>("hf"), _GEN_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 305:54 306:20]
    node _GEN_6 = mux(_T_7, UInt<7>("h7f"), _GEN_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 305:54 307:20]
    node _addOne_T = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:33]
    node tempFraction = bits(_GEN_6, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 302:28]
    node _addOne_T_1 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:57]
    node _addOne_T_2 = and(_addOne_T, _addOne_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:42]
    node _addOne_T_3 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:77]
    node _addOne_T_4 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:96]
    node _addOne_T_5 = or(_addOne_T_3, _addOne_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:81]
    node _addOne_T_6 = and(_addOne_T_2, _addOne_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:61]
    node _addOne_T_7 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:22]
    node _addOne_T_8 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:46]
    node _addOne_T_9 = and(_addOne_T_7, _addOne_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:31]
    node _addOne_T_10 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:66]
    node _addOne_T_11 = eq(_addOne_T_10, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:53]
    node _addOne_T_12 = and(_addOne_T_9, _addOne_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:50]
    node _addOne_T_13 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:86]
    node _addOne_T_14 = eq(_addOne_T_13, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:73]
    node _addOne_T_15 = and(_addOne_T_12, _addOne_T_14) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:70]
    node _addOne_T_16 = bits(tempFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:105]
    node _addOne_T_17 = and(_addOne_T_15, _addOne_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:90]
    node _addOne_T_18 = or(_addOne_T_6, _addOne_T_17) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 229:102]
    node _addOne_T_19 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:22]
    node _addOne_T_20 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:47]
    node _addOne_T_21 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:66]
    node _addOne_T_22 = or(_addOne_T_20, _addOne_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:51]
    node _addOne_T_23 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:85]
    node _addOne_T_24 = or(_addOne_T_22, _addOne_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:70]
    node _addOne_T_25 = and(_addOne_T_19, _addOne_T_24) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:31]
    node _addOne_T_26 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:98]
    node _addOne_T_27 = and(_addOne_T_25, _addOne_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:90]
    node _addOne_T_28 = or(_addOne_T_18, _addOne_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:110]
    node _addOne_T_29 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:22]
    node _addOne_T_30 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:47]
    node _addOne_T_31 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:66]
    node _addOne_T_32 = or(_addOne_T_30, _addOne_T_31) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:51]
    node _addOne_T_33 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:85]
    node _addOne_T_34 = or(_addOne_T_32, _addOne_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:70]
    node _addOne_T_35 = and(_addOne_T_29, _addOne_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:31]
    node _addOne_T_36 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:99]
    node _addOne_T_37 = eq(_addOne_T_36, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:93]
    node _addOne_T_38 = and(_addOne_T_35, _addOne_T_37) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 232:90]
    node addOne = or(_addOne_T_28, _addOne_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 231:106]
    node _roundedFraction_T = bits(tempFraction, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:39]
    node roundedFraction = add(_roundedFraction_T, addOne) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:66]
    node _finalFraction_T = bits(roundedFraction, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:44]
    node _finalFraction_T_1 = eq(_finalFraction_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:65]
    node _finalFraction_T_2 = bits(roundedFraction, 4, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 237:22]
    node _finalFraction_T_3 = bits(roundedFraction, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 237:62]
    node resultFraction = mux(_finalFraction_T_1, _finalFraction_T_2, _finalFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 236:28]
    node _finalExponent_T = bits(roundedFraction, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:44]
    node _finalExponent_T_1 = eq(_finalExponent_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:65]
    node _finalExponent_T_2 = bits(roundedFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:92]
    node tempExponent = bits(_GEN_5, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 300:28]
    node _finalExponent_T_3 = eq(tempExponent, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:125]
    node _finalExponent_T_4 = and(_finalExponent_T_2, _finalExponent_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:109]
    node _finalExponent_T_5 = or(_finalExponent_T_1, _finalExponent_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:73]
    node _finalExponent_T_6 = add(tempExponent, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 240:20]
    node _finalExponent_T_7 = tail(_finalExponent_T_6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 240:20]
    node resultExponent = mux(_finalExponent_T_5, _finalExponent_T_7, tempExponent) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 239:28]
    node _overflow_T = gt(resultExponent, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 244:27]
    node _overflow_T_1 = bits(resultExponent, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 244:62]
    node _overflow_T_2 = eq(_overflow_T_1, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 244:86]
    node _overflow_T_3 = eq(resultFraction, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 244:123]
    node _overflow_T_4 = and(_overflow_T_2, _overflow_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 244:105]
    node _overflow_T_5 = or(_overflow_T, _overflow_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 244:44]
    node _overflow_T_6 = geq(tempExponent, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 245:24]
    node _overflow_T_7 = bits(tempFraction, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 245:58]
    node _overflow_T_8 = eq(_overflow_T_7, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 245:85]
    node _overflow_T_9 = and(_overflow_T_6, _overflow_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 245:42]
    node resultOverflow = or(_overflow_T_5, _overflow_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 244:134]
    node _T_27 = eq(enable, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 25:15]
    node _GEN_7 = mux(_T_27, resultSign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 25:24 26:10 35:10]
    node _GEN_8 = mux(_T_27, resultExponent, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 25:24 27:14 36:14]
    node _GEN_9 = mux(_T_27, resultFraction, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 25:24 28:14 37:14]
    node _GEN_10 = mux(_T_27, resultOverflow, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 25:24 29:14 38:14]
    node _GEN_11 = mux(_T_27, UInt<1>("h0"), UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 25:24 30:13 39:13]
    node isResult0 = _isResult0_T_24 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 429:{34,34}]
    node _GEN_12 = mux(_T_27, isResult0, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 25:24 31:9 40:9]
    node isResultNaN = _isResultNaN_T_10 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 421:{25,25}]
    node _GEN_13 = mux(_T_27, isResultNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 25:24 32:11 41:11]
    sign <= _GEN_7
    exponent <= _GEN_8
    fraction <= _GEN_9
    overflow <= _GEN_10
    isInfty <= _GEN_11
    is0 <= _GEN_12
    isNaN <= _GEN_13
    NaNFractionValue <= _GEN_11
