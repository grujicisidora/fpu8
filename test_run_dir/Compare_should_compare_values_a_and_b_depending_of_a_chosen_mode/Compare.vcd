$date
2024-10-16T20:30+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module Compare $end
 $var wire 8 ! result_result_6 $end
 $var wire 8 " result_result_7 $end
 $var wire 8 # result_result_4 $end
 $var wire 8 $ result_result_5 $end
 $var wire 8 % result_result_2 $end
 $var wire 8 & result_result_3 $end
 $var wire 1 ' enable $end
 $var wire 8 ( result_result_1 $end
 $var wire 8 ) result_result $end
 $var wire 8 * a_data $end
 $var wire 1 + reset $end
 $var wire 5 , status $end
 $var wire 3 - compareMode $end
 $var wire 8 . result $end
 $var wire 8 / z $end
 $var wire 1 0 isNaN $end
 $var wire 4 1 result_result_hi_7 $end
 $var wire 4 2 result_result_hi_6 $end
 $var wire 4 3 result_result_hi_3 $end
 $var wire 4 4 result_result_hi_2 $end
 $var wire 4 5 result_result_hi $end
 $var wire 4 6 result_result_hi_5 $end
 $var wire 4 7 result_result_hi_4 $end
 $var wire 1 8 clock $end
 $var wire 4 9 result_result_hi_1 $end
 $var wire 8 : b_data $end
$upscope $end
$enddefinitions $end
$dumpvars
00
b00000000 *
b00000000 &
b00000000 )
b00000000 (
08
b00000000 #
b00000000 "
b00000000 %
b00000000 $
b00000000 !
b00000000 :
b00000 ,
b00000000 /
b00000000 .
b000 -
b0000 4
b0000 5
b0000 2
b0000 3
b0000 1
0'
0+
b0000 9
b0000 6
b0000 7
$end
#0
b00111000 !
b00111000 #
b00111000 %
b00111000 &
b00111000 )
1+
b0111 1
b0111 2
b0111 3
b0111 4
b0111 5
b0111 6
b0111 7
b0111 9
#1
18
#6
b00000000 !
b00111000 "
b00000000 #
b00000000 $
b00000000 %
b00111000 &
b00000000 (
b00111000 )
b00101010 *
0+
08
b01001011 :
#11
18
#16
08
#21
18
#26
1'
08
b00111000 .
b00111000 /
#31
18
#36
08
b001 -
b00000000 .
b00000000 /
#41
18
#46
08
#51
18
#56
08
b010 -
#61
18
#66
08
#71
18
#76
08
b011 -
b00111000 .
b00111000 /
#81
18
#86
08
#91
18
#96
08
b100 -
b00000000 .
b00000000 /
#101
18
#106
08
#111
18
#116
08
b101 -
b00111000 .
b00111000 /
#121
18
#126
08
#131
18
#136
b00111000 $
b00111000 (
08
b10101010 *
b000 -
#141
18
#146
08
#151
18
#156
0'
08
b00000000 *
b00000000 :
