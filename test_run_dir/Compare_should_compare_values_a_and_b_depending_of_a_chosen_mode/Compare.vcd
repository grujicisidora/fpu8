$date
2024-10-15T14:30+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module Compare $end
 $var wire 8 ! a_data $end
 $var wire 4 " z_result_hi_5 $end
 $var wire 5 # z_result_hi_6 $end
 $var wire 5 $ z_result_hi_7 $end
 $var wire 5 % z_result_hi_8 $end
 $var wire 4 & z_result_hi_1 $end
 $var wire 5 ' z_result_hi_2 $end
 $var wire 4 ( z_result_hi_3 $end
 $var wire 5 ) z_result_hi_4 $end
 $var wire 4 * z_result_hi_9 $end
 $var wire 1 + isResultNaN $end
 $var wire 1 , z_isResultNaN $end
 $var wire 8 - z $end
 $var wire 8 . z_result $end
 $var wire 1 / z_result_isResultNaN $end
 $var wire 8 0 z_result_2 $end
 $var wire 8 1 z_result_1 $end
 $var wire 8 2 z_result_result_3 $end
 $var wire 8 3 z_result_4 $end
 $var wire 8 4 z_result_result_2 $end
 $var wire 8 5 z_result_3 $end
 $var wire 8 6 z_result_result_1 $end
 $var wire 8 7 z_result_5 $end
 $var wire 4 8 z_result_result_hi_7 $end
 $var wire 5 9 z_result_result_hi_6 $end
 $var wire 4 : z_result_result_hi_5 $end
 $var wire 5 ; z_result_result_hi_4 $end
 $var wire 4 < z_result_result_hi_3 $end
 $var wire 5 = z_result_result_hi_2 $end
 $var wire 4 > z_result_result_hi_1 $end
 $var wire 5 ? z_result_result_hi $end
 $var wire 5 @ z_result_hi $end
 $var wire 1 A enable $end
 $var wire 1 B reset $end
 $var wire 5 C status $end
 $var wire 3 D compareMode $end
 $var wire 8 E z_result_result $end
 $var wire 1 F z_result_isResultNaN_3 $end
 $var wire 1 G z_result_isResultNaN_2 $end
 $var wire 1 H z_result_isResultNaN_1 $end
 $var wire 1 I z_isResultNaN_5 $end
 $var wire 1 J z_isResultNaN_4 $end
 $var wire 1 K z_isResultNaN_3 $end
 $var wire 1 L z_isResultNaN_2 $end
 $var wire 1 M z_isResultNaN_1 $end
 $var wire 1 N clock $end
 $var wire 8 O b_data $end
$upscope $end
$enddefinitions $end
$dumpvars
b00000000 -
b0000 >
b000 D
b00000000 !
b00000 #
0A
0B
b00000 %
b00000 $
b00000 '
b00000000 7
b00000000 6
0F
b00000 )
0G
0H
b00000000 3
0I
b00000000 2
0J
b00000000 5
0K
b00000000 4
0L
0M
b00000000 .
0N
b00000000 1
b00000000 0
b0000 "
b00000 9
b00000 ;
b0000 *
b00000 =
b00000000 E
b0000 (
b00000 ?
b0000 &
b00000 @
b00000 C
b0000 <
b0000 :
0+
b0000 8
0,
b00000000 O
0/
$end
#0
b01111 @
1B
b00111000 E
b0111 "
b01111 #
b01111 $
b01111 %
b0111 &
b01111 '
b0111 (
b01111 )
b0111 *
b00111000 .
b00111000 0
b00111000 2
b00111000 3
b00111000 6
b0111 8
b01111 9
b0111 :
b01111 ;
b0111 <
b01111 =
b0111 >
b01111 ?
#1
1N
#6
b00101010 !
0B
b00111000 E
b00111000 .
0N
b01001011 O
b00000000 0
b00000000 1
b00000000 2
b00000000 3
b00000000 4
b00111000 5
b00000000 6
b00111000 7
#11
1N
#16
0N
#21
1N
#26
1A
b00111000 -
0N
#31
1N
#36
b001 D
b00000000 -
0N
#41
1N
#46
0N
#51
1N
#56
b010 D
0N
#61
1N
#66
0N
#71
1N
#76
b011 D
b00111000 -
0N
#81
1N
#86
0N
#91
1N
#96
b100 D
b00000000 -
0N
#101
1N
#106
0N
#111
1N
#116
b101 D
b00111000 -
0N
#121
1N
#126
0N
#131
1N
#136
b10101010 !
b00111000 1
b00111000 3
b00111000 4
b000 D
0N
#141
1N
#146
0N
#151
1N
#156
b00000000 !
0A
0N
b00000000 O
