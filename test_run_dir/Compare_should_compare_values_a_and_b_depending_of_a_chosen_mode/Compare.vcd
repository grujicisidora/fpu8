$date
2024-10-01T20:31+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module Compare $end
 $var wire 8 ! a_data $end
 $var wire 4 " z_result_hi_5 $end
 $var wire 5 # z_result_hi_6 $end
 $var wire 5 $ z_result_hi_7 $end
 $var wire 5 % z_result_hi_8 $end
 $var wire 4 & z_result_hi_1 $end
 $var wire 5 ' z_result_hi_2 $end
 $var wire 4 ( z_result_hi_3 $end
 $var wire 5 ) z_result_hi_4 $end
 $var wire 4 * z_result_hi_9 $end
 $var wire 1 + z_isResultNaN $end
 $var wire 8 , z $end
 $var wire 8 - z_result $end
 $var wire 1 . z_result_isResultNaN $end
 $var wire 8 / z_result_2 $end
 $var wire 8 0 z_result_1 $end
 $var wire 8 1 z_result_result_3 $end
 $var wire 8 2 z_result_4 $end
 $var wire 8 3 z_result_result_2 $end
 $var wire 8 4 z_result_3 $end
 $var wire 8 5 z_result_result_1 $end
 $var wire 8 6 z_result_5 $end
 $var wire 4 7 z_result_result_hi_7 $end
 $var wire 5 8 z_result_result_hi_6 $end
 $var wire 4 9 z_result_result_hi_5 $end
 $var wire 5 : z_result_result_hi_4 $end
 $var wire 4 ; z_result_result_hi_3 $end
 $var wire 5 < z_result_result_hi_2 $end
 $var wire 4 = z_result_result_hi_1 $end
 $var wire 5 > z_result_result_hi $end
 $var wire 5 ? z_result_hi $end
 $var wire 1 @ enable $end
 $var wire 1 A reset $end
 $var wire 3 B compareMode $end
 $var wire 8 C z_result_result $end
 $var wire 1 D z_result_isResultNaN_3 $end
 $var wire 1 E z_result_isResultNaN_2 $end
 $var wire 1 F z_result_isResultNaN_1 $end
 $var wire 1 G z_isResultNaN_5 $end
 $var wire 1 H z_isResultNaN_4 $end
 $var wire 1 I z_isResultNaN_3 $end
 $var wire 1 J z_isResultNaN_2 $end
 $var wire 1 K z_isResultNaN_1 $end
 $var wire 1 L clock $end
 $var wire 8 M b_data $end
$upscope $end
$enddefinitions $end
$dumpvars
b00000000 -
b00000000 ,
b000 B
b00000000 !
0@
b00000 #
0A
b00000 %
b00000 $
0D
b00000 '
0E
b00000000 6
0F
b00000 )
0G
0H
b00000000 3
0I
b00000000 2
0J
b00000000 5
0K
b00000000 4
0L
b00000000 /
b00000000 1
b00000000 0
b0000 "
b00000000 M
b00000 8
b00000000 C
b00000 :
b0000 *
b00000 <
b0000 (
b00000 ?
b00000 >
b0000 &
b0000 =
b0000 ;
0+
b0000 9
0.
b0000 7
$end
#0
1A
b00111000 C
b0111 "
b01111 #
b01111 $
b01111 %
b0111 &
b01111 '
b0111 (
b01111 )
b0111 *
b00111000 -
b00111000 /
b00111000 1
b00111000 2
b00111000 5
b0111 7
b01111 8
b0111 9
b01111 :
b0111 ;
b01111 <
b0111 =
b01111 >
b01111 ?
#1
1L
#6
b00101010 !
0A
b00111000 C
0L
b00111000 -
b01001011 M
b00000000 /
b00000000 0
b00000000 1
b00000000 2
b00000000 3
b00111000 4
b00000000 5
b00111000 6
#11
1L
#16
0L
#21
1L
#26
1@
b00111000 ,
0L
#31
1L
#36
b001 B
b00000000 ,
0L
#41
1L
#46
0L
#51
1L
#56
b010 B
0L
#61
1L
#66
0L
#71
1L
#76
b011 B
b00111000 ,
0L
#81
1L
#86
0L
#91
1L
#96
b100 B
b00000000 ,
0L
#101
1L
#106
0L
#111
1L
#116
b101 B
b00111000 ,
0L
#121
1L
#126
0L
#131
1L
#136
b00111000 0
b10101010 !
b00111000 2
b000 B
b00111000 3
0L
#141
1L
#146
0L
#151
1L
#156
0@
b00000000 !
0L
b00000000 M
