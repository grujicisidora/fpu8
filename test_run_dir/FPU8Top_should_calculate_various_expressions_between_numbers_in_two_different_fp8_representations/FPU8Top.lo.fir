FIRRTL version 1.2.0
circuit FPU8Top :
  module Add :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 9:18]
    input a_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Add.scala 10:13]
    input b_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Add.scala 11:13]
    input subtract : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 12:20]
    input roundingMode : UInt<2> @[\\src\\main\\scala\\fpu8\\Add.scala 13:24]
    output sign : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 16:16]
    output exponent : UInt<5> @[\\src\\main\\scala\\fpu8\\Add.scala 17:20]
    output fraction : UInt<4> @[\\src\\main\\scala\\fpu8\\Add.scala 18:20]
    output overflow : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 19:20]
    output isInfty : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 20:19]
    output is0 : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 21:15]
    output isNaN : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 22:17]
    output NaNFractionValue : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 23:28]

    node _compare_T = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:62]
    node _compare_T_1 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:81]
    node compare = gt(_compare_T, _compare_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:69]
    node greaterOperand_data = mux(compare, a_data, b_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 126:29]
    node smallerOperand_data = mux(compare, b_data, a_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 127:29]
    node _sign_T = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _sign_T_1 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _sign_T_2 = xor(_sign_T_1, subtract) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 128:51]
    node resultSign = mux(compare, _sign_T, _sign_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 128:19]
    node _subtraction_T = bits(greaterOperand_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _subtraction_T_1 = xor(subtract, _subtraction_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 129:32]
    node _subtraction_T_2 = bits(smallerOperand_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node subtraction = xor(_subtraction_T_1, _subtraction_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 129:54]
    node exponent_1 = bits(greaterOperand_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _greaterOperandFraction_T = bits(greaterOperand_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _greaterOperandFraction_T_1 = eq(_greaterOperandFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _greaterOperandFraction_T_2 = eq(_greaterOperandFraction_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 131:38]
    node _greaterOperandFraction_T_3 = bits(greaterOperand_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node greaterOperandFraction = cat(_greaterOperandFraction_T_2, _greaterOperandFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 131:37]
    node _smallerOperandFraction_T = bits(smallerOperand_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _smallerOperandFraction_T_1 = eq(_smallerOperandFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _smallerOperandFraction_T_2 = eq(_smallerOperandFraction_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 132:38]
    node _smallerOperandFraction_T_3 = bits(smallerOperand_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node smallerOperandFraction = cat(_smallerOperandFraction_T_2, _smallerOperandFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 132:37]
    node _isOnlySmallerDenormalized_T = bits(greaterOperand_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isOnlySmallerDenormalized_T_1 = eq(_isOnlySmallerDenormalized_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _isOnlySmallerDenormalized_T_2 = eq(_isOnlySmallerDenormalized_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 133:37]
    node _isOnlySmallerDenormalized_T_3 = bits(smallerOperand_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isOnlySmallerDenormalized_T_4 = eq(_isOnlySmallerDenormalized_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node isOnlySmallerDenormalized = and(_isOnlySmallerDenormalized_T_2, _isOnlySmallerDenormalized_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 133:60]
    node _shift_T = bits(greaterOperand_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _shift_T_1 = sub(_shift_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 136:31]
    node _shift_T_2 = tail(_shift_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 136:31]
    node _shift_T_3 = bits(greaterOperand_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _shift_T_4 = bits(smallerOperand_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _shift_T_5 = sub(_shift_T_3, _shift_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 137:31]
    node _shift_T_6 = tail(_shift_T_5, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 137:31]
    node shift = mux(isOnlySmallerDenormalized, _shift_T_2, _shift_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 134:20]
    node _shiftedFraction_shifted_T = geq(shift, UInt<3>("h6")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 142:15]
    node _shiftedFraction_shifted_T_1 = cat(UInt<6>("h0"), smallerOperandFraction) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 143:12]
    node _shiftedFraction_shifted_T_2 = cat(smallerOperandFraction, UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 144:12]
    node _shiftedFraction_shifted_T_3 = dshr(_shiftedFraction_shifted_T_2, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 144:54]
    node shiftedFraction_shifted = mux(_shiftedFraction_shifted_T, _shiftedFraction_shifted_T_1, _shiftedFraction_shifted_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 141:24]
    node _shiftedFraction_T = bits(shiftedFraction_shifted, 9, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 146:18]
    node _shiftedFraction_T_1 = bits(shiftedFraction_shifted, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 146:74]
    node _shiftedFraction_T_2 = orr(_shiftedFraction_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 146:94]
    node smallerOperandFraction_1 = cat(_shiftedFraction_T, _shiftedFraction_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 146:10]
    node greaterOperandFraction_1 = cat(greaterOperandFraction, UInt<3>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 148:45]
    node _isResultNaN_T = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_1 = eq(_isResultNaN_T, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultNaN_T_2 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_3 = eq(_isResultNaN_T_2, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _isResultNaN_T_4 = and(_isResultNaN_T_1, _isResultNaN_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResultNaN_T_5 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_6 = eq(_isResultNaN_T_5, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultNaN_T_7 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_8 = eq(_isResultNaN_T_7, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _isResultNaN_T_9 = and(_isResultNaN_T_6, _isResultNaN_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResultNaN_T_10 = or(_isResultNaN_T_4, _isResultNaN_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 461:37]
    node _isResult0_T = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 31:62]
    node _isResult0_T_1 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 31:83]
    node _isResult0_T_2 = eq(_isResult0_T, _isResult0_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 31:69]
    node _isResult0_T_3 = bits(subtraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 469:78]
    node _isResult0_T_4 = and(_isResult0_T_2, _isResult0_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 469:63]
    node isResultNaN = _isResultNaN_T_10 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 461:{25,25}]
    node _isResult0_T_5 = eq(isResultNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 469:88]
    node _isResult0_T_6 = and(_isResult0_T_4, _isResult0_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 469:85]
    node _isResult0_T_7 = eq(UInt<1>("h0"), UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 469:104]
    node _isResult0_T_8 = and(_isResult0_T_6, _isResult0_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 469:101]
    node _calculatedValue_T = eq(subtraction, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 473:45]
    node _calculatedValue_T_1 = sub(greaterOperandFraction_1, smallerOperandFraction_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 474:32]
    node _calculatedValue_T_2 = asUInt(_calculatedValue_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 474:32]
    node _calculatedValue_T_3 = add(greaterOperandFraction_1, smallerOperandFraction_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 475:32]
    node calculatedValue = mux(_calculatedValue_T, _calculatedValue_T_2, _calculatedValue_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 473:32]
    node originalCalculatedValue = calculatedValue @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 278:{59,59}]
    node paddedCalcValue = originalCalculatedValue @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 280:31 285:21]
    node _T = bits(paddedCalcValue, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 291:64]
    node _leadingZeros_T = bits(_T, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_1 = bits(_leadingZeros_T, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_2 = bits(_leadingZeros_T_1, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_3 = bits(_leadingZeros_T_1, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_4 = cat(_leadingZeros_T_2, _leadingZeros_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_5 = bits(_leadingZeros_T, 3, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_6 = bits(_leadingZeros_T_5, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_7 = bits(_leadingZeros_T_5, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_8 = cat(_leadingZeros_T_6, _leadingZeros_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_9 = cat(_leadingZeros_T_4, _leadingZeros_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_10 = bits(_T, 6, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_11 = bits(_leadingZeros_T_10, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_12 = bits(_leadingZeros_T_11, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_13 = bits(_leadingZeros_T_11, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_14 = cat(_leadingZeros_T_12, _leadingZeros_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_15 = bits(_leadingZeros_T_10, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_16 = cat(_leadingZeros_T_14, _leadingZeros_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_17 = cat(_leadingZeros_T_9, _leadingZeros_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_18 = bits(_leadingZeros_T_17, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_19 = bits(_leadingZeros_T_17, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_20 = bits(_leadingZeros_T_17, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_21 = bits(_leadingZeros_T_17, 3, 3) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_22 = bits(_leadingZeros_T_17, 4, 4) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_23 = bits(_leadingZeros_T_17, 5, 5) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_24 = bits(_leadingZeros_T_17, 6, 6) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_25 = mux(_leadingZeros_T_23, UInt<3>("h5"), UInt<3>("h6")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_26 = mux(_leadingZeros_T_22, UInt<3>("h4"), _leadingZeros_T_25) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_27 = mux(_leadingZeros_T_21, UInt<2>("h3"), _leadingZeros_T_26) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_28 = mux(_leadingZeros_T_20, UInt<2>("h2"), _leadingZeros_T_27) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_29 = mux(_leadingZeros_T_19, UInt<1>("h1"), _leadingZeros_T_28) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_30 = mux(_leadingZeros_T_18, UInt<1>("h0"), _leadingZeros_T_29) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node shift_1 = pad(_leadingZeros_T_30, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 57:28 60:18]
    node _shiftedValue_T = dshl(_T, shift_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 62:27]
    node _T_1 = andr(exponent_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 296:19]
    node _T_2 = bits(paddedCalcValue, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 296:42]
    node _T_3 = and(_T_1, _T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 296:24]
    node _T_4 = andr(exponent_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 299:26]
    node _T_5 = eq(_T_4, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 299:16]
    node _T_6 = bits(paddedCalcValue, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 299:49]
    node _T_7 = and(_T_5, _T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 299:31]
    node _tempExponent_T = add(exponent_1, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 300:32]
    node _tempExponent_T_1 = tail(_tempExponent_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 300:32]
    node _tempFraction_T = bits(paddedCalcValue, 7, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 301:42]
    node _tempFraction_T_1 = bits(paddedCalcValue, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 301:65]
    node _tempFraction_T_2 = orr(_tempFraction_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 301:72]
    node _tempFraction_T_3 = cat(_tempFraction_T, _tempFraction_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 301:26]
    node _T_8 = gt(exponent_1, shift_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 302:25]
    node shiftedCalcValue = bits(_shiftedValue_T, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:28 62:18]
    node _T_9 = bits(shiftedCalcValue, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 302:52]
    node _T_10 = and(_T_8, _T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 302:33]
    node _tempExponent_T_2 = sub(exponent_1, shift_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 303:32]
    node _tempExponent_T_3 = tail(_tempExponent_T_2, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 303:32]
    node _T_11 = gt(exponent_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 307:21]
    node _tempFraction_T_4 = bits(paddedCalcValue, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 308:40]
    node _tempFraction_T_5 = sub(exponent_1, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 308:60]
    node _tempFraction_T_6 = tail(_tempFraction_T_5, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 308:60]
    node _tempFraction_T_7 = dshl(_tempFraction_T_4, _tempFraction_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 308:47]
    node _tempFraction_T_8 = bits(paddedCalcValue, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 310:40]
    node _GEN_0 = mux(_T_11, _tempFraction_T_7, _tempFraction_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 307:28 308:22 310:22]
    node _GEN_1 = mux(_T_10, _tempExponent_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 302:57 303:20 306:20]
    node _GEN_2 = mux(_T_10, shiftedCalcValue, _GEN_0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 302:57 304:20]
    node _GEN_3 = mux(_T_7, _tempExponent_T_1, _GEN_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 299:54 300:20]
    node _GEN_4 = mux(_T_7, _tempFraction_T_3, _GEN_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 299:54 301:20]
    node _GEN_5 = mux(_T_3, exponent_1, _GEN_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 296:47 297:20]
    node _GEN_6 = mux(_T_3, UInt<7>("h7f"), _GEN_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 296:47 298:20]
    node tempFraction = bits(_GEN_6, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 294:28]
    node _T_12 = bits(tempFraction, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 314:41]
    node _addOne_T = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:33]
    node _addOne_T_1 = bits(_T_12, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:57]
    node _addOne_T_2 = and(_addOne_T, _addOne_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:42]
    node _addOne_T_3 = bits(_T_12, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:77]
    node _addOne_T_4 = bits(_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:96]
    node _addOne_T_5 = or(_addOne_T_3, _addOne_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:81]
    node _addOne_T_6 = and(_addOne_T_2, _addOne_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:61]
    node _addOne_T_7 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:22]
    node _addOne_T_8 = bits(_T_12, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:46]
    node _addOne_T_9 = and(_addOne_T_7, _addOne_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:31]
    node _addOne_T_10 = bits(_T_12, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:66]
    node _addOne_T_11 = eq(_addOne_T_10, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:53]
    node _addOne_T_12 = and(_addOne_T_9, _addOne_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:50]
    node _addOne_T_13 = bits(_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:86]
    node _addOne_T_14 = eq(_addOne_T_13, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:73]
    node _addOne_T_15 = and(_addOne_T_12, _addOne_T_14) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:70]
    node _addOne_T_16 = bits(_T_12, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:105]
    node _addOne_T_17 = and(_addOne_T_15, _addOne_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:90]
    node _addOne_T_18 = or(_addOne_T_6, _addOne_T_17) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:102]
    node _addOne_T_19 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:22]
    node _addOne_T_20 = bits(_T_12, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:47]
    node _addOne_T_21 = bits(_T_12, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:66]
    node _addOne_T_22 = or(_addOne_T_20, _addOne_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:51]
    node _addOne_T_23 = bits(_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:85]
    node _addOne_T_24 = or(_addOne_T_22, _addOne_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:70]
    node _addOne_T_25 = and(_addOne_T_19, _addOne_T_24) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:31]
    node _addOne_T_26 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:98]
    node _addOne_T_27 = and(_addOne_T_25, _addOne_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:90]
    node _addOne_T_28 = or(_addOne_T_18, _addOne_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:110]
    node _addOne_T_29 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:22]
    node _addOne_T_30 = bits(_T_12, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:47]
    node _addOne_T_31 = bits(_T_12, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:66]
    node _addOne_T_32 = or(_addOne_T_30, _addOne_T_31) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:51]
    node _addOne_T_33 = bits(_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:85]
    node _addOne_T_34 = or(_addOne_T_32, _addOne_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:70]
    node _addOne_T_35 = and(_addOne_T_29, _addOne_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:31]
    node _addOne_T_36 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:99]
    node _addOne_T_37 = eq(_addOne_T_36, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:93]
    node _addOne_T_38 = and(_addOne_T_35, _addOne_T_37) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:90]
    node addOne = or(_addOne_T_28, _addOne_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:106]
    node _roundedFraction_T = bits(_T_12, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 255:39]
    node roundedFraction = add(_roundedFraction_T, addOne) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 255:66]
    node _finalFraction_T = bits(roundedFraction, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 257:44]
    node _finalFraction_T_1 = eq(_finalFraction_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 257:65]
    node _finalFraction_T_2 = bits(roundedFraction, 4, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 258:22]
    node _finalFraction_T_3 = bits(roundedFraction, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 258:62]
    node resultFraction = mux(_finalFraction_T_1, _finalFraction_T_2, _finalFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 257:28]
    node _finalExponent_T = bits(roundedFraction, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:44]
    node _finalExponent_T_1 = eq(_finalExponent_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:65]
    node _finalExponent_T_2 = bits(roundedFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:92]
    node tempExponent = bits(_GEN_5, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 293:28]
    node _finalExponent_T_3 = eq(tempExponent, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:125]
    node _finalExponent_T_4 = and(_finalExponent_T_2, _finalExponent_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:109]
    node _finalExponent_T_5 = or(_finalExponent_T_1, _finalExponent_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:73]
    node _finalExponent_T_6 = add(tempExponent, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 261:20]
    node _finalExponent_T_7 = tail(_finalExponent_T_6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 261:20]
    node resultExponent = mux(_finalExponent_T_5, _finalExponent_T_7, tempExponent) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:28]
    node _overflow_T = gt(resultExponent, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:27]
    node _overflow_T_1 = bits(resultExponent, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:62]
    node _overflow_T_2 = eq(_overflow_T_1, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:86]
    node _overflow_T_3 = eq(resultFraction, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:123]
    node _overflow_T_4 = and(_overflow_T_2, _overflow_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:105]
    node _overflow_T_5 = or(_overflow_T, _overflow_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:44]
    node _overflow_T_6 = geq(tempExponent, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 267:24]
    node _overflow_T_7 = bits(_T_12, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 267:58]
    node _overflow_T_8 = eq(_overflow_T_7, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 267:85]
    node _overflow_T_9 = and(_overflow_T_6, _overflow_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 267:42]
    node resultOverflow = or(_overflow_T_5, _overflow_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:134]
    node _T_13 = eq(enable, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\Add.scala 28:15]
    node _GEN_7 = mux(_T_13, resultSign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 28:24 29:10 38:10]
    node _GEN_8 = mux(_T_13, resultExponent, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 28:24 30:14 39:14]
    node _GEN_9 = mux(_T_13, resultFraction, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 28:24 31:14 40:14]
    node _GEN_10 = mux(_T_13, resultOverflow, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 28:24 32:14 41:14]
    node _GEN_11 = mux(_T_13, UInt<1>("h0"), UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 28:24 33:13 42:13]
    node isResult0 = _isResult0_T_8 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 469:{34,34}]
    node _GEN_12 = mux(_T_13, isResult0, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 28:24 34:9 43:9]
    node _GEN_13 = mux(_T_13, isResultNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 28:24 35:11 44:11]
    sign <= _GEN_7
    exponent <= pad(_GEN_8, 5)
    fraction <= _GEN_9
    overflow <= _GEN_10
    isInfty <= _GEN_11
    is0 <= _GEN_12
    isNaN <= _GEN_13
    NaNFractionValue <= _GEN_11

  module Add_1 :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 9:18]
    input a_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Add.scala 10:13]
    input b_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Add.scala 11:13]
    input subtract : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 12:20]
    input roundingMode : UInt<2> @[\\src\\main\\scala\\fpu8\\Add.scala 13:24]
    output sign : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 16:16]
    output exponent : UInt<6> @[\\src\\main\\scala\\fpu8\\Add.scala 17:20]
    output fraction : UInt<3> @[\\src\\main\\scala\\fpu8\\Add.scala 18:20]
    output overflow : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 19:20]
    output isInfty : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 20:19]
    output is0 : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 21:15]
    output isNaN : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 22:17]
    output NaNFractionValue : UInt<1> @[\\src\\main\\scala\\fpu8\\Add.scala 23:28]

    node _compare_T = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:62]
    node _compare_T_1 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:81]
    node compare = gt(_compare_T, _compare_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:69]
    node greaterOperand_data = mux(compare, a_data, b_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 126:29]
    node smallerOperand_data = mux(compare, b_data, a_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 127:29]
    node _sign_T = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _sign_T_1 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _sign_T_2 = xor(_sign_T_1, subtract) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 128:51]
    node resultSign = mux(compare, _sign_T, _sign_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 128:19]
    node _subtraction_T = bits(greaterOperand_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _subtraction_T_1 = xor(subtract, _subtraction_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 129:32]
    node _subtraction_T_2 = bits(smallerOperand_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node subtraction = xor(_subtraction_T_1, _subtraction_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 129:54]
    node exponent_1 = bits(greaterOperand_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _greaterOperandFraction_T = bits(greaterOperand_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _greaterOperandFraction_T_1 = eq(_greaterOperandFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _greaterOperandFraction_T_2 = eq(_greaterOperandFraction_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 131:38]
    node _greaterOperandFraction_T_3 = bits(greaterOperand_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node greaterOperandFraction = cat(_greaterOperandFraction_T_2, _greaterOperandFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 131:37]
    node _smallerOperandFraction_T = bits(smallerOperand_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _smallerOperandFraction_T_1 = eq(_smallerOperandFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _smallerOperandFraction_T_2 = eq(_smallerOperandFraction_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 132:38]
    node _smallerOperandFraction_T_3 = bits(smallerOperand_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node smallerOperandFraction = cat(_smallerOperandFraction_T_2, _smallerOperandFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 132:37]
    node _isOnlySmallerDenormalized_T = bits(greaterOperand_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isOnlySmallerDenormalized_T_1 = eq(_isOnlySmallerDenormalized_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _isOnlySmallerDenormalized_T_2 = eq(_isOnlySmallerDenormalized_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 133:37]
    node _isOnlySmallerDenormalized_T_3 = bits(smallerOperand_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isOnlySmallerDenormalized_T_4 = eq(_isOnlySmallerDenormalized_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node isOnlySmallerDenormalized = and(_isOnlySmallerDenormalized_T_2, _isOnlySmallerDenormalized_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 133:60]
    node _shift_T = bits(greaterOperand_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _shift_T_1 = sub(_shift_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 136:31]
    node _shift_T_2 = tail(_shift_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 136:31]
    node _shift_T_3 = bits(greaterOperand_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _shift_T_4 = bits(smallerOperand_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _shift_T_5 = sub(_shift_T_3, _shift_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 137:31]
    node _shift_T_6 = tail(_shift_T_5, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 137:31]
    node shift = mux(isOnlySmallerDenormalized, _shift_T_2, _shift_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 134:20]
    node _shiftedFraction_shifted_T = geq(shift, UInt<3>("h5")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 142:15]
    node _shiftedFraction_shifted_T_1 = cat(UInt<5>("h0"), smallerOperandFraction) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 143:12]
    node _shiftedFraction_shifted_T_2 = cat(smallerOperandFraction, UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 144:12]
    node _shiftedFraction_shifted_T_3 = dshr(_shiftedFraction_shifted_T_2, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 144:54]
    node shiftedFraction_shifted = mux(_shiftedFraction_shifted_T, _shiftedFraction_shifted_T_1, _shiftedFraction_shifted_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 141:24]
    node _shiftedFraction_T = bits(shiftedFraction_shifted, 7, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 146:18]
    node _shiftedFraction_T_1 = bits(shiftedFraction_shifted, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 146:74]
    node _shiftedFraction_T_2 = orr(_shiftedFraction_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 146:94]
    node smallerOperandFraction_1 = cat(_shiftedFraction_T, _shiftedFraction_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 146:10]
    node greaterOperandFraction_1 = cat(greaterOperandFraction, UInt<3>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 148:45]
    node _isResultNaN_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_1 = eq(_isResultNaN_T, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultNaN_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_3 = eq(_isResultNaN_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultNaN_T_4 = eq(_isResultNaN_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _isResultNaN_T_5 = and(_isResultNaN_T_1, _isResultNaN_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResultNaN_T_6 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_7 = eq(_isResultNaN_T_6, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultNaN_T_8 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_9 = eq(_isResultNaN_T_8, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultNaN_T_10 = eq(_isResultNaN_T_9, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _isResultNaN_T_11 = and(_isResultNaN_T_7, _isResultNaN_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResultNaN_T_12 = or(_isResultNaN_T_5, _isResultNaN_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 460:42]
    node _isResultNaN_T_13 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_14 = eq(_isResultNaN_T_13, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultNaN_T_15 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_16 = eq(_isResultNaN_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultNaN_T_17 = and(_isResultNaN_T_14, _isResultNaN_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 49:24]
    node _isResultNaN_T_18 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_19 = eq(_isResultNaN_T_18, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultNaN_T_20 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_21 = eq(_isResultNaN_T_20, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultNaN_T_22 = and(_isResultNaN_T_19, _isResultNaN_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 49:24]
    node _isResultNaN_T_23 = and(_isResultNaN_T_17, _isResultNaN_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 460:74]
    node _isResultNaN_T_24 = bits(subtraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 460:106]
    node _isResultNaN_T_25 = and(_isResultNaN_T_23, _isResultNaN_T_24) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 460:91]
    node _isResultNaN_T_26 = or(_isResultNaN_T_12, _isResultNaN_T_25) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 460:57]
    node _isResultInfty_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_1 = eq(_isResultInfty_T, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultInfty_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_3 = eq(_isResultInfty_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultInfty_T_4 = and(_isResultInfty_T_1, _isResultInfty_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 49:24]
    node _isResultInfty_T_5 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_6 = eq(_isResultInfty_T_5, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultInfty_T_7 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_8 = eq(_isResultInfty_T_7, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultInfty_T_9 = and(_isResultInfty_T_6, _isResultInfty_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 49:24]
    node _isResultInfty_T_10 = or(_isResultInfty_T_4, _isResultInfty_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 465:45]
    node isResultNaN = _isResultNaN_T_26 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 460:{30,30}]
    node _isResultInfty_T_11 = eq(isResultNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 465:65]
    node _isResultInfty_T_12 = and(_isResultInfty_T_10, _isResultInfty_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 465:63]
    node _isResult0_T = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 31:62]
    node _isResult0_T_1 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 31:83]
    node _isResult0_T_2 = eq(_isResult0_T, _isResult0_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 31:69]
    node _isResult0_T_3 = bits(subtraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 469:78]
    node _isResult0_T_4 = and(_isResult0_T_2, _isResult0_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 469:63]
    node _isResult0_T_5 = eq(isResultNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 469:88]
    node _isResult0_T_6 = and(_isResult0_T_4, _isResult0_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 469:85]
    node isResultInfty = _isResultInfty_T_12 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 465:{30,30}]
    node _isResult0_T_7 = eq(isResultInfty, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 469:104]
    node _isResult0_T_8 = and(_isResult0_T_6, _isResult0_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 469:101]
    node _resultNaNFractionValue_T = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_1 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_2 = gt(_resultNaNFractionValue_T, _resultNaNFractionValue_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:33]
    node _resultNaNFractionValue_T_3 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_4 = bits(_resultNaNFractionValue_T_3, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:64]
    node _resultNaNFractionValue_T_5 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_6 = bits(_resultNaNFractionValue_T_5, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:83]
    node resultNaNFractionValue = mux(_resultNaNFractionValue_T_2, _resultNaNFractionValue_T_4, _resultNaNFractionValue_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:18]
    node _calculatedValue_T = eq(subtraction, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 473:45]
    node _calculatedValue_T_1 = sub(greaterOperandFraction_1, smallerOperandFraction_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 474:32]
    node _calculatedValue_T_2 = asUInt(_calculatedValue_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 474:32]
    node _calculatedValue_T_3 = add(greaterOperandFraction_1, smallerOperandFraction_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 475:32]
    node calculatedValue = mux(_calculatedValue_T, _calculatedValue_T_2, _calculatedValue_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 473:32]
    node originalCalculatedValue = calculatedValue @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 278:{59,59}]
    node _paddedCalcValue_T = cat(originalCalculatedValue, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 287:15]
    node paddedCalcValue = _paddedCalcValue_T @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 280:31 285:21]
    node _T = bits(paddedCalcValue, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 291:64]
    node _leadingZeros_T = bits(_T, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_1 = bits(_leadingZeros_T, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_2 = bits(_leadingZeros_T_1, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_3 = bits(_leadingZeros_T_1, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_4 = cat(_leadingZeros_T_2, _leadingZeros_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_5 = bits(_leadingZeros_T, 3, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_6 = bits(_leadingZeros_T_5, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_7 = bits(_leadingZeros_T_5, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_8 = cat(_leadingZeros_T_6, _leadingZeros_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_9 = cat(_leadingZeros_T_4, _leadingZeros_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_10 = bits(_T, 6, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_11 = bits(_leadingZeros_T_10, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_12 = bits(_leadingZeros_T_11, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_13 = bits(_leadingZeros_T_11, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_14 = cat(_leadingZeros_T_12, _leadingZeros_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_15 = bits(_leadingZeros_T_10, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_16 = cat(_leadingZeros_T_14, _leadingZeros_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_17 = cat(_leadingZeros_T_9, _leadingZeros_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_18 = bits(_leadingZeros_T_17, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_19 = bits(_leadingZeros_T_17, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_20 = bits(_leadingZeros_T_17, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_21 = bits(_leadingZeros_T_17, 3, 3) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_22 = bits(_leadingZeros_T_17, 4, 4) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_23 = bits(_leadingZeros_T_17, 5, 5) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_24 = bits(_leadingZeros_T_17, 6, 6) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_25 = mux(_leadingZeros_T_23, UInt<3>("h5"), UInt<3>("h6")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_26 = mux(_leadingZeros_T_22, UInt<3>("h4"), _leadingZeros_T_25) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_27 = mux(_leadingZeros_T_21, UInt<2>("h3"), _leadingZeros_T_26) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_28 = mux(_leadingZeros_T_20, UInt<2>("h2"), _leadingZeros_T_27) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_29 = mux(_leadingZeros_T_19, UInt<1>("h1"), _leadingZeros_T_28) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_30 = mux(_leadingZeros_T_18, UInt<1>("h0"), _leadingZeros_T_29) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node shift_1 = pad(_leadingZeros_T_30, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 57:28 60:18]
    node _shiftedValue_T = dshl(_T, shift_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 62:27]
    node _T_1 = andr(exponent_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 296:19]
    node _T_2 = bits(paddedCalcValue, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 296:42]
    node _T_3 = and(_T_1, _T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 296:24]
    node _T_4 = andr(exponent_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 299:26]
    node _T_5 = eq(_T_4, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 299:16]
    node _T_6 = bits(paddedCalcValue, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 299:49]
    node _T_7 = and(_T_5, _T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 299:31]
    node _tempExponent_T = add(exponent_1, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 300:32]
    node _tempExponent_T_1 = tail(_tempExponent_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 300:32]
    node _tempFraction_T = bits(paddedCalcValue, 7, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 301:42]
    node _tempFraction_T_1 = bits(paddedCalcValue, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 301:65]
    node _tempFraction_T_2 = orr(_tempFraction_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 301:72]
    node _tempFraction_T_3 = cat(_tempFraction_T, _tempFraction_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 301:26]
    node _T_8 = gt(exponent_1, shift_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 302:25]
    node shiftedCalcValue = bits(_shiftedValue_T, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:28 62:18]
    node _T_9 = bits(shiftedCalcValue, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 302:52]
    node _T_10 = and(_T_8, _T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 302:33]
    node _tempExponent_T_2 = sub(exponent_1, shift_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 303:32]
    node _tempExponent_T_3 = tail(_tempExponent_T_2, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 303:32]
    node _T_11 = gt(exponent_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 307:21]
    node _tempFraction_T_4 = bits(paddedCalcValue, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 308:40]
    node _tempFraction_T_5 = sub(exponent_1, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 308:60]
    node _tempFraction_T_6 = tail(_tempFraction_T_5, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 308:60]
    node _tempFraction_T_7 = dshl(_tempFraction_T_4, _tempFraction_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 308:47]
    node _tempFraction_T_8 = bits(paddedCalcValue, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 310:40]
    node _GEN_0 = mux(_T_11, _tempFraction_T_7, _tempFraction_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 307:28 308:22 310:22]
    node _GEN_1 = mux(_T_10, _tempExponent_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 302:57 303:20 306:20]
    node _GEN_2 = mux(_T_10, shiftedCalcValue, _GEN_0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 302:57 304:20]
    node _GEN_3 = mux(_T_7, _tempExponent_T_1, _GEN_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 299:54 300:20]
    node _GEN_4 = mux(_T_7, _tempFraction_T_3, _GEN_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 299:54 301:20]
    node _GEN_5 = mux(_T_3, exponent_1, _GEN_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 296:47 297:20]
    node _GEN_6 = mux(_T_3, UInt<7>("h7f"), _GEN_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 296:47 298:20]
    node tempFraction = bits(_GEN_6, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 294:28]
    node _T_12 = bits(tempFraction, 6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 314:41]
    node _addOne_T = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:33]
    node _addOne_T_1 = bits(_T_12, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:57]
    node _addOne_T_2 = and(_addOne_T, _addOne_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:42]
    node _addOne_T_3 = bits(_T_12, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:77]
    node _addOne_T_4 = bits(_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:96]
    node _addOne_T_5 = or(_addOne_T_3, _addOne_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:81]
    node _addOne_T_6 = and(_addOne_T_2, _addOne_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:61]
    node _addOne_T_7 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:22]
    node _addOne_T_8 = bits(_T_12, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:46]
    node _addOne_T_9 = and(_addOne_T_7, _addOne_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:31]
    node _addOne_T_10 = bits(_T_12, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:66]
    node _addOne_T_11 = eq(_addOne_T_10, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:53]
    node _addOne_T_12 = and(_addOne_T_9, _addOne_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:50]
    node _addOne_T_13 = bits(_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:86]
    node _addOne_T_14 = eq(_addOne_T_13, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:73]
    node _addOne_T_15 = and(_addOne_T_12, _addOne_T_14) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:70]
    node _addOne_T_16 = bits(_T_12, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:105]
    node _addOne_T_17 = and(_addOne_T_15, _addOne_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:90]
    node _addOne_T_18 = or(_addOne_T_6, _addOne_T_17) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:102]
    node _addOne_T_19 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:22]
    node _addOne_T_20 = bits(_T_12, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:47]
    node _addOne_T_21 = bits(_T_12, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:66]
    node _addOne_T_22 = or(_addOne_T_20, _addOne_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:51]
    node _addOne_T_23 = bits(_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:85]
    node _addOne_T_24 = or(_addOne_T_22, _addOne_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:70]
    node _addOne_T_25 = and(_addOne_T_19, _addOne_T_24) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:31]
    node _addOne_T_26 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:98]
    node _addOne_T_27 = and(_addOne_T_25, _addOne_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:90]
    node _addOne_T_28 = or(_addOne_T_18, _addOne_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:110]
    node _addOne_T_29 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:22]
    node _addOne_T_30 = bits(_T_12, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:47]
    node _addOne_T_31 = bits(_T_12, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:66]
    node _addOne_T_32 = or(_addOne_T_30, _addOne_T_31) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:51]
    node _addOne_T_33 = bits(_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:85]
    node _addOne_T_34 = or(_addOne_T_32, _addOne_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:70]
    node _addOne_T_35 = and(_addOne_T_29, _addOne_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:31]
    node _addOne_T_36 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:99]
    node _addOne_T_37 = eq(_addOne_T_36, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:93]
    node _addOne_T_38 = and(_addOne_T_35, _addOne_T_37) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:90]
    node addOne = or(_addOne_T_28, _addOne_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:106]
    node _roundedFraction_T = bits(_T_12, 5, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 255:39]
    node roundedFraction = add(_roundedFraction_T, addOne) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 255:66]
    node _finalFraction_T = bits(roundedFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 257:44]
    node _finalFraction_T_1 = eq(_finalFraction_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 257:65]
    node _finalFraction_T_2 = bits(roundedFraction, 3, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 258:22]
    node _finalFraction_T_3 = bits(roundedFraction, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 258:62]
    node resultFraction = mux(_finalFraction_T_1, _finalFraction_T_2, _finalFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 257:28]
    node _finalExponent_T = bits(roundedFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:44]
    node _finalExponent_T_1 = eq(_finalExponent_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:65]
    node _finalExponent_T_2 = bits(roundedFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:92]
    node tempExponent = bits(_GEN_5, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 293:28]
    node _finalExponent_T_3 = eq(tempExponent, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:125]
    node _finalExponent_T_4 = and(_finalExponent_T_2, _finalExponent_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:109]
    node _finalExponent_T_5 = or(_finalExponent_T_1, _finalExponent_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:73]
    node _finalExponent_T_6 = add(tempExponent, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 261:20]
    node _finalExponent_T_7 = tail(_finalExponent_T_6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 261:20]
    node resultExponent = mux(_finalExponent_T_5, _finalExponent_T_7, tempExponent) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:28]
    node _overflow_T = add(UInt<5>("h1f"), UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 265:50]
    node _overflow_T_1 = geq(resultExponent, _overflow_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 265:32]
    node _overflow_T_2 = eq(tempExponent, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 265:76]
    node resultOverflow = or(_overflow_T_1, _overflow_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 265:59]
    node _T_13 = eq(enable, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\Add.scala 28:15]
    node _GEN_7 = mux(_T_13, resultSign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 28:24 29:10 38:10]
    node _GEN_8 = mux(_T_13, resultExponent, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 28:24 30:14 39:14]
    node _GEN_9 = mux(_T_13, resultFraction, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 28:24 31:14 40:14]
    node _GEN_10 = mux(_T_13, resultOverflow, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 28:24 32:14 41:14]
    node _GEN_11 = mux(_T_13, isResultInfty, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 28:24 33:13 42:13]
    node isResult0 = _isResult0_T_8 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 469:{34,34}]
    node _GEN_12 = mux(_T_13, isResult0, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 28:24 34:9 43:9]
    node _GEN_13 = mux(_T_13, isResultNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 28:24 35:11 44:11]
    node _GEN_14 = mux(_T_13, resultNaNFractionValue, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Add.scala 28:24 36:22 45:22]
    sign <= _GEN_7
    exponent <= pad(_GEN_8, 6)
    fraction <= _GEN_9
    overflow <= _GEN_10
    isInfty <= _GEN_11
    is0 <= _GEN_12
    isNaN <= _GEN_13
    NaNFractionValue <= _GEN_14

  module Multiply :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 9:18]
    input a_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Multiply.scala 10:13]
    input b_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Multiply.scala 11:13]
    input roundingMode : UInt<2> @[\\src\\main\\scala\\fpu8\\Multiply.scala 12:24]
    output sign : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 15:16]
    output exponent : UInt<5> @[\\src\\main\\scala\\fpu8\\Multiply.scala 16:20]
    output fraction : UInt<4> @[\\src\\main\\scala\\fpu8\\Multiply.scala 17:20]
    output overflow : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 18:20]
    output isInfty : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 19:19]
    output is0 : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 20:15]
    output isNaN : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 21:17]
    output NaNFractionValue : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 22:28]

    node _isResultNaN_T = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_1 = eq(_isResultNaN_T, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultNaN_T_2 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_3 = eq(_isResultNaN_T_2, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _isResultNaN_T_4 = and(_isResultNaN_T_1, _isResultNaN_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResultNaN_T_5 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_6 = eq(_isResultNaN_T_5, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultNaN_T_7 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_8 = eq(_isResultNaN_T_7, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _isResultNaN_T_9 = and(_isResultNaN_T_6, _isResultNaN_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResultNaN_T_10 = or(_isResultNaN_T_4, _isResultNaN_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 490:37]
    node _isResult0_T = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_1 = eq(_isResult0_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _isResult0_T_2 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_3 = eq(_isResult0_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResult0_T_4 = and(_isResult0_T_1, _isResult0_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 53:26]
    node _isResult0_T_5 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_6 = eq(_isResult0_T_5, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResult0_T_7 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_8 = eq(_isResult0_T_7, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _isResult0_T_9 = and(_isResult0_T_6, _isResult0_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResult0_T_10 = eq(_isResult0_T_9, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 499:48]
    node _isResult0_T_11 = and(_isResult0_T_4, _isResult0_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 499:45]
    node _isResult0_T_12 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_13 = eq(_isResult0_T_12, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _isResult0_T_14 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_15 = eq(_isResult0_T_14, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResult0_T_16 = and(_isResult0_T_13, _isResult0_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 53:26]
    node _isResult0_T_17 = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_18 = eq(_isResult0_T_17, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResult0_T_19 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_20 = eq(_isResult0_T_19, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _isResult0_T_21 = and(_isResult0_T_18, _isResult0_T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResult0_T_22 = eq(_isResult0_T_21, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 499:79]
    node _isResult0_T_23 = and(_isResult0_T_16, _isResult0_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 499:76]
    node _isResult0_T_24 = or(_isResult0_T_11, _isResult0_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 499:62]
    node _sign_T = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _sign_T_1 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node resultSign = xor(_sign_T, _sign_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 153:26]
    node _exponent_T = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_1 = eq(_exponent_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _exponent_T_2 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_3 = eq(_exponent_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _exponent_T_4 = and(_exponent_T_1, _exponent_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 156:25]
    node _exponent_T_5 = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_6 = eq(_exponent_T_5, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _exponent_T_7 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_8 = eq(_exponent_T_7, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _exponent_T_9 = xor(_exponent_T_6, _exponent_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 158:27]
    node _exponent_T_10 = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_11 = cat(UInt<2>("h0"), _exponent_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 159:16]
    node _exponent_T_12 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_13 = cat(UInt<2>("h0"), _exponent_T_12) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 159:47]
    node _exponent_T_14 = add(_exponent_T_11, _exponent_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 159:42]
    node _exponent_T_15 = tail(_exponent_T_14, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 159:42]
    node _exponent_T_16 = sub(_exponent_T_15, UInt<6>("h6")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 159:74]
    node _exponent_T_17 = tail(_exponent_T_16, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 159:74]
    node _exponent_T_18 = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_19 = cat(UInt<2>("h0"), _exponent_T_18) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 160:16]
    node _exponent_T_20 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_21 = cat(UInt<2>("h0"), _exponent_T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 160:47]
    node _exponent_T_22 = add(_exponent_T_19, _exponent_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 160:42]
    node _exponent_T_23 = tail(_exponent_T_22, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 160:42]
    node _exponent_T_24 = sub(_exponent_T_23, UInt<6>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 160:74]
    node _exponent_T_25 = tail(_exponent_T_24, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 160:74]
    node _exponent_T_26 = mux(_exponent_T_9, _exponent_T_17, _exponent_T_25) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 158:14]
    node exponent_1 = mux(_exponent_T_4, UInt<6>("h34"), _exponent_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 156:12]
    node _firstOperandFraction_T = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _firstOperandFraction_T_1 = eq(_firstOperandFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _firstOperandFraction_T_2 = eq(_firstOperandFraction_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 168:36]
    node _firstOperandFraction_T_3 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node firstOperandFraction = cat(_firstOperandFraction_T_2, _firstOperandFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 168:35]
    node _secondOperandFraction_T = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _secondOperandFraction_T_1 = eq(_secondOperandFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _secondOperandFraction_T_2 = eq(_secondOperandFraction_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 169:37]
    node _secondOperandFraction_T_3 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node secondOperandFraction = cat(_secondOperandFraction_T_2, _secondOperandFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 169:36]
    node _product_partialProducts_compare_T = bits(secondOperandFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node product_partialProducts_compare = mux(_product_partialProducts_compare_T, UInt<4>("hf"), UInt<4>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _product_partialProducts_T = and(firstOperandFraction, product_partialProducts_compare) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node product_partialProducts_0 = shl(_product_partialProducts_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _product_partialProducts_compare_T_1 = bits(secondOperandFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node product_partialProducts_compare_1 = mux(_product_partialProducts_compare_T_1, UInt<4>("hf"), UInt<4>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _product_partialProducts_T_1 = and(firstOperandFraction, product_partialProducts_compare_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node product_partialProducts_1 = shl(_product_partialProducts_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _product_partialProducts_compare_T_2 = bits(secondOperandFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node product_partialProducts_compare_2 = mux(_product_partialProducts_compare_T_2, UInt<4>("hf"), UInt<4>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _product_partialProducts_T_2 = and(firstOperandFraction, product_partialProducts_compare_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node product_partialProducts_2 = shl(_product_partialProducts_T_2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _product_partialProducts_compare_T_3 = bits(secondOperandFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node product_partialProducts_compare_3 = mux(_product_partialProducts_compare_T_3, UInt<4>("hf"), UInt<4>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _product_partialProducts_T_3 = and(firstOperandFraction, product_partialProducts_compare_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node product_partialProducts_3 = shl(_product_partialProducts_T_3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _product_partialSums_T = add(product_partialProducts_0, product_partialProducts_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:34]
    node product_partialSums_0 = add(_product_partialSums_T, product_partialProducts_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:39]
    node product = add(product_partialSums_0, product_partialProducts_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 106:15]
    node _T = bits(product, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 321:64]
    node _leadingZeros_T = bits(_T, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_1 = bits(_leadingZeros_T, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_2 = bits(_leadingZeros_T_1, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_3 = bits(_leadingZeros_T_1, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_4 = cat(_leadingZeros_T_2, _leadingZeros_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_5 = bits(_leadingZeros_T, 3, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_6 = bits(_leadingZeros_T_5, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_7 = bits(_leadingZeros_T_5, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_8 = cat(_leadingZeros_T_6, _leadingZeros_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_9 = cat(_leadingZeros_T_4, _leadingZeros_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_10 = bits(_T, 6, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_11 = bits(_leadingZeros_T_10, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_12 = bits(_leadingZeros_T_11, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_13 = bits(_leadingZeros_T_11, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_14 = cat(_leadingZeros_T_12, _leadingZeros_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_15 = bits(_leadingZeros_T_10, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_16 = cat(_leadingZeros_T_14, _leadingZeros_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_17 = cat(_leadingZeros_T_9, _leadingZeros_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_18 = bits(_leadingZeros_T_17, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_19 = bits(_leadingZeros_T_17, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_20 = bits(_leadingZeros_T_17, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_21 = bits(_leadingZeros_T_17, 3, 3) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_22 = bits(_leadingZeros_T_17, 4, 4) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_23 = bits(_leadingZeros_T_17, 5, 5) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_24 = bits(_leadingZeros_T_17, 6, 6) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_25 = mux(_leadingZeros_T_23, UInt<3>("h5"), UInt<3>("h6")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_26 = mux(_leadingZeros_T_22, UInt<3>("h4"), _leadingZeros_T_25) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_27 = mux(_leadingZeros_T_21, UInt<2>("h3"), _leadingZeros_T_26) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_28 = mux(_leadingZeros_T_20, UInt<2>("h2"), _leadingZeros_T_27) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_29 = mux(_leadingZeros_T_19, UInt<1>("h1"), _leadingZeros_T_28) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_30 = mux(_leadingZeros_T_18, UInt<1>("h0"), _leadingZeros_T_29) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node shift = pad(_leadingZeros_T_30, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 57:28 60:18]
    node _shiftedValue_T = dshl(_T, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 62:27]
    node _exponentShiftRight_T = sub(UInt<6>("h0"), exponent_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 323:58]
    node exponentShiftRight = tail(_exponentShiftRight_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 323:58]
    node _exponentShiftLeft_T = sub(exponent_1, UInt<6>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 325:38]
    node exponentShiftLeft = tail(_exponentShiftLeft_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 325:38]
    node _T_1 = bits(exponent_1, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 331:19]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 331:10]
    node _T_3 = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 331:52]
    node _T_4 = geq(_T_3, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 331:72]
    node _T_5 = and(_T_2, _T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 331:40]
    node _T_6 = bits(product, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 332:25]
    node _T_7 = and(_T_5, _T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 332:7]
    node _T_8 = bits(exponent_1, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 335:25]
    node _T_9 = eq(_T_8, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 335:16]
    node _T_10 = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 335:58]
    node _T_11 = lt(_T_10, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 335:78]
    node _T_12 = and(_T_9, _T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 335:46]
    node _T_13 = bits(product, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 336:25]
    node _T_14 = and(_T_12, _T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 336:7]
    node _tempExponent_T = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 337:31]
    node _tempExponent_T_1 = add(_tempExponent_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 337:38]
    node _tempExponent_T_2 = tail(_tempExponent_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 337:38]
    node _tempFraction_T = bits(product, 7, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 338:42]
    node _tempFraction_T_1 = bits(product, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 338:89]
    node _tempFraction_T_2 = orr(_tempFraction_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 338:96]
    node _tempFraction_T_3 = cat(_tempFraction_T, _tempFraction_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 338:26]
    node _T_15 = bits(exponent_1, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 339:25]
    node _T_16 = eq(_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 339:16]
    node _T_17 = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 339:58]
    node _T_18 = gt(_T_17, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 339:78]
    node _T_19 = and(_T_16, _T_18) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 339:46]
    node shiftedCalcValue = bits(_shiftedValue_T, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:28 62:18]
    node _T_20 = bits(shiftedCalcValue, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 340:26]
    node _T_21 = and(_T_19, _T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 340:7]
    node _tempExponent_T_3 = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 341:31]
    node _tempExponent_T_4 = sub(_tempExponent_T_3, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 341:51]
    node _tempExponent_T_5 = tail(_tempExponent_T_4, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 341:51]
    node _T_22 = bits(exponent_1, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 345:21]
    node _T_23 = eq(_T_22, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 345:12]
    node _T_24 = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 345:54]
    node _T_25 = gt(_T_24, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 345:74]
    node _T_26 = and(_T_23, _T_25) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 345:42]
    node _tempFraction_T_4 = bits(product, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 346:40]
    node _tempFraction_T_5 = dshl(_tempFraction_T_4, exponentShiftLeft) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 346:71]
    node _tempFraction_T_6 = bits(product, 7, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 348:44]
    node _tempFraction_T_7 = bits(product, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 348:91]
    node _tempFraction_T_8 = orr(_tempFraction_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 348:98]
    node _tempFraction_T_9 = cat(_tempFraction_T_6, _tempFraction_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 348:28]
    node _tempFraction_T_10 = dshr(_tempFraction_T_9, exponentShiftRight) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 348:110]
    node _GEN_0 = mux(_T_26, _tempFraction_T_5, _tempFraction_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 345:82 346:22 348:22]
    node _GEN_1 = mux(_T_21, _tempExponent_T_5, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 340:55 341:20 344:20]
    node _GEN_2 = mux(_T_21, shiftedCalcValue, _GEN_0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 340:55 342:20]
    node _GEN_3 = mux(_T_14, _tempExponent_T_2, _GEN_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 336:54 337:20]
    node _GEN_4 = mux(_T_14, _tempFraction_T_3, _GEN_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 336:54 338:20]
    node _GEN_5 = mux(_T_7, UInt<4>("hf"), _GEN_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 332:54 333:20]
    node _GEN_6 = mux(_T_7, UInt<7>("h7f"), _GEN_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 332:54 334:20]
    node _addOne_T = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:33]
    node tempFraction = bits(_GEN_6, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 329:28]
    node _addOne_T_1 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:57]
    node _addOne_T_2 = and(_addOne_T, _addOne_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:42]
    node _addOne_T_3 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:77]
    node _addOne_T_4 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:96]
    node _addOne_T_5 = or(_addOne_T_3, _addOne_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:81]
    node _addOne_T_6 = and(_addOne_T_2, _addOne_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:61]
    node _addOne_T_7 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:22]
    node _addOne_T_8 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:46]
    node _addOne_T_9 = and(_addOne_T_7, _addOne_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:31]
    node _addOne_T_10 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:66]
    node _addOne_T_11 = eq(_addOne_T_10, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:53]
    node _addOne_T_12 = and(_addOne_T_9, _addOne_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:50]
    node _addOne_T_13 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:86]
    node _addOne_T_14 = eq(_addOne_T_13, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:73]
    node _addOne_T_15 = and(_addOne_T_12, _addOne_T_14) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:70]
    node _addOne_T_16 = bits(tempFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:105]
    node _addOne_T_17 = and(_addOne_T_15, _addOne_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:90]
    node _addOne_T_18 = or(_addOne_T_6, _addOne_T_17) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:102]
    node _addOne_T_19 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:22]
    node _addOne_T_20 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:47]
    node _addOne_T_21 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:66]
    node _addOne_T_22 = or(_addOne_T_20, _addOne_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:51]
    node _addOne_T_23 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:85]
    node _addOne_T_24 = or(_addOne_T_22, _addOne_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:70]
    node _addOne_T_25 = and(_addOne_T_19, _addOne_T_24) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:31]
    node _addOne_T_26 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:98]
    node _addOne_T_27 = and(_addOne_T_25, _addOne_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:90]
    node _addOne_T_28 = or(_addOne_T_18, _addOne_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:110]
    node _addOne_T_29 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:22]
    node _addOne_T_30 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:47]
    node _addOne_T_31 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:66]
    node _addOne_T_32 = or(_addOne_T_30, _addOne_T_31) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:51]
    node _addOne_T_33 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:85]
    node _addOne_T_34 = or(_addOne_T_32, _addOne_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:70]
    node _addOne_T_35 = and(_addOne_T_29, _addOne_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:31]
    node _addOne_T_36 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:99]
    node _addOne_T_37 = eq(_addOne_T_36, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:93]
    node _addOne_T_38 = and(_addOne_T_35, _addOne_T_37) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:90]
    node addOne = or(_addOne_T_28, _addOne_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:106]
    node _roundedFraction_T = bits(tempFraction, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 255:39]
    node roundedFraction = add(_roundedFraction_T, addOne) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 255:66]
    node _finalFraction_T = bits(roundedFraction, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 257:44]
    node _finalFraction_T_1 = eq(_finalFraction_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 257:65]
    node _finalFraction_T_2 = bits(roundedFraction, 4, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 258:22]
    node _finalFraction_T_3 = bits(roundedFraction, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 258:62]
    node resultFraction = mux(_finalFraction_T_1, _finalFraction_T_2, _finalFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 257:28]
    node _finalExponent_T = bits(roundedFraction, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:44]
    node _finalExponent_T_1 = eq(_finalExponent_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:65]
    node _finalExponent_T_2 = bits(roundedFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:92]
    node tempExponent = bits(_GEN_5, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 327:28]
    node _finalExponent_T_3 = eq(tempExponent, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:125]
    node _finalExponent_T_4 = and(_finalExponent_T_2, _finalExponent_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:109]
    node _finalExponent_T_5 = or(_finalExponent_T_1, _finalExponent_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:73]
    node _finalExponent_T_6 = add(tempExponent, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 261:20]
    node _finalExponent_T_7 = tail(_finalExponent_T_6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 261:20]
    node resultExponent = mux(_finalExponent_T_5, _finalExponent_T_7, tempExponent) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:28]
    node _overflow_T = gt(resultExponent, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:27]
    node _overflow_T_1 = bits(resultExponent, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:62]
    node _overflow_T_2 = eq(_overflow_T_1, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:86]
    node _overflow_T_3 = eq(resultFraction, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:123]
    node _overflow_T_4 = and(_overflow_T_2, _overflow_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:105]
    node _overflow_T_5 = or(_overflow_T, _overflow_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:44]
    node _overflow_T_6 = geq(tempExponent, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 267:24]
    node _overflow_T_7 = bits(tempFraction, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 267:58]
    node _overflow_T_8 = eq(_overflow_T_7, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 267:85]
    node _overflow_T_9 = and(_overflow_T_6, _overflow_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 267:42]
    node resultOverflow = or(_overflow_T_5, _overflow_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:134]
    node _T_27 = eq(enable, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 27:15]
    node _GEN_7 = mux(_T_27, resultSign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 27:24 28:10 37:10]
    node _GEN_8 = mux(_T_27, resultExponent, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 27:24 29:14 38:14]
    node _GEN_9 = mux(_T_27, resultFraction, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 27:24 30:14 39:14]
    node _GEN_10 = mux(_T_27, resultOverflow, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 27:24 31:14 40:14]
    node _GEN_11 = mux(_T_27, UInt<1>("h0"), UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 27:24 32:13 41:13]
    node isResult0 = _isResult0_T_24 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 499:{34,34}]
    node _GEN_12 = mux(_T_27, isResult0, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 27:24 33:9 42:9]
    node isResultNaN = _isResultNaN_T_10 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 490:{25,25}]
    node _GEN_13 = mux(_T_27, isResultNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 27:24 34:11 43:11]
    sign <= _GEN_7
    exponent <= _GEN_8
    fraction <= _GEN_9
    overflow <= _GEN_10
    isInfty <= _GEN_11
    is0 <= _GEN_12
    isNaN <= _GEN_13
    NaNFractionValue <= _GEN_11

  module Multiply_1 :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 9:18]
    input a_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Multiply.scala 10:13]
    input b_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Multiply.scala 11:13]
    input roundingMode : UInt<2> @[\\src\\main\\scala\\fpu8\\Multiply.scala 12:24]
    output sign : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 15:16]
    output exponent : UInt<6> @[\\src\\main\\scala\\fpu8\\Multiply.scala 16:20]
    output fraction : UInt<3> @[\\src\\main\\scala\\fpu8\\Multiply.scala 17:20]
    output overflow : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 18:20]
    output isInfty : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 19:19]
    output is0 : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 20:15]
    output isNaN : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 21:17]
    output NaNFractionValue : UInt<1> @[\\src\\main\\scala\\fpu8\\Multiply.scala 22:28]

    node _isResultNaN_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_1 = eq(_isResultNaN_T, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultNaN_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_3 = eq(_isResultNaN_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultNaN_T_4 = and(_isResultNaN_T_1, _isResultNaN_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 49:24]
    node _isResultNaN_T_5 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_6 = eq(_isResultNaN_T_5, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _isResultNaN_T_7 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_8 = eq(_isResultNaN_T_7, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultNaN_T_9 = and(_isResultNaN_T_6, _isResultNaN_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 53:26]
    node _isResultNaN_T_10 = and(_isResultNaN_T_4, _isResultNaN_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 489:45]
    node _isResultNaN_T_11 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_12 = eq(_isResultNaN_T_11, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultNaN_T_13 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_14 = eq(_isResultNaN_T_13, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultNaN_T_15 = eq(_isResultNaN_T_14, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _isResultNaN_T_16 = and(_isResultNaN_T_12, _isResultNaN_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResultNaN_T_17 = or(_isResultNaN_T_10, _isResultNaN_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 489:59]
    node _isResultNaN_T_18 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_19 = eq(_isResultNaN_T_18, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultNaN_T_20 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_21 = eq(_isResultNaN_T_20, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultNaN_T_22 = and(_isResultNaN_T_19, _isResultNaN_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 49:24]
    node _isResultNaN_T_23 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_24 = eq(_isResultNaN_T_23, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _isResultNaN_T_25 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_26 = eq(_isResultNaN_T_25, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultNaN_T_27 = and(_isResultNaN_T_24, _isResultNaN_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 53:26]
    node _isResultNaN_T_28 = and(_isResultNaN_T_22, _isResultNaN_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 489:91]
    node _isResultNaN_T_29 = or(_isResultNaN_T_17, _isResultNaN_T_28) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 489:73]
    node _isResultNaN_T_30 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_31 = eq(_isResultNaN_T_30, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultNaN_T_32 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_33 = eq(_isResultNaN_T_32, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultNaN_T_34 = eq(_isResultNaN_T_33, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _isResultNaN_T_35 = and(_isResultNaN_T_31, _isResultNaN_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResultNaN_T_36 = or(_isResultNaN_T_29, _isResultNaN_T_35) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 489:104]
    node _isResultInfty_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_1 = eq(_isResultInfty_T, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultInfty_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_3 = eq(_isResultInfty_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultInfty_T_4 = and(_isResultInfty_T_1, _isResultInfty_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 49:24]
    node _isResultInfty_T_5 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_6 = eq(_isResultInfty_T_5, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _isResultInfty_T_7 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_8 = eq(_isResultInfty_T_7, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultInfty_T_9 = and(_isResultInfty_T_6, _isResultInfty_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 53:26]
    node _isResultInfty_T_10 = eq(_isResultInfty_T_9, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 495:48]
    node _isResultInfty_T_11 = and(_isResultInfty_T_4, _isResultInfty_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 495:45]
    node _isResultInfty_T_12 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_13 = eq(_isResultInfty_T_12, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultInfty_T_14 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_15 = eq(_isResultInfty_T_14, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultInfty_T_16 = eq(_isResultInfty_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _isResultInfty_T_17 = and(_isResultInfty_T_13, _isResultInfty_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResultInfty_T_18 = eq(_isResultInfty_T_17, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 495:62]
    node _isResultInfty_T_19 = and(_isResultInfty_T_11, _isResultInfty_T_18) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 495:59]
    node _isResultInfty_T_20 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_21 = eq(_isResultInfty_T_20, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultInfty_T_22 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_23 = eq(_isResultInfty_T_22, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultInfty_T_24 = and(_isResultInfty_T_21, _isResultInfty_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 49:24]
    node _isResultInfty_T_25 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_26 = eq(_isResultInfty_T_25, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _isResultInfty_T_27 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_28 = eq(_isResultInfty_T_27, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultInfty_T_29 = and(_isResultInfty_T_26, _isResultInfty_T_28) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 53:26]
    node _isResultInfty_T_30 = eq(_isResultInfty_T_29, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 495:97]
    node _isResultInfty_T_31 = and(_isResultInfty_T_24, _isResultInfty_T_30) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 495:94]
    node _isResultInfty_T_32 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_33 = eq(_isResultInfty_T_32, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultInfty_T_34 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_35 = eq(_isResultInfty_T_34, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultInfty_T_36 = eq(_isResultInfty_T_35, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _isResultInfty_T_37 = and(_isResultInfty_T_33, _isResultInfty_T_36) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResultInfty_T_38 = eq(_isResultInfty_T_37, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 495:110]
    node _isResultInfty_T_39 = and(_isResultInfty_T_31, _isResultInfty_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 495:107]
    node _isResultInfty_T_40 = or(_isResultInfty_T_19, _isResultInfty_T_39) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 495:76]
    node _isResult0_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_1 = eq(_isResult0_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _isResult0_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_3 = eq(_isResult0_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResult0_T_4 = and(_isResult0_T_1, _isResult0_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 53:26]
    node _isResult0_T_5 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_6 = eq(_isResult0_T_5, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResult0_T_7 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_8 = eq(_isResult0_T_7, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResult0_T_9 = eq(_isResult0_T_8, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _isResult0_T_10 = and(_isResult0_T_6, _isResult0_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResult0_T_11 = eq(_isResult0_T_10, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 499:48]
    node _isResult0_T_12 = and(_isResult0_T_4, _isResult0_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 499:45]
    node _isResult0_T_13 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_14 = eq(_isResult0_T_13, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _isResult0_T_15 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_16 = eq(_isResult0_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResult0_T_17 = and(_isResult0_T_14, _isResult0_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 53:26]
    node _isResult0_T_18 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_19 = eq(_isResult0_T_18, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResult0_T_20 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_21 = eq(_isResult0_T_20, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResult0_T_22 = eq(_isResult0_T_21, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _isResult0_T_23 = and(_isResult0_T_19, _isResult0_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResult0_T_24 = eq(_isResult0_T_23, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 499:79]
    node _isResult0_T_25 = and(_isResult0_T_17, _isResult0_T_24) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 499:76]
    node _isResult0_T_26 = or(_isResult0_T_12, _isResult0_T_25) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 499:62]
    node _resultNaNFractionValue_T = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_1 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_2 = gt(_resultNaNFractionValue_T, _resultNaNFractionValue_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:33]
    node _resultNaNFractionValue_T_3 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_4 = bits(_resultNaNFractionValue_T_3, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:64]
    node _resultNaNFractionValue_T_5 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_6 = bits(_resultNaNFractionValue_T_5, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:83]
    node resultNaNFractionValue = mux(_resultNaNFractionValue_T_2, _resultNaNFractionValue_T_4, _resultNaNFractionValue_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:18]
    node _sign_T = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _sign_T_1 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node resultSign = xor(_sign_T, _sign_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 153:26]
    node _exponent_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_1 = eq(_exponent_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _exponent_T_2 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_3 = eq(_exponent_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _exponent_T_4 = and(_exponent_T_1, _exponent_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 162:25]
    node _exponent_T_5 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_6 = eq(_exponent_T_5, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _exponent_T_7 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_8 = eq(_exponent_T_7, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _exponent_T_9 = xor(_exponent_T_6, _exponent_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 164:27]
    node _exponent_T_10 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_11 = cat(UInt<2>("h0"), _exponent_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 165:16]
    node _exponent_T_12 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_13 = cat(UInt<2>("h0"), _exponent_T_12) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 165:47]
    node _exponent_T_14 = add(_exponent_T_11, _exponent_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 165:42]
    node _exponent_T_15 = tail(_exponent_T_14, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 165:42]
    node _exponent_T_16 = sub(_exponent_T_15, UInt<7>("he")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 165:74]
    node _exponent_T_17 = tail(_exponent_T_16, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 165:74]
    node _exponent_T_18 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_19 = cat(UInt<2>("h0"), _exponent_T_18) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 166:16]
    node _exponent_T_20 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _exponent_T_21 = cat(UInt<2>("h0"), _exponent_T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 166:47]
    node _exponent_T_22 = add(_exponent_T_19, _exponent_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 166:42]
    node _exponent_T_23 = tail(_exponent_T_22, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 166:42]
    node _exponent_T_24 = sub(_exponent_T_23, UInt<7>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 166:74]
    node _exponent_T_25 = tail(_exponent_T_24, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 166:74]
    node _exponent_T_26 = mux(_exponent_T_9, _exponent_T_17, _exponent_T_25) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 164:14]
    node exponent_1 = mux(_exponent_T_4, UInt<7>("h1c"), _exponent_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 162:12]
    node _firstOperandFraction_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _firstOperandFraction_T_1 = eq(_firstOperandFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _firstOperandFraction_T_2 = eq(_firstOperandFraction_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 168:36]
    node _firstOperandFraction_T_3 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node firstOperandFraction = cat(_firstOperandFraction_T_2, _firstOperandFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 168:35]
    node _secondOperandFraction_T = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _secondOperandFraction_T_1 = eq(_secondOperandFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _secondOperandFraction_T_2 = eq(_secondOperandFraction_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 169:37]
    node _secondOperandFraction_T_3 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node secondOperandFraction = cat(_secondOperandFraction_T_2, _secondOperandFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 169:36]
    node _product_partialProducts_compare_T = bits(secondOperandFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node product_partialProducts_compare = mux(_product_partialProducts_compare_T, UInt<3>("h7"), UInt<3>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _product_partialProducts_T = and(firstOperandFraction, product_partialProducts_compare) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node product_partialProducts_0 = shl(_product_partialProducts_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _product_partialProducts_compare_T_1 = bits(secondOperandFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node product_partialProducts_compare_1 = mux(_product_partialProducts_compare_T_1, UInt<3>("h7"), UInt<3>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _product_partialProducts_T_1 = and(firstOperandFraction, product_partialProducts_compare_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node product_partialProducts_1 = shl(_product_partialProducts_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _product_partialProducts_compare_T_2 = bits(secondOperandFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node product_partialProducts_compare_2 = mux(_product_partialProducts_compare_T_2, UInt<3>("h7"), UInt<3>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _product_partialProducts_T_2 = and(firstOperandFraction, product_partialProducts_compare_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node product_partialProducts_2 = shl(_product_partialProducts_T_2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _product_partialSums_T = add(product_partialProducts_0, product_partialProducts_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:34]
    node product = add(_product_partialSums_T, product_partialProducts_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:39]
    node _T = bits(product, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 321:64]
    node _leadingZeros_T = bits(_T, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_1 = bits(_leadingZeros_T, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_2 = bits(_leadingZeros_T_1, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_3 = bits(_leadingZeros_T_1, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_4 = cat(_leadingZeros_T_2, _leadingZeros_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_5 = bits(_leadingZeros_T, 3, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_6 = bits(_leadingZeros_T_5, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_7 = bits(_leadingZeros_T_5, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_8 = cat(_leadingZeros_T_6, _leadingZeros_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_9 = cat(_leadingZeros_T_4, _leadingZeros_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_10 = bits(_T, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_11 = cat(_leadingZeros_T_9, _leadingZeros_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_12 = bits(_leadingZeros_T_11, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_13 = bits(_leadingZeros_T_11, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_14 = bits(_leadingZeros_T_11, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_15 = bits(_leadingZeros_T_11, 3, 3) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_16 = bits(_leadingZeros_T_11, 4, 4) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_17 = mux(_leadingZeros_T_15, UInt<2>("h3"), UInt<3>("h4")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_18 = mux(_leadingZeros_T_14, UInt<2>("h2"), _leadingZeros_T_17) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_19 = mux(_leadingZeros_T_13, UInt<1>("h1"), _leadingZeros_T_18) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_20 = mux(_leadingZeros_T_12, UInt<1>("h0"), _leadingZeros_T_19) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node shift = pad(_leadingZeros_T_20, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 57:28 60:18]
    node _shiftedValue_T = dshl(_T, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 62:27]
    node _exponentShiftRight_T = sub(UInt<7>("h0"), exponent_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 323:58]
    node exponentShiftRight = tail(_exponentShiftRight_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 323:58]
    node _exponentShiftLeft_T = sub(exponent_1, UInt<7>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 325:38]
    node exponentShiftLeft = tail(_exponentShiftLeft_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 325:38]
    node _T_1 = bits(exponent_1, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 331:19]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 331:10]
    node _T_3 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 331:52]
    node _T_4 = geq(_T_3, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 331:72]
    node _T_5 = and(_T_2, _T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 331:40]
    node _T_6 = bits(product, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 332:25]
    node _T_7 = and(_T_5, _T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 332:7]
    node _T_8 = bits(exponent_1, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 335:25]
    node _T_9 = eq(_T_8, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 335:16]
    node _T_10 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 335:58]
    node _T_11 = lt(_T_10, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 335:78]
    node _T_12 = and(_T_9, _T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 335:46]
    node _T_13 = bits(product, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 336:25]
    node _T_14 = and(_T_12, _T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 336:7]
    node _tempExponent_T = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 337:31]
    node _tempExponent_T_1 = add(_tempExponent_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 337:38]
    node _tempExponent_T_2 = tail(_tempExponent_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 337:38]
    node _tempFraction_T = bits(product, 5, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 338:42]
    node _tempFraction_T_1 = bits(product, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 338:89]
    node _tempFraction_T_2 = orr(_tempFraction_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 338:96]
    node _tempFraction_T_3 = cat(_tempFraction_T, _tempFraction_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 338:26]
    node _T_15 = bits(exponent_1, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 339:25]
    node _T_16 = eq(_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 339:16]
    node _T_17 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 339:58]
    node _T_18 = gt(_T_17, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 339:78]
    node _T_19 = and(_T_16, _T_18) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 339:46]
    node shiftedCalcValue = bits(_shiftedValue_T, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:28 62:18]
    node _T_20 = bits(shiftedCalcValue, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 340:26]
    node _T_21 = and(_T_19, _T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 340:7]
    node _tempExponent_T_3 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 341:31]
    node _tempExponent_T_4 = sub(_tempExponent_T_3, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 341:51]
    node _tempExponent_T_5 = tail(_tempExponent_T_4, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 341:51]
    node _T_22 = bits(exponent_1, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 345:21]
    node _T_23 = eq(_T_22, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 345:12]
    node _T_24 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 345:54]
    node _T_25 = gt(_T_24, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 345:74]
    node _T_26 = and(_T_23, _T_25) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 345:42]
    node _tempFraction_T_4 = bits(product, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 346:40]
    node _tempFraction_T_5 = dshl(_tempFraction_T_4, exponentShiftLeft) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 346:71]
    node _tempFraction_T_6 = bits(product, 5, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 348:44]
    node _tempFraction_T_7 = bits(product, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 348:91]
    node _tempFraction_T_8 = orr(_tempFraction_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 348:98]
    node _tempFraction_T_9 = cat(_tempFraction_T_6, _tempFraction_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 348:28]
    node _tempFraction_T_10 = dshr(_tempFraction_T_9, exponentShiftRight) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 348:110]
    node _GEN_0 = mux(_T_26, _tempFraction_T_5, _tempFraction_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 345:82 346:22 348:22]
    node _GEN_1 = mux(_T_21, _tempExponent_T_5, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 340:55 341:20 344:20]
    node _GEN_2 = mux(_T_21, shiftedCalcValue, _GEN_0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 340:55 342:20]
    node _GEN_3 = mux(_T_14, _tempExponent_T_2, _GEN_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 336:54 337:20]
    node _GEN_4 = mux(_T_14, _tempFraction_T_3, _GEN_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 336:54 338:20]
    node _GEN_5 = mux(_T_7, UInt<5>("h1f"), _GEN_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 332:54 333:20]
    node _GEN_6 = mux(_T_7, UInt<5>("h1f"), _GEN_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 332:54 334:20]
    node _addOne_T = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:33]
    node tempFraction = bits(_GEN_6, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 329:28]
    node _addOne_T_1 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:57]
    node _addOne_T_2 = and(_addOne_T, _addOne_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:42]
    node _addOne_T_3 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:77]
    node _addOne_T_4 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:96]
    node _addOne_T_5 = or(_addOne_T_3, _addOne_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:81]
    node _addOne_T_6 = and(_addOne_T_2, _addOne_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:61]
    node _addOne_T_7 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:22]
    node _addOne_T_8 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:46]
    node _addOne_T_9 = and(_addOne_T_7, _addOne_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:31]
    node _addOne_T_10 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:66]
    node _addOne_T_11 = eq(_addOne_T_10, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:53]
    node _addOne_T_12 = and(_addOne_T_9, _addOne_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:50]
    node _addOne_T_13 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:86]
    node _addOne_T_14 = eq(_addOne_T_13, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:73]
    node _addOne_T_15 = and(_addOne_T_12, _addOne_T_14) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:70]
    node _addOne_T_16 = bits(tempFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:105]
    node _addOne_T_17 = and(_addOne_T_15, _addOne_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:90]
    node _addOne_T_18 = or(_addOne_T_6, _addOne_T_17) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:102]
    node _addOne_T_19 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:22]
    node _addOne_T_20 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:47]
    node _addOne_T_21 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:66]
    node _addOne_T_22 = or(_addOne_T_20, _addOne_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:51]
    node _addOne_T_23 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:85]
    node _addOne_T_24 = or(_addOne_T_22, _addOne_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:70]
    node _addOne_T_25 = and(_addOne_T_19, _addOne_T_24) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:31]
    node _addOne_T_26 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:98]
    node _addOne_T_27 = and(_addOne_T_25, _addOne_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:90]
    node _addOne_T_28 = or(_addOne_T_18, _addOne_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:110]
    node _addOne_T_29 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:22]
    node _addOne_T_30 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:47]
    node _addOne_T_31 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:66]
    node _addOne_T_32 = or(_addOne_T_30, _addOne_T_31) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:51]
    node _addOne_T_33 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:85]
    node _addOne_T_34 = or(_addOne_T_32, _addOne_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:70]
    node _addOne_T_35 = and(_addOne_T_29, _addOne_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:31]
    node _addOne_T_36 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:99]
    node _addOne_T_37 = eq(_addOne_T_36, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:93]
    node _addOne_T_38 = and(_addOne_T_35, _addOne_T_37) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:90]
    node addOne = or(_addOne_T_28, _addOne_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:106]
    node _roundedFraction_T = bits(tempFraction, 4, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 255:39]
    node roundedFraction = add(_roundedFraction_T, addOne) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 255:66]
    node _finalFraction_T = bits(roundedFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 257:44]
    node _finalFraction_T_1 = eq(_finalFraction_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 257:65]
    node _finalFraction_T_2 = bits(roundedFraction, 3, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 258:22]
    node _finalFraction_T_3 = bits(roundedFraction, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 258:62]
    node resultFraction = mux(_finalFraction_T_1, _finalFraction_T_2, _finalFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 257:28]
    node _finalExponent_T = bits(roundedFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:44]
    node _finalExponent_T_1 = eq(_finalExponent_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:65]
    node _finalExponent_T_2 = bits(roundedFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:92]
    node tempExponent = bits(_GEN_5, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 327:28]
    node _finalExponent_T_3 = eq(tempExponent, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:125]
    node _finalExponent_T_4 = and(_finalExponent_T_2, _finalExponent_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:109]
    node _finalExponent_T_5 = or(_finalExponent_T_1, _finalExponent_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:73]
    node _finalExponent_T_6 = add(tempExponent, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 261:20]
    node _finalExponent_T_7 = tail(_finalExponent_T_6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 261:20]
    node resultExponent = mux(_finalExponent_T_5, _finalExponent_T_7, tempExponent) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:28]
    node _overflow_T = add(UInt<5>("h1f"), UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 265:50]
    node _overflow_T_1 = geq(resultExponent, _overflow_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 265:32]
    node _overflow_T_2 = eq(tempExponent, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 265:76]
    node resultOverflow = or(_overflow_T_1, _overflow_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 265:59]
    node _T_27 = eq(enable, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 27:15]
    node _GEN_7 = mux(_T_27, resultSign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 27:24 28:10 37:10]
    node _GEN_8 = mux(_T_27, resultExponent, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 27:24 29:14 38:14]
    node _GEN_9 = mux(_T_27, resultFraction, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 27:24 30:14 39:14]
    node _GEN_10 = mux(_T_27, resultOverflow, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 27:24 31:14 40:14]
    node isResultInfty = _isResultInfty_T_40 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 495:{30,30}]
    node _GEN_11 = mux(_T_27, isResultInfty, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 27:24 32:13 41:13]
    node isResult0 = _isResult0_T_26 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 499:{34,34}]
    node _GEN_12 = mux(_T_27, isResult0, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 27:24 33:9 42:9]
    node isResultNaN = _isResultNaN_T_36 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 489:{30,30}]
    node _GEN_13 = mux(_T_27, isResultNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 27:24 34:11 43:11]
    node _GEN_14 = mux(_T_27, resultNaNFractionValue, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Multiply.scala 27:24 35:22 44:22]
    sign <= _GEN_7
    exponent <= pad(_GEN_8, 6)
    fraction <= _GEN_9
    overflow <= _GEN_10
    isInfty <= _GEN_11
    is0 <= _GEN_12
    isNaN <= _GEN_13
    NaNFractionValue <= _GEN_14

  module Divide :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 9:18]
    input a_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Divide.scala 10:13]
    input b_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Divide.scala 11:13]
    input roundingMode : UInt<2> @[\\src\\main\\scala\\fpu8\\Divide.scala 12:24]
    output sign : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 15:16]
    output exponent : UInt<5> @[\\src\\main\\scala\\fpu8\\Divide.scala 16:20]
    output fraction : UInt<4> @[\\src\\main\\scala\\fpu8\\Divide.scala 17:20]
    output overflow : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 18:20]
    output isInfty : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 19:19]
    output is0 : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 20:15]
    output isNaN : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 21:17]
    output NaNFractionValue : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 22:28]

    node _isResultNaN_T = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_1 = eq(_isResultNaN_T, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultNaN_T_2 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_3 = eq(_isResultNaN_T_2, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _isResultNaN_T_4 = and(_isResultNaN_T_1, _isResultNaN_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResultNaN_T_5 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_6 = eq(_isResultNaN_T_5, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultNaN_T_7 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_8 = eq(_isResultNaN_T_7, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _isResultNaN_T_9 = and(_isResultNaN_T_6, _isResultNaN_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResultNaN_T_10 = or(_isResultNaN_T_4, _isResultNaN_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 520:25]
    node _isResultNaN_T_11 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_12 = eq(_isResultNaN_T_11, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _isResultNaN_T_13 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_14 = eq(_isResultNaN_T_13, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultNaN_T_15 = and(_isResultNaN_T_12, _isResultNaN_T_14) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 53:26]
    node isResultNaN = or(_isResultNaN_T_10, _isResultNaN_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 520:40]
    node _isResult0_T = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_1 = eq(_isResult0_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _isResult0_T_2 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_3 = eq(_isResult0_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResult0_T_4 = and(_isResult0_T_1, _isResult0_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 53:26]
    node _isResult0_T_5 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_6 = eq(_isResult0_T_5, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _isResult0_T_7 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_8 = eq(_isResult0_T_7, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResult0_T_9 = and(_isResult0_T_6, _isResult0_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 53:26]
    node _isResult0_T_10 = eq(_isResult0_T_9, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 532:21]
    node _isResult0_T_11 = and(_isResult0_T_4, _isResult0_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 532:18]
    node _isResult0_T_12 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_13 = eq(_isResult0_T_12, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResult0_T_14 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_15 = eq(_isResult0_T_14, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _isResult0_T_16 = and(_isResult0_T_13, _isResult0_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResult0_T_17 = eq(_isResult0_T_16, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 532:35]
    node isResult0 = and(_isResult0_T_11, _isResult0_T_17) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 532:32]
    node _sign_T = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _sign_T_1 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node resultSign = xor(_sign_T, _sign_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 175:26]
    node _tempDividendFraction_T = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _tempDividendFraction_T_1 = eq(_tempDividendFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _tempDividendFraction_T_2 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _tempDividendFraction_T_3 = cat(_tempDividendFraction_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 177:10]
    node _tempDividendFraction_T_4 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _tempDividendFraction_T_5 = cat(UInt<1>("h1"), _tempDividendFraction_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 178:10]
    node tempDividendFraction = mux(_tempDividendFraction_T_1, _tempDividendFraction_T_3, _tempDividendFraction_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 176:35]
    node _tempDivisorFraction_T = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _tempDivisorFraction_T_1 = eq(_tempDivisorFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _tempDivisorFraction_T_2 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _tempDivisorFraction_T_3 = cat(_tempDivisorFraction_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 183:10]
    node _tempDivisorFraction_T_4 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _tempDivisorFraction_T_5 = cat(UInt<1>("h1"), _tempDivisorFraction_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 184:10]
    node tempDivisorFraction = mux(_tempDivisorFraction_T_1, _tempDivisorFraction_T_3, _tempDivisorFraction_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 182:34]
    node _tempExponent_T = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _tempExponent_T_1 = cat(UInt<2>("h0"), _tempExponent_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 188:27]
    node _tempExponent_T_2 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _tempExponent_T_3 = cat(UInt<2>("h0"), _tempExponent_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 189:10]
    node _tempExponent_T_4 = sub(_tempExponent_T_1, _tempExponent_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 188:53]
    node _tempExponent_T_5 = tail(_tempExponent_T_4, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 188:53]
    node _tempExponent_T_6 = add(_tempExponent_T_5, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 189:37]
    node tempExponent = tail(_tempExponent_T_6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 189:37]
    node _leadingZeros_T = bits(tempDividendFraction, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_1 = bits(_leadingZeros_T, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_2 = bits(_leadingZeros_T, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_3 = cat(_leadingZeros_T_1, _leadingZeros_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_4 = bits(tempDividendFraction, 3, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_5 = bits(_leadingZeros_T_4, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_6 = bits(_leadingZeros_T_4, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_7 = cat(_leadingZeros_T_5, _leadingZeros_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_8 = cat(_leadingZeros_T_3, _leadingZeros_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_9 = bits(_leadingZeros_T_8, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_10 = bits(_leadingZeros_T_8, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_11 = bits(_leadingZeros_T_8, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_12 = bits(_leadingZeros_T_8, 3, 3) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_13 = mux(_leadingZeros_T_11, UInt<2>("h2"), UInt<2>("h3")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_14 = mux(_leadingZeros_T_10, UInt<1>("h1"), _leadingZeros_T_13) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_15 = mux(_leadingZeros_T_9, UInt<1>("h0"), _leadingZeros_T_14) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node dividendShift = pad(_leadingZeros_T_15, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 57:28 60:18]
    node _shiftedValue_T = dshl(tempDividendFraction, dividendShift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 62:27]
    node _leadingZeros_T_16 = bits(tempDivisorFraction, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_17 = bits(_leadingZeros_T_16, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_18 = bits(_leadingZeros_T_16, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_19 = cat(_leadingZeros_T_17, _leadingZeros_T_18) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_20 = bits(tempDivisorFraction, 3, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_21 = bits(_leadingZeros_T_20, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_22 = bits(_leadingZeros_T_20, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_23 = cat(_leadingZeros_T_21, _leadingZeros_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_24 = cat(_leadingZeros_T_19, _leadingZeros_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_25 = bits(_leadingZeros_T_24, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_26 = bits(_leadingZeros_T_24, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_27 = bits(_leadingZeros_T_24, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_28 = bits(_leadingZeros_T_24, 3, 3) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_29 = mux(_leadingZeros_T_27, UInt<2>("h2"), UInt<2>("h3")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_30 = mux(_leadingZeros_T_26, UInt<1>("h1"), _leadingZeros_T_29) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_31 = mux(_leadingZeros_T_25, UInt<1>("h0"), _leadingZeros_T_30) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node divisorShift = pad(_leadingZeros_T_31, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 57:28 60:18]
    node _shiftedValue_T_1 = dshl(tempDivisorFraction, divisorShift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 62:27]
    node _exponent_T = sub(tempExponent, dividendShift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 200:33]
    node _exponent_T_1 = tail(_exponent_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 200:33]
    node _exponent_T_2 = add(_exponent_T_1, divisorShift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 200:49]
    node exponent_1 = tail(_exponent_T_2, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 200:49]
    node divisorFraction = bits(_shiftedValue_T_1, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:28 62:18]
    node _quotient_initGuess_T = bits(divisorFraction, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:54]
    node quotient_rom_0 = UInt<4>("he") @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 84:25 89:17]
    node _GEN_0 = validif(eq(UInt<1>("h0"), _quotient_initGuess_T), quotient_rom_0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:{24,24}]
    node quotient_rom_1 = UInt<4>("hc") @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 84:25 89:17]
    node _GEN_1 = mux(eq(UInt<1>("h1"), _quotient_initGuess_T), quotient_rom_1, _GEN_0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:{24,24}]
    node quotient_rom_2 = UInt<4>("ha") @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 84:25 89:17]
    node _GEN_2 = mux(eq(UInt<2>("h2"), _quotient_initGuess_T), quotient_rom_2, _GEN_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:{24,24}]
    node quotient_rom_3 = UInt<4>("h8") @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 84:25 89:17]
    node _GEN_3 = mux(eq(UInt<2>("h3"), _quotient_initGuess_T), quotient_rom_3, _GEN_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:{24,24}]
    node quotient_rom_4 = UInt<4>("h6") @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 84:25 89:17]
    node _GEN_4 = mux(eq(UInt<3>("h4"), _quotient_initGuess_T), quotient_rom_4, _GEN_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:{24,24}]
    node quotient_rom_5 = UInt<4>("h4") @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 84:25 89:17]
    node _GEN_5 = mux(eq(UInt<3>("h5"), _quotient_initGuess_T), quotient_rom_5, _GEN_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:{24,24}]
    node quotient_rom_6 = UInt<4>("h2") @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 84:25 89:17]
    node _GEN_6 = mux(eq(UInt<3>("h6"), _quotient_initGuess_T), quotient_rom_6, _GEN_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:{24,24}]
    node quotient_rom_7 = UInt<4>("h0") @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 84:25 89:17]
    node _GEN_7 = mux(eq(UInt<3>("h7"), _quotient_initGuess_T), quotient_rom_7, _GEN_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:{24,24}]
    node _quotient_rom_quotient_initGuess_T = _GEN_7 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:24]
    node quotient_initGuess = cat(UInt<2>("h1"), _quotient_rom_quotient_initGuess_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:24]
    node _quotient_secondGuess_firstStep_partialProducts_compare_T = bits(divisorFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_secondGuess_firstStep_partialProducts_compare = mux(_quotient_secondGuess_firstStep_partialProducts_compare_T, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_secondGuess_firstStep_partialProducts_T = and(quotient_initGuess, quotient_secondGuess_firstStep_partialProducts_compare) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_secondGuess_firstStep_partialProducts_0 = shl(_quotient_secondGuess_firstStep_partialProducts_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_secondGuess_firstStep_partialProducts_compare_T_1 = bits(divisorFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_secondGuess_firstStep_partialProducts_compare_1 = mux(_quotient_secondGuess_firstStep_partialProducts_compare_T_1, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_secondGuess_firstStep_partialProducts_T_1 = and(quotient_initGuess, quotient_secondGuess_firstStep_partialProducts_compare_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_secondGuess_firstStep_partialProducts_1 = shl(_quotient_secondGuess_firstStep_partialProducts_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_secondGuess_firstStep_partialProducts_compare_T_2 = bits(divisorFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_secondGuess_firstStep_partialProducts_compare_2 = mux(_quotient_secondGuess_firstStep_partialProducts_compare_T_2, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_secondGuess_firstStep_partialProducts_T_2 = and(quotient_initGuess, quotient_secondGuess_firstStep_partialProducts_compare_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_secondGuess_firstStep_partialProducts_2 = shl(_quotient_secondGuess_firstStep_partialProducts_T_2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_secondGuess_firstStep_partialProducts_compare_T_3 = bits(divisorFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_secondGuess_firstStep_partialProducts_compare_3 = mux(_quotient_secondGuess_firstStep_partialProducts_compare_T_3, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_secondGuess_firstStep_partialProducts_T_3 = and(quotient_initGuess, quotient_secondGuess_firstStep_partialProducts_compare_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_secondGuess_firstStep_partialProducts_3 = shl(_quotient_secondGuess_firstStep_partialProducts_T_3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_secondGuess_firstStep_partialSums_T = add(quotient_secondGuess_firstStep_partialProducts_0, quotient_secondGuess_firstStep_partialProducts_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:34]
    node quotient_secondGuess_firstStep_partialSums_0 = add(_quotient_secondGuess_firstStep_partialSums_T, quotient_secondGuess_firstStep_partialProducts_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:39]
    node quotient_secondGuess_firstStep = add(quotient_secondGuess_firstStep_partialSums_0, quotient_secondGuess_firstStep_partialProducts_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 106:15]
    node _quotient_secondGuess_firstStepRnd_T = bits(quotient_secondGuess_firstStep, 8, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 221:46]
    node _quotient_secondGuess_firstStepRnd_roundedValue_T = bits(_quotient_secondGuess_firstStepRnd_T, 8, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:14]
    node _quotient_secondGuess_firstStepRnd_roundedValue_T_1 = bits(_quotient_secondGuess_firstStepRnd_T, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:44]
    node _quotient_secondGuess_firstStepRnd_roundedValue_T_2 = bits(_quotient_secondGuess_firstStepRnd_T, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:66]
    node _quotient_secondGuess_firstStepRnd_roundedValue_T_3 = orr(_quotient_secondGuess_firstStepRnd_roundedValue_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:95]
    node _quotient_secondGuess_firstStepRnd_roundedValue_T_4 = and(_quotient_secondGuess_firstStepRnd_roundedValue_T_1, _quotient_secondGuess_firstStepRnd_roundedValue_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:59]
    node quotient_secondGuess_firstStepRnd = add(_quotient_secondGuess_firstStepRnd_roundedValue_T, _quotient_secondGuess_firstStepRnd_roundedValue_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:35]
    node _quotient_secondGuess_secondStep_T = bits(quotient_secondGuess_firstStepRnd, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 225:38]
    node _quotient_secondGuess_secondStep_T_1 = not(_quotient_secondGuess_secondStep_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 225:25]
    node _quotient_secondGuess_secondStep_T_2 = add(_quotient_secondGuess_secondStep_T_1, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 225:70]
    node quotient_secondGuess_secondStep = tail(_quotient_secondGuess_secondStep_T_2, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 225:70]
    node _quotient_secondGuess_finalStep_partialProducts_compare_T = bits(quotient_secondGuess_secondStep, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_secondGuess_finalStep_partialProducts_compare = mux(_quotient_secondGuess_finalStep_partialProducts_compare_T, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_secondGuess_finalStep_partialProducts_T = and(quotient_initGuess, quotient_secondGuess_finalStep_partialProducts_compare) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_secondGuess_finalStep_partialProducts_0 = shl(_quotient_secondGuess_finalStep_partialProducts_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_secondGuess_finalStep_partialProducts_compare_T_1 = bits(quotient_secondGuess_secondStep, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_secondGuess_finalStep_partialProducts_compare_1 = mux(_quotient_secondGuess_finalStep_partialProducts_compare_T_1, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_secondGuess_finalStep_partialProducts_T_1 = and(quotient_initGuess, quotient_secondGuess_finalStep_partialProducts_compare_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_secondGuess_finalStep_partialProducts_1 = shl(_quotient_secondGuess_finalStep_partialProducts_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_secondGuess_finalStep_partialProducts_compare_T_2 = bits(quotient_secondGuess_secondStep, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_secondGuess_finalStep_partialProducts_compare_2 = mux(_quotient_secondGuess_finalStep_partialProducts_compare_T_2, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_secondGuess_finalStep_partialProducts_T_2 = and(quotient_initGuess, quotient_secondGuess_finalStep_partialProducts_compare_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_secondGuess_finalStep_partialProducts_2 = shl(_quotient_secondGuess_finalStep_partialProducts_T_2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_secondGuess_finalStep_partialProducts_compare_T_3 = bits(quotient_secondGuess_secondStep, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_secondGuess_finalStep_partialProducts_compare_3 = mux(_quotient_secondGuess_finalStep_partialProducts_compare_T_3, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_secondGuess_finalStep_partialProducts_T_3 = and(quotient_initGuess, quotient_secondGuess_finalStep_partialProducts_compare_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_secondGuess_finalStep_partialProducts_3 = shl(_quotient_secondGuess_finalStep_partialProducts_T_3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_secondGuess_finalStep_partialProducts_compare_T_4 = bits(quotient_secondGuess_secondStep, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_secondGuess_finalStep_partialProducts_compare_4 = mux(_quotient_secondGuess_finalStep_partialProducts_compare_T_4, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_secondGuess_finalStep_partialProducts_T_4 = and(quotient_initGuess, quotient_secondGuess_finalStep_partialProducts_compare_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_secondGuess_finalStep_partialProducts_4 = shl(_quotient_secondGuess_finalStep_partialProducts_T_4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_secondGuess_finalStep_partialProducts_compare_T_5 = bits(quotient_secondGuess_secondStep, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_secondGuess_finalStep_partialProducts_compare_5 = mux(_quotient_secondGuess_finalStep_partialProducts_compare_T_5, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_secondGuess_finalStep_partialProducts_T_5 = and(quotient_initGuess, quotient_secondGuess_finalStep_partialProducts_compare_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_secondGuess_finalStep_partialProducts_5 = shl(_quotient_secondGuess_finalStep_partialProducts_T_5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_secondGuess_finalStep_partialSums_T = add(quotient_secondGuess_finalStep_partialProducts_0, quotient_secondGuess_finalStep_partialProducts_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:34]
    node quotient_secondGuess_finalStep_partialSums_0 = add(_quotient_secondGuess_finalStep_partialSums_T, quotient_secondGuess_finalStep_partialProducts_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:39]
    node _quotient_secondGuess_finalStep_partialSums_T_1 = add(quotient_secondGuess_finalStep_partialProducts_3, quotient_secondGuess_finalStep_partialProducts_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:34]
    node quotient_secondGuess_finalStep_partialSums_1 = add(_quotient_secondGuess_finalStep_partialSums_T_1, quotient_secondGuess_finalStep_partialProducts_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:39]
    node _quotient_secondGuess_finalStep_T = add(quotient_secondGuess_finalStep_partialSums_0, quotient_secondGuess_finalStep_partialSums_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 106:15]
    node quotient_secondGuess_finalStep = bits(_quotient_secondGuess_finalStep_T, 11, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:27 231:17]
    node _quotient_secondGuess_res_T = bits(quotient_secondGuess_finalStep, 10, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:37]
    node _quotient_secondGuess_res_roundedValue_T = bits(_quotient_secondGuess_res_T, 10, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:14]
    node _quotient_secondGuess_res_roundedValue_T_1 = bits(_quotient_secondGuess_res_T, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:44]
    node _quotient_secondGuess_res_roundedValue_T_2 = bits(_quotient_secondGuess_res_T, 3, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:66]
    node _quotient_secondGuess_res_roundedValue_T_3 = orr(_quotient_secondGuess_res_roundedValue_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:95]
    node _quotient_secondGuess_res_roundedValue_T_4 = and(_quotient_secondGuess_res_roundedValue_T_1, _quotient_secondGuess_res_roundedValue_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:59]
    node quotient_secondGuess = add(_quotient_secondGuess_res_roundedValue_T, _quotient_secondGuess_res_roundedValue_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:35]
    node _quotient_finalGuess_T = bits(quotient_secondGuess, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 243:43]
    node _quotient_finalGuess_firstStep_partialProducts_compare_T = bits(divisorFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_finalGuess_firstStep_partialProducts_compare = mux(_quotient_finalGuess_firstStep_partialProducts_compare_T, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_finalGuess_firstStep_partialProducts_T = and(_quotient_finalGuess_T, quotient_finalGuess_firstStep_partialProducts_compare) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_finalGuess_firstStep_partialProducts_0 = shl(_quotient_finalGuess_firstStep_partialProducts_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_finalGuess_firstStep_partialProducts_compare_T_1 = bits(divisorFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_finalGuess_firstStep_partialProducts_compare_1 = mux(_quotient_finalGuess_firstStep_partialProducts_compare_T_1, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_finalGuess_firstStep_partialProducts_T_1 = and(_quotient_finalGuess_T, quotient_finalGuess_firstStep_partialProducts_compare_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_finalGuess_firstStep_partialProducts_1 = shl(_quotient_finalGuess_firstStep_partialProducts_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_finalGuess_firstStep_partialProducts_compare_T_2 = bits(divisorFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_finalGuess_firstStep_partialProducts_compare_2 = mux(_quotient_finalGuess_firstStep_partialProducts_compare_T_2, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_finalGuess_firstStep_partialProducts_T_2 = and(_quotient_finalGuess_T, quotient_finalGuess_firstStep_partialProducts_compare_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_finalGuess_firstStep_partialProducts_2 = shl(_quotient_finalGuess_firstStep_partialProducts_T_2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_finalGuess_firstStep_partialProducts_compare_T_3 = bits(divisorFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_finalGuess_firstStep_partialProducts_compare_3 = mux(_quotient_finalGuess_firstStep_partialProducts_compare_T_3, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_finalGuess_firstStep_partialProducts_T_3 = and(_quotient_finalGuess_T, quotient_finalGuess_firstStep_partialProducts_compare_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_finalGuess_firstStep_partialProducts_3 = shl(_quotient_finalGuess_firstStep_partialProducts_T_3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_finalGuess_firstStep_partialSums_T = add(quotient_finalGuess_firstStep_partialProducts_0, quotient_finalGuess_firstStep_partialProducts_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:34]
    node quotient_finalGuess_firstStep_partialSums_0 = add(_quotient_finalGuess_firstStep_partialSums_T, quotient_finalGuess_firstStep_partialProducts_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:39]
    node quotient_finalGuess_firstStep = add(quotient_finalGuess_firstStep_partialSums_0, quotient_finalGuess_firstStep_partialProducts_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 106:15]
    node _quotient_finalGuess_firstStepRnd_T = bits(quotient_finalGuess_firstStep, 8, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 221:46]
    node _quotient_finalGuess_firstStepRnd_roundedValue_T = bits(_quotient_finalGuess_firstStepRnd_T, 8, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:14]
    node _quotient_finalGuess_firstStepRnd_roundedValue_T_1 = bits(_quotient_finalGuess_firstStepRnd_T, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:44]
    node _quotient_finalGuess_firstStepRnd_roundedValue_T_2 = bits(_quotient_finalGuess_firstStepRnd_T, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:66]
    node _quotient_finalGuess_firstStepRnd_roundedValue_T_3 = orr(_quotient_finalGuess_firstStepRnd_roundedValue_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:95]
    node _quotient_finalGuess_firstStepRnd_roundedValue_T_4 = and(_quotient_finalGuess_firstStepRnd_roundedValue_T_1, _quotient_finalGuess_firstStepRnd_roundedValue_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:59]
    node quotient_finalGuess_firstStepRnd = add(_quotient_finalGuess_firstStepRnd_roundedValue_T, _quotient_finalGuess_firstStepRnd_roundedValue_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:35]
    node _quotient_finalGuess_secondStep_T = bits(quotient_finalGuess_firstStepRnd, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 225:38]
    node _quotient_finalGuess_secondStep_T_1 = not(_quotient_finalGuess_secondStep_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 225:25]
    node _quotient_finalGuess_secondStep_T_2 = add(_quotient_finalGuess_secondStep_T_1, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 225:70]
    node quotient_finalGuess_secondStep = tail(_quotient_finalGuess_secondStep_T_2, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 225:70]
    node _quotient_finalGuess_finalStep_partialProducts_compare_T = bits(quotient_finalGuess_secondStep, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_finalGuess_finalStep_partialProducts_compare = mux(_quotient_finalGuess_finalStep_partialProducts_compare_T, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_finalGuess_finalStep_partialProducts_T = and(_quotient_finalGuess_T, quotient_finalGuess_finalStep_partialProducts_compare) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_finalGuess_finalStep_partialProducts_0 = shl(_quotient_finalGuess_finalStep_partialProducts_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_finalGuess_finalStep_partialProducts_compare_T_1 = bits(quotient_finalGuess_secondStep, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_finalGuess_finalStep_partialProducts_compare_1 = mux(_quotient_finalGuess_finalStep_partialProducts_compare_T_1, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_finalGuess_finalStep_partialProducts_T_1 = and(_quotient_finalGuess_T, quotient_finalGuess_finalStep_partialProducts_compare_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_finalGuess_finalStep_partialProducts_1 = shl(_quotient_finalGuess_finalStep_partialProducts_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_finalGuess_finalStep_partialProducts_compare_T_2 = bits(quotient_finalGuess_secondStep, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_finalGuess_finalStep_partialProducts_compare_2 = mux(_quotient_finalGuess_finalStep_partialProducts_compare_T_2, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_finalGuess_finalStep_partialProducts_T_2 = and(_quotient_finalGuess_T, quotient_finalGuess_finalStep_partialProducts_compare_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_finalGuess_finalStep_partialProducts_2 = shl(_quotient_finalGuess_finalStep_partialProducts_T_2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_finalGuess_finalStep_partialProducts_compare_T_3 = bits(quotient_finalGuess_secondStep, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_finalGuess_finalStep_partialProducts_compare_3 = mux(_quotient_finalGuess_finalStep_partialProducts_compare_T_3, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_finalGuess_finalStep_partialProducts_T_3 = and(_quotient_finalGuess_T, quotient_finalGuess_finalStep_partialProducts_compare_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_finalGuess_finalStep_partialProducts_3 = shl(_quotient_finalGuess_finalStep_partialProducts_T_3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_finalGuess_finalStep_partialProducts_compare_T_4 = bits(quotient_finalGuess_secondStep, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_finalGuess_finalStep_partialProducts_compare_4 = mux(_quotient_finalGuess_finalStep_partialProducts_compare_T_4, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_finalGuess_finalStep_partialProducts_T_4 = and(_quotient_finalGuess_T, quotient_finalGuess_finalStep_partialProducts_compare_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_finalGuess_finalStep_partialProducts_4 = shl(_quotient_finalGuess_finalStep_partialProducts_T_4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_finalGuess_finalStep_partialProducts_compare_T_5 = bits(quotient_finalGuess_secondStep, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_finalGuess_finalStep_partialProducts_compare_5 = mux(_quotient_finalGuess_finalStep_partialProducts_compare_T_5, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_finalGuess_finalStep_partialProducts_T_5 = and(_quotient_finalGuess_T, quotient_finalGuess_finalStep_partialProducts_compare_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_finalGuess_finalStep_partialProducts_5 = shl(_quotient_finalGuess_finalStep_partialProducts_T_5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_finalGuess_finalStep_partialSums_T = add(quotient_finalGuess_finalStep_partialProducts_0, quotient_finalGuess_finalStep_partialProducts_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:34]
    node quotient_finalGuess_finalStep_partialSums_0 = add(_quotient_finalGuess_finalStep_partialSums_T, quotient_finalGuess_finalStep_partialProducts_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:39]
    node _quotient_finalGuess_finalStep_partialSums_T_1 = add(quotient_finalGuess_finalStep_partialProducts_3, quotient_finalGuess_finalStep_partialProducts_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:34]
    node quotient_finalGuess_finalStep_partialSums_1 = add(_quotient_finalGuess_finalStep_partialSums_T_1, quotient_finalGuess_finalStep_partialProducts_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:39]
    node _quotient_finalGuess_finalStep_T = add(quotient_finalGuess_finalStep_partialSums_0, quotient_finalGuess_finalStep_partialSums_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 106:15]
    node quotient_finalGuess_finalStep = bits(_quotient_finalGuess_finalStep_T, 11, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:27 231:17]
    node _quotient_finalGuess_res_T = bits(quotient_finalGuess_finalStep, 10, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:37]
    node _quotient_finalGuess_res_roundedValue_T = bits(_quotient_finalGuess_res_T, 10, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:14]
    node _quotient_finalGuess_res_roundedValue_T_1 = bits(_quotient_finalGuess_res_T, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:44]
    node _quotient_finalGuess_res_roundedValue_T_2 = bits(_quotient_finalGuess_res_T, 3, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:66]
    node _quotient_finalGuess_res_roundedValue_T_3 = orr(_quotient_finalGuess_res_roundedValue_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:95]
    node _quotient_finalGuess_res_roundedValue_T_4 = and(_quotient_finalGuess_res_roundedValue_T_1, _quotient_finalGuess_res_roundedValue_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:59]
    node quotient_finalGuess = add(_quotient_finalGuess_res_roundedValue_T, _quotient_finalGuess_res_roundedValue_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:35]
    node _quotient_T = bits(quotient_finalGuess, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 246:24]
    node dividendFraction = bits(_shiftedValue_T, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:28 62:18]
    node _quotient_partialProducts_compare_T = bits(dividendFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_partialProducts_compare = mux(_quotient_partialProducts_compare_T, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_partialProducts_T = and(_quotient_T, quotient_partialProducts_compare) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_partialProducts_0 = shl(_quotient_partialProducts_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_partialProducts_compare_T_1 = bits(dividendFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_partialProducts_compare_1 = mux(_quotient_partialProducts_compare_T_1, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_partialProducts_T_1 = and(_quotient_T, quotient_partialProducts_compare_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_partialProducts_1 = shl(_quotient_partialProducts_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_partialProducts_compare_T_2 = bits(dividendFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_partialProducts_compare_2 = mux(_quotient_partialProducts_compare_T_2, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_partialProducts_T_2 = and(_quotient_T, quotient_partialProducts_compare_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_partialProducts_2 = shl(_quotient_partialProducts_T_2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_partialProducts_compare_T_3 = bits(dividendFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_partialProducts_compare_3 = mux(_quotient_partialProducts_compare_T_3, UInt<6>("h3f"), UInt<6>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_partialProducts_T_3 = and(_quotient_T, quotient_partialProducts_compare_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_partialProducts_3 = shl(_quotient_partialProducts_T_3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_partialSums_T = add(quotient_partialProducts_0, quotient_partialProducts_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:34]
    node quotient_partialSums_0 = add(_quotient_partialSums_T, quotient_partialProducts_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:39]
    node quotient = add(quotient_partialSums_0, quotient_partialProducts_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 106:15]
    node _T = bits(quotient, 8, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 359:64]
    node _leadingZeros_T_32 = bits(_T, 7, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_33 = shl(UInt<4>("hf"), 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_34 = xor(UInt<8>("hff"), _leadingZeros_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_35 = shr(_leadingZeros_T_32, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_36 = and(_leadingZeros_T_35, _leadingZeros_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_37 = bits(_leadingZeros_T_32, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_38 = shl(_leadingZeros_T_37, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_39 = not(_leadingZeros_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_40 = and(_leadingZeros_T_38, _leadingZeros_T_39) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_41 = or(_leadingZeros_T_36, _leadingZeros_T_40) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_42 = bits(_leadingZeros_T_34, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_43 = shl(_leadingZeros_T_42, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_44 = xor(_leadingZeros_T_34, _leadingZeros_T_43) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_45 = shr(_leadingZeros_T_41, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_46 = and(_leadingZeros_T_45, _leadingZeros_T_44) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_47 = bits(_leadingZeros_T_41, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_48 = shl(_leadingZeros_T_47, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_49 = not(_leadingZeros_T_44) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_50 = and(_leadingZeros_T_48, _leadingZeros_T_49) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_51 = or(_leadingZeros_T_46, _leadingZeros_T_50) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_52 = bits(_leadingZeros_T_44, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_53 = shl(_leadingZeros_T_52, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_54 = xor(_leadingZeros_T_44, _leadingZeros_T_53) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_55 = shr(_leadingZeros_T_51, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_56 = and(_leadingZeros_T_55, _leadingZeros_T_54) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_57 = bits(_leadingZeros_T_51, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_58 = shl(_leadingZeros_T_57, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_59 = not(_leadingZeros_T_54) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_60 = and(_leadingZeros_T_58, _leadingZeros_T_59) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_61 = or(_leadingZeros_T_56, _leadingZeros_T_60) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_62 = bits(_T, 8, 8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_63 = cat(_leadingZeros_T_61, _leadingZeros_T_62) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_64 = bits(_leadingZeros_T_63, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_65 = bits(_leadingZeros_T_63, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_66 = bits(_leadingZeros_T_63, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_67 = bits(_leadingZeros_T_63, 3, 3) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_68 = bits(_leadingZeros_T_63, 4, 4) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_69 = bits(_leadingZeros_T_63, 5, 5) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_70 = bits(_leadingZeros_T_63, 6, 6) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_71 = bits(_leadingZeros_T_63, 7, 7) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_72 = bits(_leadingZeros_T_63, 8, 8) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_73 = mux(_leadingZeros_T_71, UInt<3>("h7"), UInt<4>("h8")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_74 = mux(_leadingZeros_T_70, UInt<3>("h6"), _leadingZeros_T_73) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_75 = mux(_leadingZeros_T_69, UInt<3>("h5"), _leadingZeros_T_74) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_76 = mux(_leadingZeros_T_68, UInt<3>("h4"), _leadingZeros_T_75) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_77 = mux(_leadingZeros_T_67, UInt<2>("h3"), _leadingZeros_T_76) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_78 = mux(_leadingZeros_T_66, UInt<2>("h2"), _leadingZeros_T_77) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_79 = mux(_leadingZeros_T_65, UInt<1>("h1"), _leadingZeros_T_78) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_80 = mux(_leadingZeros_T_64, UInt<1>("h0"), _leadingZeros_T_79) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node shift = pad(_leadingZeros_T_80, 9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 57:28 60:18]
    node _shiftedValue_T_2 = dshl(_T, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 62:27]
    node _exponentShiftRight_T = sub(UInt<6>("h0"), exponent_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 361:58]
    node exponentShiftRight = tail(_exponentShiftRight_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 361:58]
    node _exponentShiftLeft_T = sub(exponent_1, UInt<6>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 363:38]
    node exponentShiftLeft = tail(_exponentShiftLeft_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 363:38]
    node _T_1 = bits(exponent_1, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 371:19]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 371:10]
    node _T_3 = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 371:52]
    node _T_4 = geq(_T_3, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 371:72]
    node _T_5 = and(_T_2, _T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 371:40]
    node _T_6 = bits(quotient, 9, 9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 372:25]
    node _T_7 = and(_T_5, _T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 372:7]
    node _T_8 = bits(exponent_1, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 375:25]
    node _T_9 = eq(_T_8, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 375:16]
    node _T_10 = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 375:58]
    node _T_11 = lt(_T_10, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 375:78]
    node _T_12 = and(_T_9, _T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 375:46]
    node _T_13 = bits(quotient, 9, 9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 376:25]
    node _T_14 = and(_T_12, _T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 376:7]
    node _tempExponent_T_7 = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 377:31]
    node _tempExponent_T_8 = add(_tempExponent_T_7, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 377:51]
    node _tempExponent_T_9 = tail(_tempExponent_T_8, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 377:51]
    node _tempFraction_T = bits(quotient, 8, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 380:26]
    node _tempFraction_T_1 = bits(quotient, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 381:28]
    node _tempFraction_T_2 = andr(_tempFraction_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 381:59]
    node _tempFraction_T_3 = add(_tempFraction_T, _tempFraction_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 380:81]
    node _tempFraction_T_4 = tail(_tempFraction_T_3, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 380:81]
    node _T_15 = bits(exponent_1, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 385:25]
    node _T_16 = eq(_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 385:16]
    node _T_17 = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 385:58]
    node _T_18 = gt(_T_17, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 385:78]
    node _T_19 = and(_T_16, _T_18) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 385:46]
    node shiftedCalcValue = bits(_shiftedValue_T_2, 8, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:28 62:18]
    node _T_20 = bits(shiftedCalcValue, 8, 8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 386:26]
    node _T_21 = and(_T_19, _T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 386:7]
    node _tempExponent_T_10 = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 387:31]
    node _tempExponent_T_11 = sub(_tempExponent_T_10, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 387:51]
    node _tempExponent_T_12 = tail(_tempExponent_T_11, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 387:51]
    node _tempFraction_T_5 = bits(shiftedCalcValue, 8, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 390:27]
    node _tempFraction_T_6 = bits(shiftedCalcValue, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 391:29]
    node _tempFraction_T_7 = andr(_tempFraction_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 391:60]
    node _tempFraction_T_8 = add(_tempFraction_T_5, _tempFraction_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 390:82]
    node _tempFraction_T_9 = tail(_tempFraction_T_8, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 390:82]
    node _T_22 = bits(exponent_1, 5, 5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 397:21]
    node _T_23 = eq(_T_22, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 397:12]
    node _T_24 = bits(exponent_1, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 397:54]
    node _T_25 = gt(_T_24, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 397:74]
    node _T_26 = and(_T_23, _T_25) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 397:42]
    node _tempFraction_T_10 = bits(quotient, 8, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 400:29]
    node _tempFraction_T_11 = bits(quotient, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 401:30]
    node _tempFraction_T_12 = andr(_tempFraction_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 401:61]
    node _tempFraction_T_13 = add(_tempFraction_T_10, _tempFraction_T_12) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 400:84]
    node _tempFraction_T_14 = tail(_tempFraction_T_13, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 400:84]
    node _tempFraction_T_15 = dshl(_tempFraction_T_14, exponentShiftLeft) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 401:74]
    node _tempFraction_T_16 = bits(quotient, 9, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 406:41]
    node _tempFraction_T_17 = bits(quotient, 2, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 407:26]
    node _tempFraction_T_18 = andr(_tempFraction_T_17) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 407:125]
    node _tempFraction_T_19 = add(_tempFraction_T_16, _tempFraction_T_18) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 406:118]
    node _tempFraction_T_20 = tail(_tempFraction_T_19, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 406:118]
    node _tempFraction_T_21 = dshr(_tempFraction_T_20, exponentShiftRight) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 407:138]
    node _GEN_8 = mux(_T_26, _tempFraction_T_15, _tempFraction_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 397:82 398:22 406:22]
    node _GEN_9 = mux(_T_21, _tempExponent_T_12, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 386:55 387:20 396:20]
    node _GEN_10 = mux(_T_21, _tempFraction_T_9, _GEN_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 386:55 388:20]
    node _GEN_11 = mux(_T_14, _tempExponent_T_9, _GEN_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 376:54 377:20]
    node _GEN_12 = mux(_T_14, _tempFraction_T_4, _GEN_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 376:54 378:20]
    node _GEN_13 = mux(_T_7, UInt<4>("hf"), _GEN_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 372:54 373:20]
    node _GEN_14 = mux(_T_7, UInt<8>("hff"), _GEN_12) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 372:54 374:20]
    node _addOne_T = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:33]
    node tempFraction = bits(_GEN_14, 7, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 367:28]
    node _addOne_T_1 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:57]
    node _addOne_T_2 = and(_addOne_T, _addOne_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:42]
    node _addOne_T_3 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:77]
    node _addOne_T_4 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:96]
    node _addOne_T_5 = or(_addOne_T_3, _addOne_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:81]
    node _addOne_T_6 = and(_addOne_T_2, _addOne_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:61]
    node _addOne_T_7 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:22]
    node _addOne_T_8 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:46]
    node _addOne_T_9 = and(_addOne_T_7, _addOne_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:31]
    node _addOne_T_10 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:66]
    node _addOne_T_11 = eq(_addOne_T_10, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:53]
    node _addOne_T_12 = and(_addOne_T_9, _addOne_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:50]
    node _addOne_T_13 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:86]
    node _addOne_T_14 = eq(_addOne_T_13, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:73]
    node _addOne_T_15 = and(_addOne_T_12, _addOne_T_14) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:70]
    node _addOne_T_16 = bits(tempFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:105]
    node _addOne_T_17 = and(_addOne_T_15, _addOne_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:90]
    node _addOne_T_18 = or(_addOne_T_6, _addOne_T_17) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:102]
    node _addOne_T_19 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:22]
    node _addOne_T_20 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:47]
    node _addOne_T_21 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:66]
    node _addOne_T_22 = or(_addOne_T_20, _addOne_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:51]
    node _addOne_T_23 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:85]
    node _addOne_T_24 = or(_addOne_T_22, _addOne_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:70]
    node _addOne_T_25 = and(_addOne_T_19, _addOne_T_24) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:31]
    node _addOne_T_26 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:98]
    node _addOne_T_27 = and(_addOne_T_25, _addOne_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:90]
    node _addOne_T_28 = or(_addOne_T_18, _addOne_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:110]
    node _addOne_T_29 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:22]
    node _addOne_T_30 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:47]
    node _addOne_T_31 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:66]
    node _addOne_T_32 = or(_addOne_T_30, _addOne_T_31) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:51]
    node _addOne_T_33 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:85]
    node _addOne_T_34 = or(_addOne_T_32, _addOne_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:70]
    node _addOne_T_35 = and(_addOne_T_29, _addOne_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:31]
    node _addOne_T_36 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:99]
    node _addOne_T_37 = eq(_addOne_T_36, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:93]
    node _addOne_T_38 = and(_addOne_T_35, _addOne_T_37) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:90]
    node addOne = or(_addOne_T_28, _addOne_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:106]
    node _roundedFraction_T = bits(tempFraction, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 255:39]
    node roundedFraction = add(_roundedFraction_T, addOne) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 255:66]
    node _finalFraction_T = bits(roundedFraction, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 257:44]
    node _finalFraction_T_1 = eq(_finalFraction_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 257:65]
    node _finalFraction_T_2 = bits(roundedFraction, 4, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 258:22]
    node _finalFraction_T_3 = bits(roundedFraction, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 258:62]
    node resultFraction = mux(_finalFraction_T_1, _finalFraction_T_2, _finalFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 257:28]
    node _finalExponent_T = bits(roundedFraction, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:44]
    node _finalExponent_T_1 = eq(_finalExponent_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:65]
    node _finalExponent_T_2 = bits(roundedFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:92]
    node tempExponent_1 = bits(_GEN_13, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 365:28]
    node _finalExponent_T_3 = eq(tempExponent_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:125]
    node _finalExponent_T_4 = and(_finalExponent_T_2, _finalExponent_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:109]
    node _finalExponent_T_5 = or(_finalExponent_T_1, _finalExponent_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:73]
    node _finalExponent_T_6 = add(tempExponent_1, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 261:20]
    node _finalExponent_T_7 = tail(_finalExponent_T_6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 261:20]
    node resultExponent = mux(_finalExponent_T_5, _finalExponent_T_7, tempExponent_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:28]
    node _overflow_T = gt(resultExponent, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:27]
    node _overflow_T_1 = bits(resultExponent, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:62]
    node _overflow_T_2 = eq(_overflow_T_1, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:86]
    node _overflow_T_3 = eq(resultFraction, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:123]
    node _overflow_T_4 = and(_overflow_T_2, _overflow_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:105]
    node _overflow_T_5 = or(_overflow_T, _overflow_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:44]
    node _overflow_T_6 = geq(tempExponent_1, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 267:24]
    node _overflow_T_7 = bits(tempFraction, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 267:58]
    node _overflow_T_8 = eq(_overflow_T_7, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 267:85]
    node _overflow_T_9 = and(_overflow_T_6, _overflow_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 267:42]
    node resultOverflow = or(_overflow_T_5, _overflow_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 266:134]
    node _T_27 = eq(enable, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\Divide.scala 27:15]
    node _GEN_15 = mux(_T_27, resultSign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 27:24 28:10 37:10]
    node _GEN_16 = mux(_T_27, resultExponent, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 27:24 29:14 38:14]
    node _GEN_17 = mux(_T_27, resultFraction, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 27:24 30:14 39:14]
    node _GEN_18 = mux(_T_27, resultOverflow, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 27:24 31:14 40:14]
    node _GEN_19 = mux(_T_27, UInt<1>("h0"), UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 27:24 32:13 41:13]
    node _GEN_20 = mux(_T_27, isResult0, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 27:24 33:9 42:9]
    node _GEN_21 = mux(_T_27, isResultNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 27:24 34:11 43:11]
    sign <= _GEN_15
    exponent <= _GEN_16
    fraction <= _GEN_17
    overflow <= _GEN_18
    isInfty <= _GEN_19
    is0 <= _GEN_20
    isNaN <= _GEN_21
    NaNFractionValue <= _GEN_19

  module Divide_1 :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 9:18]
    input a_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Divide.scala 10:13]
    input b_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Divide.scala 11:13]
    input roundingMode : UInt<2> @[\\src\\main\\scala\\fpu8\\Divide.scala 12:24]
    output sign : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 15:16]
    output exponent : UInt<6> @[\\src\\main\\scala\\fpu8\\Divide.scala 16:20]
    output fraction : UInt<3> @[\\src\\main\\scala\\fpu8\\Divide.scala 17:20]
    output overflow : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 18:20]
    output isInfty : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 19:19]
    output is0 : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 20:15]
    output isNaN : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 21:17]
    output NaNFractionValue : UInt<1> @[\\src\\main\\scala\\fpu8\\Divide.scala 22:28]

    node _isResultNaN_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_1 = eq(_isResultNaN_T, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultNaN_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_3 = eq(_isResultNaN_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultNaN_T_4 = eq(_isResultNaN_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _isResultNaN_T_5 = and(_isResultNaN_T_1, _isResultNaN_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResultNaN_T_6 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_7 = eq(_isResultNaN_T_6, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultNaN_T_8 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_9 = eq(_isResultNaN_T_8, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultNaN_T_10 = eq(_isResultNaN_T_9, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _isResultNaN_T_11 = and(_isResultNaN_T_7, _isResultNaN_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResultNaN_T_12 = or(_isResultNaN_T_5, _isResultNaN_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 519:42]
    node _isResultNaN_T_13 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_14 = eq(_isResultNaN_T_13, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _isResultNaN_T_15 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_16 = eq(_isResultNaN_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultNaN_T_17 = and(_isResultNaN_T_14, _isResultNaN_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 53:26]
    node _isResultNaN_T_18 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_19 = eq(_isResultNaN_T_18, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _isResultNaN_T_20 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_21 = eq(_isResultNaN_T_20, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultNaN_T_22 = and(_isResultNaN_T_19, _isResultNaN_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 53:26]
    node _isResultNaN_T_23 = and(_isResultNaN_T_17, _isResultNaN_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 519:70]
    node _isResultNaN_T_24 = or(_isResultNaN_T_12, _isResultNaN_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 519:57]
    node _isResultNaN_T_25 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_26 = eq(_isResultNaN_T_25, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultNaN_T_27 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_28 = eq(_isResultNaN_T_27, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultNaN_T_29 = and(_isResultNaN_T_26, _isResultNaN_T_28) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 49:24]
    node _isResultNaN_T_30 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultNaN_T_31 = eq(_isResultNaN_T_30, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultNaN_T_32 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultNaN_T_33 = eq(_isResultNaN_T_32, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultNaN_T_34 = and(_isResultNaN_T_31, _isResultNaN_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 49:24]
    node _isResultNaN_T_35 = and(_isResultNaN_T_29, _isResultNaN_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 519:101]
    node _isResultNaN_T_36 = or(_isResultNaN_T_24, _isResultNaN_T_35) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 519:84]
    node _isResultInfty_T = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_1 = eq(_isResultInfty_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _isResultInfty_T_2 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_3 = eq(_isResultInfty_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultInfty_T_4 = and(_isResultInfty_T_1, _isResultInfty_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 53:26]
    node _isResultInfty_T_5 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_6 = eq(_isResultInfty_T_5, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _isResultInfty_T_7 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_8 = eq(_isResultInfty_T_7, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultInfty_T_9 = and(_isResultInfty_T_6, _isResultInfty_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 53:26]
    node _isResultInfty_T_10 = eq(_isResultInfty_T_9, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 525:45]
    node _isResultInfty_T_11 = and(_isResultInfty_T_4, _isResultInfty_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 525:42]
    node _isResultInfty_T_12 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_13 = eq(_isResultInfty_T_12, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultInfty_T_14 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_15 = eq(_isResultInfty_T_14, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultInfty_T_16 = and(_isResultInfty_T_13, _isResultInfty_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 49:24]
    node _isResultInfty_T_17 = eq(_isResultInfty_T_16, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 525:58]
    node _isResultInfty_T_18 = and(_isResultInfty_T_11, _isResultInfty_T_17) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 525:55]
    node _isResultInfty_T_19 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_20 = eq(_isResultInfty_T_19, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultInfty_T_21 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_22 = eq(_isResultInfty_T_21, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultInfty_T_23 = eq(_isResultInfty_T_22, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _isResultInfty_T_24 = and(_isResultInfty_T_20, _isResultInfty_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResultInfty_T_25 = eq(_isResultInfty_T_24, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 525:75]
    node _isResultInfty_T_26 = and(_isResultInfty_T_18, _isResultInfty_T_25) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 525:72]
    node _isResultInfty_T_27 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_28 = eq(_isResultInfty_T_27, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultInfty_T_29 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_30 = eq(_isResultInfty_T_29, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultInfty_T_31 = and(_isResultInfty_T_28, _isResultInfty_T_30) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 49:24]
    node _isResultInfty_T_32 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResultInfty_T_33 = eq(_isResultInfty_T_32, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResultInfty_T_34 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResultInfty_T_35 = eq(_isResultInfty_T_34, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResultInfty_T_36 = eq(_isResultInfty_T_35, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _isResultInfty_T_37 = and(_isResultInfty_T_33, _isResultInfty_T_36) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResultInfty_T_38 = eq(_isResultInfty_T_37, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 525:108]
    node _isResultInfty_T_39 = and(_isResultInfty_T_31, _isResultInfty_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 525:105]
    node _isResultInfty_T_40 = or(_isResultInfty_T_26, _isResultInfty_T_39) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 525:88]
    node _isResult0_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_1 = eq(_isResult0_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _isResult0_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_3 = eq(_isResult0_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResult0_T_4 = and(_isResult0_T_1, _isResult0_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 53:26]
    node _isResult0_T_5 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_6 = eq(_isResult0_T_5, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _isResult0_T_7 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_8 = eq(_isResult0_T_7, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResult0_T_9 = and(_isResult0_T_6, _isResult0_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 53:26]
    node _isResult0_T_10 = eq(_isResult0_T_9, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 531:44]
    node _isResult0_T_11 = and(_isResult0_T_4, _isResult0_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 531:41]
    node _isResult0_T_12 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_13 = eq(_isResult0_T_12, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResult0_T_14 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_15 = eq(_isResult0_T_14, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResult0_T_16 = eq(_isResult0_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _isResult0_T_17 = and(_isResult0_T_13, _isResult0_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResult0_T_18 = eq(_isResult0_T_17, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 531:58]
    node _isResult0_T_19 = and(_isResult0_T_11, _isResult0_T_18) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 531:55]
    node _isResult0_T_20 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_21 = eq(_isResult0_T_20, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResult0_T_22 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_23 = eq(_isResult0_T_22, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResult0_T_24 = and(_isResult0_T_21, _isResult0_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 49:24]
    node _isResult0_T_25 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_26 = eq(_isResult0_T_25, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResult0_T_27 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_28 = eq(_isResult0_T_27, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResult0_T_29 = and(_isResult0_T_26, _isResult0_T_28) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 49:24]
    node _isResult0_T_30 = eq(_isResult0_T_29, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 531:93]
    node _isResult0_T_31 = and(_isResult0_T_24, _isResult0_T_30) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 531:90]
    node _isResult0_T_32 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _isResult0_T_33 = eq(_isResult0_T_32, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _isResult0_T_34 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _isResult0_T_35 = eq(_isResult0_T_34, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _isResult0_T_36 = eq(_isResult0_T_35, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _isResult0_T_37 = and(_isResult0_T_33, _isResult0_T_36) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _isResult0_T_38 = eq(_isResult0_T_37, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 531:110]
    node _isResult0_T_39 = and(_isResult0_T_31, _isResult0_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 531:107]
    node _isResult0_T_40 = or(_isResult0_T_19, _isResult0_T_39) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 531:72]
    node _resultNaNFractionValue_T = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_1 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_2 = gt(_resultNaNFractionValue_T, _resultNaNFractionValue_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:33]
    node _resultNaNFractionValue_T_3 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_4 = bits(_resultNaNFractionValue_T_3, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:64]
    node _resultNaNFractionValue_T_5 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _resultNaNFractionValue_T_6 = bits(_resultNaNFractionValue_T_5, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:83]
    node resultNaNFractionValue = mux(_resultNaNFractionValue_T_2, _resultNaNFractionValue_T_4, _resultNaNFractionValue_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:18]
    node _sign_T = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _sign_T_1 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node resultSign = xor(_sign_T, _sign_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 175:26]
    node _tempDividendFraction_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _tempDividendFraction_T_1 = eq(_tempDividendFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _tempDividendFraction_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _tempDividendFraction_T_3 = cat(_tempDividendFraction_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 177:10]
    node _tempDividendFraction_T_4 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _tempDividendFraction_T_5 = cat(UInt<1>("h1"), _tempDividendFraction_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 178:10]
    node tempDividendFraction = mux(_tempDividendFraction_T_1, _tempDividendFraction_T_3, _tempDividendFraction_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 176:35]
    node _tempDivisorFraction_T = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _tempDivisorFraction_T_1 = eq(_tempDivisorFraction_T, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 33:31]
    node _tempDivisorFraction_T_2 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _tempDivisorFraction_T_3 = cat(_tempDivisorFraction_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 183:10]
    node _tempDivisorFraction_T_4 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _tempDivisorFraction_T_5 = cat(UInt<1>("h1"), _tempDivisorFraction_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 184:10]
    node tempDivisorFraction = mux(_tempDivisorFraction_T_1, _tempDivisorFraction_T_3, _tempDivisorFraction_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 182:34]
    node _tempExponent_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _tempExponent_T_1 = cat(UInt<2>("h0"), _tempExponent_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 188:27]
    node _tempExponent_T_2 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _tempExponent_T_3 = cat(UInt<2>("h0"), _tempExponent_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 189:10]
    node _tempExponent_T_4 = sub(_tempExponent_T_1, _tempExponent_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 188:53]
    node _tempExponent_T_5 = tail(_tempExponent_T_4, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 188:53]
    node _tempExponent_T_6 = add(_tempExponent_T_5, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 189:37]
    node tempExponent = tail(_tempExponent_T_6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 189:37]
    node _leadingZeros_T = bits(tempDividendFraction, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_1 = bits(_leadingZeros_T, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_2 = bits(_leadingZeros_T, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_3 = cat(_leadingZeros_T_1, _leadingZeros_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_4 = bits(tempDividendFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_5 = cat(_leadingZeros_T_3, _leadingZeros_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_6 = bits(_leadingZeros_T_5, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_7 = bits(_leadingZeros_T_5, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_8 = bits(_leadingZeros_T_5, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_9 = mux(_leadingZeros_T_7, UInt<1>("h1"), UInt<2>("h2")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_10 = mux(_leadingZeros_T_6, UInt<1>("h0"), _leadingZeros_T_9) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node dividendShift = pad(_leadingZeros_T_10, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 57:28 60:18]
    node _shiftedValue_T = dshl(tempDividendFraction, dividendShift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 62:27]
    node _leadingZeros_T_11 = bits(tempDivisorFraction, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_12 = bits(_leadingZeros_T_11, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_13 = bits(_leadingZeros_T_11, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_14 = cat(_leadingZeros_T_12, _leadingZeros_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_15 = bits(tempDivisorFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_16 = cat(_leadingZeros_T_14, _leadingZeros_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_17 = bits(_leadingZeros_T_16, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_18 = bits(_leadingZeros_T_16, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_19 = bits(_leadingZeros_T_16, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_20 = mux(_leadingZeros_T_18, UInt<1>("h1"), UInt<2>("h2")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_21 = mux(_leadingZeros_T_17, UInt<1>("h0"), _leadingZeros_T_20) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node divisorShift = pad(_leadingZeros_T_21, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 57:28 60:18]
    node _shiftedValue_T_1 = dshl(tempDivisorFraction, divisorShift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 62:27]
    node _exponent_T = sub(tempExponent, dividendShift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 200:33]
    node _exponent_T_1 = tail(_exponent_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 200:33]
    node _exponent_T_2 = add(_exponent_T_1, divisorShift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 200:49]
    node exponent_1 = tail(_exponent_T_2, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 200:49]
    node divisorFraction = bits(_shiftedValue_T_1, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:28 62:18]
    node _quotient_initGuess_T = bits(divisorFraction, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:54]
    node quotient_rom_0 = UInt<3>("h7") @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 84:25 89:17]
    node _GEN_0 = validif(eq(UInt<1>("h0"), _quotient_initGuess_T), quotient_rom_0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:{24,24}]
    node quotient_rom_1 = UInt<3>("h5") @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 84:25 89:17]
    node _GEN_1 = mux(eq(UInt<1>("h1"), _quotient_initGuess_T), quotient_rom_1, _GEN_0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:{24,24}]
    node quotient_rom_2 = UInt<3>("h3") @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 84:25 89:17]
    node _GEN_2 = mux(eq(UInt<2>("h2"), _quotient_initGuess_T), quotient_rom_2, _GEN_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:{24,24}]
    node quotient_rom_3 = UInt<3>("h1") @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 84:25 89:17]
    node _GEN_3 = mux(eq(UInt<2>("h3"), _quotient_initGuess_T), quotient_rom_3, _GEN_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:{24,24}]
    node _quotient_rom_quotient_initGuess_T = _GEN_3 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:24]
    node quotient_initGuess = cat(UInt<2>("h1"), _quotient_rom_quotient_initGuess_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 209:24]
    node _quotient_secondGuess_firstStep_partialProducts_compare_T = bits(divisorFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_secondGuess_firstStep_partialProducts_compare = mux(_quotient_secondGuess_firstStep_partialProducts_compare_T, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_secondGuess_firstStep_partialProducts_T = and(quotient_initGuess, quotient_secondGuess_firstStep_partialProducts_compare) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_secondGuess_firstStep_partialProducts_0 = shl(_quotient_secondGuess_firstStep_partialProducts_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_secondGuess_firstStep_partialProducts_compare_T_1 = bits(divisorFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_secondGuess_firstStep_partialProducts_compare_1 = mux(_quotient_secondGuess_firstStep_partialProducts_compare_T_1, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_secondGuess_firstStep_partialProducts_T_1 = and(quotient_initGuess, quotient_secondGuess_firstStep_partialProducts_compare_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_secondGuess_firstStep_partialProducts_1 = shl(_quotient_secondGuess_firstStep_partialProducts_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_secondGuess_firstStep_partialProducts_compare_T_2 = bits(divisorFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_secondGuess_firstStep_partialProducts_compare_2 = mux(_quotient_secondGuess_firstStep_partialProducts_compare_T_2, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_secondGuess_firstStep_partialProducts_T_2 = and(quotient_initGuess, quotient_secondGuess_firstStep_partialProducts_compare_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_secondGuess_firstStep_partialProducts_2 = shl(_quotient_secondGuess_firstStep_partialProducts_T_2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_secondGuess_firstStep_partialSums_T = add(quotient_secondGuess_firstStep_partialProducts_0, quotient_secondGuess_firstStep_partialProducts_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:34]
    node quotient_secondGuess_firstStep = add(_quotient_secondGuess_firstStep_partialSums_T, quotient_secondGuess_firstStep_partialProducts_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:39]
    node _quotient_secondGuess_firstStepRnd_T = bits(quotient_secondGuess_firstStep, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 221:46]
    node _quotient_secondGuess_firstStepRnd_roundedValue_T = bits(_quotient_secondGuess_firstStepRnd_T, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 76:23]
    node quotient_secondGuess_firstStepRnd = cat(UInt<1>("h0"), _quotient_secondGuess_firstStepRnd_roundedValue_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 76:12]
    node _quotient_secondGuess_secondStep_T = bits(quotient_secondGuess_firstStepRnd, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 225:38]
    node _quotient_secondGuess_secondStep_T_1 = not(_quotient_secondGuess_secondStep_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 225:25]
    node _quotient_secondGuess_secondStep_T_2 = add(_quotient_secondGuess_secondStep_T_1, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 225:70]
    node quotient_secondGuess_secondStep = tail(_quotient_secondGuess_secondStep_T_2, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 225:70]
    node _quotient_secondGuess_finalStep_partialProducts_compare_T = bits(quotient_secondGuess_secondStep, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_secondGuess_finalStep_partialProducts_compare = mux(_quotient_secondGuess_finalStep_partialProducts_compare_T, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_secondGuess_finalStep_partialProducts_T = and(quotient_initGuess, quotient_secondGuess_finalStep_partialProducts_compare) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_secondGuess_finalStep_partialProducts_0 = shl(_quotient_secondGuess_finalStep_partialProducts_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_secondGuess_finalStep_partialProducts_compare_T_1 = bits(quotient_secondGuess_secondStep, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_secondGuess_finalStep_partialProducts_compare_1 = mux(_quotient_secondGuess_finalStep_partialProducts_compare_T_1, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_secondGuess_finalStep_partialProducts_T_1 = and(quotient_initGuess, quotient_secondGuess_finalStep_partialProducts_compare_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_secondGuess_finalStep_partialProducts_1 = shl(_quotient_secondGuess_finalStep_partialProducts_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_secondGuess_finalStep_partialProducts_compare_T_2 = bits(quotient_secondGuess_secondStep, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_secondGuess_finalStep_partialProducts_compare_2 = mux(_quotient_secondGuess_finalStep_partialProducts_compare_T_2, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_secondGuess_finalStep_partialProducts_T_2 = and(quotient_initGuess, quotient_secondGuess_finalStep_partialProducts_compare_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_secondGuess_finalStep_partialProducts_2 = shl(_quotient_secondGuess_finalStep_partialProducts_T_2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_secondGuess_finalStep_partialProducts_compare_T_3 = bits(quotient_secondGuess_secondStep, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_secondGuess_finalStep_partialProducts_compare_3 = mux(_quotient_secondGuess_finalStep_partialProducts_compare_T_3, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_secondGuess_finalStep_partialProducts_T_3 = and(quotient_initGuess, quotient_secondGuess_finalStep_partialProducts_compare_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_secondGuess_finalStep_partialProducts_3 = shl(_quotient_secondGuess_finalStep_partialProducts_T_3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_secondGuess_finalStep_partialProducts_compare_T_4 = bits(quotient_secondGuess_secondStep, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_secondGuess_finalStep_partialProducts_compare_4 = mux(_quotient_secondGuess_finalStep_partialProducts_compare_T_4, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_secondGuess_finalStep_partialProducts_T_4 = and(quotient_initGuess, quotient_secondGuess_finalStep_partialProducts_compare_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_secondGuess_finalStep_partialProducts_4 = shl(_quotient_secondGuess_finalStep_partialProducts_T_4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_secondGuess_finalStep_partialSums_T = add(quotient_secondGuess_finalStep_partialProducts_0, quotient_secondGuess_finalStep_partialProducts_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:34]
    node quotient_secondGuess_finalStep_partialSums_0 = add(_quotient_secondGuess_finalStep_partialSums_T, quotient_secondGuess_finalStep_partialProducts_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:39]
    node quotient_secondGuess_finalStep_partialSums_1 = add(quotient_secondGuess_finalStep_partialProducts_3, quotient_secondGuess_finalStep_partialProducts_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 110:31]
    node _quotient_secondGuess_finalStep_T = add(quotient_secondGuess_finalStep_partialSums_0, quotient_secondGuess_finalStep_partialSums_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 106:15]
    node quotient_secondGuess_finalStep = bits(_quotient_secondGuess_finalStep_T, 9, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:27 231:17]
    node _quotient_secondGuess_res_T = bits(quotient_secondGuess_finalStep, 8, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:37]
    node _quotient_secondGuess_res_roundedValue_T = bits(_quotient_secondGuess_res_T, 8, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:14]
    node _quotient_secondGuess_res_roundedValue_T_1 = bits(_quotient_secondGuess_res_T, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:44]
    node _quotient_secondGuess_res_roundedValue_T_2 = bits(_quotient_secondGuess_res_T, 2, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:66]
    node _quotient_secondGuess_res_roundedValue_T_3 = orr(_quotient_secondGuess_res_roundedValue_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:95]
    node _quotient_secondGuess_res_roundedValue_T_4 = and(_quotient_secondGuess_res_roundedValue_T_1, _quotient_secondGuess_res_roundedValue_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:59]
    node quotient_secondGuess = add(_quotient_secondGuess_res_roundedValue_T, _quotient_secondGuess_res_roundedValue_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:35]
    node _quotient_finalGuess_T = bits(quotient_secondGuess, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 243:43]
    node _quotient_finalGuess_firstStep_partialProducts_compare_T = bits(divisorFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_finalGuess_firstStep_partialProducts_compare = mux(_quotient_finalGuess_firstStep_partialProducts_compare_T, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_finalGuess_firstStep_partialProducts_T = and(_quotient_finalGuess_T, quotient_finalGuess_firstStep_partialProducts_compare) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_finalGuess_firstStep_partialProducts_0 = shl(_quotient_finalGuess_firstStep_partialProducts_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_finalGuess_firstStep_partialProducts_compare_T_1 = bits(divisorFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_finalGuess_firstStep_partialProducts_compare_1 = mux(_quotient_finalGuess_firstStep_partialProducts_compare_T_1, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_finalGuess_firstStep_partialProducts_T_1 = and(_quotient_finalGuess_T, quotient_finalGuess_firstStep_partialProducts_compare_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_finalGuess_firstStep_partialProducts_1 = shl(_quotient_finalGuess_firstStep_partialProducts_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_finalGuess_firstStep_partialProducts_compare_T_2 = bits(divisorFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_finalGuess_firstStep_partialProducts_compare_2 = mux(_quotient_finalGuess_firstStep_partialProducts_compare_T_2, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_finalGuess_firstStep_partialProducts_T_2 = and(_quotient_finalGuess_T, quotient_finalGuess_firstStep_partialProducts_compare_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_finalGuess_firstStep_partialProducts_2 = shl(_quotient_finalGuess_firstStep_partialProducts_T_2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_finalGuess_firstStep_partialSums_T = add(quotient_finalGuess_firstStep_partialProducts_0, quotient_finalGuess_firstStep_partialProducts_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:34]
    node quotient_finalGuess_firstStep = add(_quotient_finalGuess_firstStep_partialSums_T, quotient_finalGuess_firstStep_partialProducts_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:39]
    node _quotient_finalGuess_firstStepRnd_T = bits(quotient_finalGuess_firstStep, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 221:46]
    node _quotient_finalGuess_firstStepRnd_roundedValue_T = bits(_quotient_finalGuess_firstStepRnd_T, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 76:23]
    node quotient_finalGuess_firstStepRnd = cat(UInt<1>("h0"), _quotient_finalGuess_firstStepRnd_roundedValue_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 76:12]
    node _quotient_finalGuess_secondStep_T = bits(quotient_finalGuess_firstStepRnd, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 225:38]
    node _quotient_finalGuess_secondStep_T_1 = not(_quotient_finalGuess_secondStep_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 225:25]
    node _quotient_finalGuess_secondStep_T_2 = add(_quotient_finalGuess_secondStep_T_1, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 225:70]
    node quotient_finalGuess_secondStep = tail(_quotient_finalGuess_secondStep_T_2, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 225:70]
    node _quotient_finalGuess_finalStep_partialProducts_compare_T = bits(quotient_finalGuess_secondStep, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_finalGuess_finalStep_partialProducts_compare = mux(_quotient_finalGuess_finalStep_partialProducts_compare_T, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_finalGuess_finalStep_partialProducts_T = and(_quotient_finalGuess_T, quotient_finalGuess_finalStep_partialProducts_compare) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_finalGuess_finalStep_partialProducts_0 = shl(_quotient_finalGuess_finalStep_partialProducts_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_finalGuess_finalStep_partialProducts_compare_T_1 = bits(quotient_finalGuess_secondStep, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_finalGuess_finalStep_partialProducts_compare_1 = mux(_quotient_finalGuess_finalStep_partialProducts_compare_T_1, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_finalGuess_finalStep_partialProducts_T_1 = and(_quotient_finalGuess_T, quotient_finalGuess_finalStep_partialProducts_compare_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_finalGuess_finalStep_partialProducts_1 = shl(_quotient_finalGuess_finalStep_partialProducts_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_finalGuess_finalStep_partialProducts_compare_T_2 = bits(quotient_finalGuess_secondStep, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_finalGuess_finalStep_partialProducts_compare_2 = mux(_quotient_finalGuess_finalStep_partialProducts_compare_T_2, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_finalGuess_finalStep_partialProducts_T_2 = and(_quotient_finalGuess_T, quotient_finalGuess_finalStep_partialProducts_compare_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_finalGuess_finalStep_partialProducts_2 = shl(_quotient_finalGuess_finalStep_partialProducts_T_2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_finalGuess_finalStep_partialProducts_compare_T_3 = bits(quotient_finalGuess_secondStep, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_finalGuess_finalStep_partialProducts_compare_3 = mux(_quotient_finalGuess_finalStep_partialProducts_compare_T_3, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_finalGuess_finalStep_partialProducts_T_3 = and(_quotient_finalGuess_T, quotient_finalGuess_finalStep_partialProducts_compare_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_finalGuess_finalStep_partialProducts_3 = shl(_quotient_finalGuess_finalStep_partialProducts_T_3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_finalGuess_finalStep_partialProducts_compare_T_4 = bits(quotient_finalGuess_secondStep, 4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_finalGuess_finalStep_partialProducts_compare_4 = mux(_quotient_finalGuess_finalStep_partialProducts_compare_T_4, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_finalGuess_finalStep_partialProducts_T_4 = and(_quotient_finalGuess_T, quotient_finalGuess_finalStep_partialProducts_compare_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_finalGuess_finalStep_partialProducts_4 = shl(_quotient_finalGuess_finalStep_partialProducts_T_4, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_finalGuess_finalStep_partialSums_T = add(quotient_finalGuess_finalStep_partialProducts_0, quotient_finalGuess_finalStep_partialProducts_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:34]
    node quotient_finalGuess_finalStep_partialSums_0 = add(_quotient_finalGuess_finalStep_partialSums_T, quotient_finalGuess_finalStep_partialProducts_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:39]
    node quotient_finalGuess_finalStep_partialSums_1 = add(quotient_finalGuess_finalStep_partialProducts_3, quotient_finalGuess_finalStep_partialProducts_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 110:31]
    node _quotient_finalGuess_finalStep_T = add(quotient_finalGuess_finalStep_partialSums_0, quotient_finalGuess_finalStep_partialSums_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 106:15]
    node quotient_finalGuess_finalStep = bits(_quotient_finalGuess_finalStep_T, 9, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 230:27 231:17]
    node _quotient_finalGuess_res_T = bits(quotient_finalGuess_finalStep, 8, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 234:37]
    node _quotient_finalGuess_res_roundedValue_T = bits(_quotient_finalGuess_res_T, 8, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:14]
    node _quotient_finalGuess_res_roundedValue_T_1 = bits(_quotient_finalGuess_res_T, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:44]
    node _quotient_finalGuess_res_roundedValue_T_2 = bits(_quotient_finalGuess_res_T, 2, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:66]
    node _quotient_finalGuess_res_roundedValue_T_3 = orr(_quotient_finalGuess_res_roundedValue_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:95]
    node _quotient_finalGuess_res_roundedValue_T_4 = and(_quotient_finalGuess_res_roundedValue_T_1, _quotient_finalGuess_res_roundedValue_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:59]
    node quotient_finalGuess = add(_quotient_finalGuess_res_roundedValue_T, _quotient_finalGuess_res_roundedValue_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 74:35]
    node _quotient_T = bits(quotient_finalGuess, 4, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 246:24]
    node dividendFraction = bits(_shiftedValue_T, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:28 62:18]
    node _quotient_partialProducts_compare_T = bits(dividendFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_partialProducts_compare = mux(_quotient_partialProducts_compare_T, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_partialProducts_T = and(_quotient_T, quotient_partialProducts_compare) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_partialProducts_0 = shl(_quotient_partialProducts_T, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_partialProducts_compare_T_1 = bits(dividendFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_partialProducts_compare_1 = mux(_quotient_partialProducts_compare_T_1, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_partialProducts_T_1 = and(_quotient_T, quotient_partialProducts_compare_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_partialProducts_1 = shl(_quotient_partialProducts_T_1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_partialProducts_compare_T_2 = bits(dividendFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:26]
    node quotient_partialProducts_compare_2 = mux(_quotient_partialProducts_compare_T_2, UInt<5>("h1f"), UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 98:24]
    node _quotient_partialProducts_T_2 = and(_quotient_T, quotient_partialProducts_compare_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:11]
    node quotient_partialProducts_2 = shl(_quotient_partialProducts_T_2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 99:22]
    node _quotient_partialSums_T = add(quotient_partialProducts_0, quotient_partialProducts_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:34]
    node quotient = add(_quotient_partialSums_T, quotient_partialProducts_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 109:39]
    node _T = bits(quotient, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 359:64]
    node _leadingZeros_T_22 = bits(_T, 3, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_23 = bits(_leadingZeros_T_22, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_24 = bits(_leadingZeros_T_23, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_25 = bits(_leadingZeros_T_23, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_26 = cat(_leadingZeros_T_24, _leadingZeros_T_25) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_27 = bits(_leadingZeros_T_22, 3, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_28 = bits(_leadingZeros_T_27, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_29 = bits(_leadingZeros_T_27, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_30 = cat(_leadingZeros_T_28, _leadingZeros_T_29) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_31 = cat(_leadingZeros_T_26, _leadingZeros_T_30) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_32 = bits(_T, 6, 4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_33 = bits(_leadingZeros_T_32, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_34 = bits(_leadingZeros_T_33, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_35 = bits(_leadingZeros_T_33, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_36 = cat(_leadingZeros_T_34, _leadingZeros_T_35) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_37 = bits(_leadingZeros_T_32, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_38 = cat(_leadingZeros_T_36, _leadingZeros_T_37) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_39 = cat(_leadingZeros_T_31, _leadingZeros_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 60:44]
    node _leadingZeros_T_40 = bits(_leadingZeros_T_39, 0, 0) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_41 = bits(_leadingZeros_T_39, 1, 1) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_42 = bits(_leadingZeros_T_39, 2, 2) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_43 = bits(_leadingZeros_T_39, 3, 3) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_44 = bits(_leadingZeros_T_39, 4, 4) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_45 = bits(_leadingZeros_T_39, 5, 5) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_46 = bits(_leadingZeros_T_39, 6, 6) @[src/main/scala/chisel3/util/OneHot.scala 48:45]
    node _leadingZeros_T_47 = mux(_leadingZeros_T_45, UInt<3>("h5"), UInt<3>("h6")) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_48 = mux(_leadingZeros_T_44, UInt<3>("h4"), _leadingZeros_T_47) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_49 = mux(_leadingZeros_T_43, UInt<2>("h3"), _leadingZeros_T_48) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_50 = mux(_leadingZeros_T_42, UInt<2>("h2"), _leadingZeros_T_49) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_51 = mux(_leadingZeros_T_41, UInt<1>("h1"), _leadingZeros_T_50) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node _leadingZeros_T_52 = mux(_leadingZeros_T_40, UInt<1>("h0"), _leadingZeros_T_51) @[src/main/scala/chisel3/util/Mux.scala 50:70]
    node shift = pad(_leadingZeros_T_52, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 57:28 60:18]
    node _shiftedValue_T_2 = dshl(_T, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 62:27]
    node _exponentShiftRight_T = sub(UInt<7>("h0"), exponent_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 361:58]
    node exponentShiftRight = tail(_exponentShiftRight_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 361:58]
    node _exponentShiftLeft_T = sub(exponent_1, UInt<7>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 363:38]
    node exponentShiftLeft = tail(_exponentShiftLeft_T, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 363:38]
    node _T_1 = bits(exponent_1, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 371:19]
    node _T_2 = eq(_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 371:10]
    node _T_3 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 371:52]
    node _T_4 = geq(_T_3, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 371:72]
    node _T_5 = and(_T_2, _T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 371:40]
    node _T_6 = bits(quotient, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 372:25]
    node _T_7 = and(_T_5, _T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 372:7]
    node _T_8 = bits(exponent_1, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 375:25]
    node _T_9 = eq(_T_8, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 375:16]
    node _T_10 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 375:58]
    node _T_11 = lt(_T_10, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 375:78]
    node _T_12 = and(_T_9, _T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 375:46]
    node _T_13 = bits(quotient, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 376:25]
    node _T_14 = and(_T_12, _T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 376:7]
    node _tempExponent_T_7 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 377:31]
    node _tempExponent_T_8 = add(_tempExponent_T_7, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 377:51]
    node _tempExponent_T_9 = tail(_tempExponent_T_8, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 377:51]
    node _tempFraction_T = bits(quotient, 6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 383:26]
    node _T_15 = bits(exponent_1, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 385:25]
    node _T_16 = eq(_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 385:16]
    node _T_17 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 385:58]
    node _T_18 = gt(_T_17, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 385:78]
    node _T_19 = and(_T_16, _T_18) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 385:46]
    node shiftedCalcValue = bits(_shiftedValue_T_2, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 58:28 62:18]
    node _T_20 = bits(shiftedCalcValue, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 386:26]
    node _T_21 = and(_T_19, _T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 386:7]
    node _tempExponent_T_10 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 387:31]
    node _tempExponent_T_11 = sub(_tempExponent_T_10, shift) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 387:51]
    node _tempExponent_T_12 = tail(_tempExponent_T_11, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 387:51]
    node _tempFraction_T_1 = bits(shiftedCalcValue, 6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 393:27]
    node _T_22 = bits(exponent_1, 6, 6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 397:21]
    node _T_23 = eq(_T_22, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 397:12]
    node _T_24 = bits(exponent_1, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 397:54]
    node _T_25 = gt(_T_24, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 397:74]
    node _T_26 = and(_T_23, _T_25) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 397:42]
    node _tempFraction_T_2 = bits(quotient, 6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 403:28]
    node _tempFraction_T_3 = dshl(_tempFraction_T_2, exponentShiftLeft) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 403:83]
    node _tempFraction_T_4 = bits(quotient, 7, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 406:41]
    node _tempFraction_T_5 = bits(quotient, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 407:26]
    node _tempFraction_T_6 = andr(_tempFraction_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 407:125]
    node _tempFraction_T_7 = add(_tempFraction_T_4, _tempFraction_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 406:118]
    node _tempFraction_T_8 = tail(_tempFraction_T_7, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 406:118]
    node _tempFraction_T_9 = dshr(_tempFraction_T_8, exponentShiftRight) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 407:138]
    node _GEN_4 = mux(_T_26, _tempFraction_T_3, _tempFraction_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 397:82 398:22 406:22]
    node _GEN_5 = mux(_T_21, _tempExponent_T_12, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 386:55 387:20 396:20]
    node _GEN_6 = mux(_T_21, _tempFraction_T_1, _GEN_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 386:55 388:20]
    node _GEN_7 = mux(_T_14, _tempExponent_T_9, _GEN_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 376:54 377:20]
    node _GEN_8 = mux(_T_14, _tempFraction_T, _GEN_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 376:54 378:20]
    node _GEN_9 = mux(_T_7, UInt<5>("h1f"), _GEN_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 372:54 373:20]
    node _GEN_10 = mux(_T_7, UInt<7>("h7f"), _GEN_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 372:54 374:20]
    node _addOne_T = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:33]
    node tempFraction = bits(_GEN_10, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 367:28]
    node _addOne_T_1 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:57]
    node _addOne_T_2 = and(_addOne_T, _addOne_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:42]
    node _addOne_T_3 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:77]
    node _addOne_T_4 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:96]
    node _addOne_T_5 = or(_addOne_T_3, _addOne_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:81]
    node _addOne_T_6 = and(_addOne_T_2, _addOne_T_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:61]
    node _addOne_T_7 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:22]
    node _addOne_T_8 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:46]
    node _addOne_T_9 = and(_addOne_T_7, _addOne_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:31]
    node _addOne_T_10 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:66]
    node _addOne_T_11 = eq(_addOne_T_10, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:53]
    node _addOne_T_12 = and(_addOne_T_9, _addOne_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:50]
    node _addOne_T_13 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:86]
    node _addOne_T_14 = eq(_addOne_T_13, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:73]
    node _addOne_T_15 = and(_addOne_T_12, _addOne_T_14) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:70]
    node _addOne_T_16 = bits(tempFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:105]
    node _addOne_T_17 = and(_addOne_T_15, _addOne_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:90]
    node _addOne_T_18 = or(_addOne_T_6, _addOne_T_17) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 250:102]
    node _addOne_T_19 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:22]
    node _addOne_T_20 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:47]
    node _addOne_T_21 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:66]
    node _addOne_T_22 = or(_addOne_T_20, _addOne_T_21) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:51]
    node _addOne_T_23 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:85]
    node _addOne_T_24 = or(_addOne_T_22, _addOne_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:70]
    node _addOne_T_25 = and(_addOne_T_19, _addOne_T_24) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:31]
    node _addOne_T_26 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:98]
    node _addOne_T_27 = and(_addOne_T_25, _addOne_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:90]
    node _addOne_T_28 = or(_addOne_T_18, _addOne_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 251:110]
    node _addOne_T_29 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:22]
    node _addOne_T_30 = bits(tempFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:47]
    node _addOne_T_31 = bits(tempFraction, 1, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:66]
    node _addOne_T_32 = or(_addOne_T_30, _addOne_T_31) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:51]
    node _addOne_T_33 = bits(tempFraction, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:85]
    node _addOne_T_34 = or(_addOne_T_32, _addOne_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:70]
    node _addOne_T_35 = and(_addOne_T_29, _addOne_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:31]
    node _addOne_T_36 = bits(resultSign, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:99]
    node _addOne_T_37 = eq(_addOne_T_36, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:93]
    node _addOne_T_38 = and(_addOne_T_35, _addOne_T_37) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 253:90]
    node addOne = or(_addOne_T_28, _addOne_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 252:106]
    node _roundedFraction_T = bits(tempFraction, 5, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 255:39]
    node roundedFraction = add(_roundedFraction_T, addOne) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 255:66]
    node _finalFraction_T = bits(roundedFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 257:44]
    node _finalFraction_T_1 = eq(_finalFraction_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 257:65]
    node _finalFraction_T_2 = bits(roundedFraction, 3, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 258:22]
    node _finalFraction_T_3 = bits(roundedFraction, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 258:62]
    node resultFraction = mux(_finalFraction_T_1, _finalFraction_T_2, _finalFraction_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 257:28]
    node _finalExponent_T = bits(roundedFraction, 3, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:44]
    node _finalExponent_T_1 = eq(_finalExponent_T, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:65]
    node _finalExponent_T_2 = bits(roundedFraction, 2, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:92]
    node tempExponent_1 = bits(_GEN_9, 5, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 365:28]
    node _finalExponent_T_3 = eq(tempExponent_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:125]
    node _finalExponent_T_4 = and(_finalExponent_T_2, _finalExponent_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:109]
    node _finalExponent_T_5 = or(_finalExponent_T_1, _finalExponent_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:73]
    node _finalExponent_T_6 = add(tempExponent_1, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 261:20]
    node _finalExponent_T_7 = tail(_finalExponent_T_6, 1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 261:20]
    node resultExponent = mux(_finalExponent_T_5, _finalExponent_T_7, tempExponent_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 260:28]
    node _overflow_T = add(UInt<5>("h1f"), UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 265:50]
    node _overflow_T_1 = geq(resultExponent, _overflow_T) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 265:32]
    node _overflow_T_2 = eq(tempExponent_1, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 265:76]
    node resultOverflow = or(_overflow_T_1, _overflow_T_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 265:59]
    node _T_27 = eq(enable, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\Divide.scala 27:15]
    node _GEN_11 = mux(_T_27, resultSign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 27:24 28:10 37:10]
    node _GEN_12 = mux(_T_27, resultExponent, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 27:24 29:14 38:14]
    node _GEN_13 = mux(_T_27, resultFraction, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 27:24 30:14 39:14]
    node _GEN_14 = mux(_T_27, resultOverflow, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 27:24 31:14 40:14]
    node isResultInfty = _isResultInfty_T_40 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 525:{30,30}]
    node _GEN_15 = mux(_T_27, isResultInfty, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 27:24 32:13 41:13]
    node isResult0 = _isResult0_T_40 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 531:{30,30}]
    node _GEN_16 = mux(_T_27, isResult0, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 27:24 33:9 42:9]
    node isResultNaN = _isResultNaN_T_36 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 519:{30,30}]
    node _GEN_17 = mux(_T_27, isResultNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 27:24 34:11 43:11]
    node _GEN_18 = mux(_T_27, resultNaNFractionValue, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Divide.scala 27:24 35:22 44:22]
    sign <= _GEN_11
    exponent <= _GEN_12
    fraction <= _GEN_13
    overflow <= _GEN_14
    isInfty <= _GEN_15
    is0 <= _GEN_16
    isNaN <= _GEN_17
    NaNFractionValue <= _GEN_18

  module Compare :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\Compare.scala 6:18]
    input compareMode : UInt<3> @[\\src\\main\\scala\\fpu8\\Compare.scala 7:23]
    input a_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Compare.scala 8:13]
    input b_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Compare.scala 9:13]
    output z : UInt<8> @[\\src\\main\\scala\\fpu8\\Compare.scala 10:13]

    node _T = eq(enable, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\Compare.scala 12:15]
    node _T_1 = eq(compareMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Compare.scala 13:22]
    node _z_isResultNaN_T = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_1 = eq(_z_isResultNaN_T, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_2 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_3 = eq(_z_isResultNaN_T_2, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_isResultNaN_T_4 = and(_z_isResultNaN_T_1, _z_isResultNaN_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_isResultNaN_T_5 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_6 = eq(_z_isResultNaN_T_5, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_7 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_8 = eq(_z_isResultNaN_T_7, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_isResultNaN_T_9 = and(_z_isResultNaN_T_6, _z_isResultNaN_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_isResultNaN = or(_z_isResultNaN_T_4, _z_isResultNaN_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 558:34]
    node z_result_hi = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 564:17]
    node _z_result_T = cat(z_result_hi, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 564:17]
    node _z_T = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_1 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_2 = gt(_z_T, _z_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:26]
    node _z_T_3 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_4 = eq(_z_T_3, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:53]
    node _z_T_5 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:62]
    node _z_T_6 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:81]
    node _z_T_7 = gt(_z_T_5, _z_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:69]
    node _z_T_8 = and(_z_T_4, _z_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:61]
    node _z_T_9 = or(_z_T_2, _z_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:39]
    node _z_T_10 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_11 = eq(_z_T_10, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:102]
    node _z_T_12 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:62]
    node _z_T_13 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:81]
    node _z_T_14 = gt(_z_T_12, _z_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:69]
    node _z_T_15 = eq(_z_T_14, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:113]
    node _z_T_16 = and(_z_T_11, _z_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:110]
    node _z_T_17 = or(_z_T_9, _z_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:88]
    node z_result_hi_1 = cat(UInt<1>("h0"), UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 568:20]
    node _z_result_T_1 = cat(z_result_hi_1, UInt<3>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 568:20]
    node _GEN_0 = mux(_z_T_17, _z_result_T_1, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:138 568:14 570:14]
    node _GEN_1 = mux(z_isResultNaN, _z_result_T, _GEN_0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 561:22 562:14]
    node _T_2 = eq(compareMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\Compare.scala 15:28]
    node _z_isResultNaN_T_10 = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_11 = eq(_z_isResultNaN_T_10, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_12 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_13 = eq(_z_isResultNaN_T_12, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_isResultNaN_T_14 = and(_z_isResultNaN_T_11, _z_isResultNaN_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_isResultNaN_T_15 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_16 = eq(_z_isResultNaN_T_15, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_17 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_18 = eq(_z_isResultNaN_T_17, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_isResultNaN_T_19 = and(_z_isResultNaN_T_16, _z_isResultNaN_T_18) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_isResultNaN_1 = or(_z_isResultNaN_T_14, _z_isResultNaN_T_19) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 578:34]
    node z_result_hi_2 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 584:17]
    node _z_result_T_2 = cat(z_result_hi_2, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 584:17]
    node _z_T_18 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_19 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_20 = lt(_z_T_18, _z_T_19) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:26]
    node _z_T_21 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_22 = eq(_z_T_21, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:53]
    node _z_T_23 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:62]
    node _z_T_24 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:81]
    node _z_T_25 = gt(_z_T_23, _z_T_24) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:69]
    node _z_T_26 = eq(_z_T_25, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:64]
    node _z_T_27 = and(_z_T_22, _z_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:61]
    node _z_T_28 = or(_z_T_20, _z_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:39]
    node _z_T_29 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_30 = eq(_z_T_29, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:103]
    node _z_T_31 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:62]
    node _z_T_32 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:81]
    node _z_T_33 = gt(_z_T_31, _z_T_32) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:69]
    node _z_T_34 = and(_z_T_30, _z_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:111]
    node _z_T_35 = or(_z_T_28, _z_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:89]
    node z_result_hi_3 = cat(UInt<1>("h0"), UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 588:20]
    node _z_result_T_3 = cat(z_result_hi_3, UInt<3>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 588:20]
    node _GEN_2 = mux(_z_T_35, _z_result_T_3, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:139 588:14 590:14]
    node _GEN_3 = mux(z_isResultNaN_1, _z_result_T_2, _GEN_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 581:22 582:14]
    node _T_3 = eq(compareMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\Compare.scala 17:28]
    node _z_isResultNaN_T_20 = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_21 = eq(_z_isResultNaN_T_20, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_22 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_23 = eq(_z_isResultNaN_T_22, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_isResultNaN_T_24 = and(_z_isResultNaN_T_21, _z_isResultNaN_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_isResultNaN_T_25 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_26 = eq(_z_isResultNaN_T_25, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_27 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_28 = eq(_z_isResultNaN_T_27, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_isResultNaN_T_29 = and(_z_isResultNaN_T_26, _z_isResultNaN_T_28) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_isResultNaN_2 = or(_z_isResultNaN_T_24, _z_isResultNaN_T_29) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 598:34]
    node z_result_hi_4 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 604:17]
    node _z_result_T_4 = cat(z_result_hi_4, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 604:17]
    node _z_T_36 = eq(a_data, b_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 606:26]
    node z_result_hi_5 = cat(UInt<1>("h0"), UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 608:20]
    node _z_result_T_5 = cat(z_result_hi_5, UInt<3>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 608:20]
    node _GEN_4 = mux(_z_T_36, _z_result_T_5, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 606:42 608:14 610:14]
    node _GEN_5 = mux(z_isResultNaN_2, _z_result_T_4, _GEN_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 601:23 602:14]
    node _T_4 = eq(compareMode, UInt<2>("h3")) @[\\src\\main\\scala\\fpu8\\Compare.scala 19:28]
    node _z_isResultNaN_T_30 = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_31 = eq(_z_isResultNaN_T_30, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_32 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_33 = eq(_z_isResultNaN_T_32, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_isResultNaN_T_34 = and(_z_isResultNaN_T_31, _z_isResultNaN_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_isResultNaN_T_35 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_36 = eq(_z_isResultNaN_T_35, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_37 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_38 = eq(_z_isResultNaN_T_37, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_isResultNaN_T_39 = and(_z_isResultNaN_T_36, _z_isResultNaN_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_isResultNaN_3 = or(_z_isResultNaN_T_34, _z_isResultNaN_T_39) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 618:34]
    node z_result_hi_6 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 624:17]
    node _z_result_T_6 = cat(z_result_hi_6, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 624:17]
    node _z_result_isResultNaN_T = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_1 = eq(_z_result_isResultNaN_T, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_result_isResultNaN_T_2 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_3 = eq(_z_result_isResultNaN_T_2, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_result_isResultNaN_T_4 = and(_z_result_isResultNaN_T_1, _z_result_isResultNaN_T_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_result_isResultNaN_T_5 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_6 = eq(_z_result_isResultNaN_T_5, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_result_isResultNaN_T_7 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_8 = eq(_z_result_isResultNaN_T_7, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_result_isResultNaN_T_9 = and(_z_result_isResultNaN_T_6, _z_result_isResultNaN_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_result_isResultNaN = or(_z_result_isResultNaN_T_4, _z_result_isResultNaN_T_9) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 558:34]
    node z_result_result_hi = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 564:17]
    node _z_result_result_T = cat(z_result_result_hi, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 564:17]
    node _z_result_T_7 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_8 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_9 = gt(_z_result_T_7, _z_result_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:26]
    node _z_result_T_10 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_11 = eq(_z_result_T_10, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:53]
    node _z_result_T_12 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:62]
    node _z_result_T_13 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:81]
    node _z_result_T_14 = gt(_z_result_T_12, _z_result_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:69]
    node _z_result_T_15 = and(_z_result_T_11, _z_result_T_14) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:61]
    node _z_result_T_16 = or(_z_result_T_9, _z_result_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:39]
    node _z_result_T_17 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_18 = eq(_z_result_T_17, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:102]
    node _z_result_T_19 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:62]
    node _z_result_T_20 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:81]
    node _z_result_T_21 = gt(_z_result_T_19, _z_result_T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:69]
    node _z_result_T_22 = eq(_z_result_T_21, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:113]
    node _z_result_T_23 = and(_z_result_T_18, _z_result_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:110]
    node _z_result_T_24 = or(_z_result_T_16, _z_result_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:88]
    node z_result_result_hi_1 = cat(UInt<1>("h0"), UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 568:20]
    node _z_result_result_T_1 = cat(z_result_result_hi_1, UInt<3>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 568:20]
    node _GEN_6 = mux(_z_result_T_24, _z_result_result_T_1, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:138 568:14 570:14]
    node _GEN_7 = mux(z_result_isResultNaN, _z_result_result_T, _GEN_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 561:22 562:14]
    node _z_result_isResultNaN_T_10 = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_11 = eq(_z_result_isResultNaN_T_10, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_result_isResultNaN_T_12 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_13 = eq(_z_result_isResultNaN_T_12, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_result_isResultNaN_T_14 = and(_z_result_isResultNaN_T_11, _z_result_isResultNaN_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_result_isResultNaN_T_15 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_16 = eq(_z_result_isResultNaN_T_15, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_result_isResultNaN_T_17 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_18 = eq(_z_result_isResultNaN_T_17, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_result_isResultNaN_T_19 = and(_z_result_isResultNaN_T_16, _z_result_isResultNaN_T_18) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_result_isResultNaN_1 = or(_z_result_isResultNaN_T_14, _z_result_isResultNaN_T_19) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 598:34]
    node z_result_result_hi_2 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 604:17]
    node _z_result_result_T_2 = cat(z_result_result_hi_2, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 604:17]
    node _z_result_T_25 = eq(a_data, b_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 606:26]
    node z_result_result_hi_3 = cat(UInt<1>("h0"), UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 608:20]
    node _z_result_result_T_3 = cat(z_result_result_hi_3, UInt<3>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 608:20]
    node _GEN_8 = mux(_z_result_T_25, _z_result_result_T_3, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 606:42 608:14 610:14]
    node _GEN_9 = mux(z_result_isResultNaN_1, _z_result_result_T_2, _GEN_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 601:23 602:14]
    node z_result_result = _GEN_7 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 556:22]
    node z_result_result_1 = _GEN_9 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 596:22]
    node _z_result_T_26 = xor(z_result_result, z_result_result_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 627:32]
    node _GEN_10 = mux(z_isResultNaN_3, _z_result_T_6, _z_result_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 621:23 622:14 627:14]
    node _T_5 = eq(compareMode, UInt<3>("h4")) @[\\src\\main\\scala\\fpu8\\Compare.scala 21:28]
    node _z_isResultNaN_T_40 = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_41 = eq(_z_isResultNaN_T_40, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_42 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_43 = eq(_z_isResultNaN_T_42, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_isResultNaN_T_44 = and(_z_isResultNaN_T_41, _z_isResultNaN_T_43) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_isResultNaN_T_45 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_46 = eq(_z_isResultNaN_T_45, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_47 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_48 = eq(_z_isResultNaN_T_47, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_isResultNaN_T_49 = and(_z_isResultNaN_T_46, _z_isResultNaN_T_48) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_isResultNaN_4 = or(_z_isResultNaN_T_44, _z_isResultNaN_T_49) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 635:34]
    node z_result_hi_7 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 641:17]
    node _z_result_T_27 = cat(z_result_hi_7, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 641:17]
    node _z_result_isResultNaN_T_20 = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_21 = eq(_z_result_isResultNaN_T_20, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_result_isResultNaN_T_22 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_23 = eq(_z_result_isResultNaN_T_22, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_result_isResultNaN_T_24 = and(_z_result_isResultNaN_T_21, _z_result_isResultNaN_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_result_isResultNaN_T_25 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_26 = eq(_z_result_isResultNaN_T_25, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_result_isResultNaN_T_27 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_28 = eq(_z_result_isResultNaN_T_27, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_result_isResultNaN_T_29 = and(_z_result_isResultNaN_T_26, _z_result_isResultNaN_T_28) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_result_isResultNaN_2 = or(_z_result_isResultNaN_T_24, _z_result_isResultNaN_T_29) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 578:34]
    node z_result_result_hi_4 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 584:17]
    node _z_result_result_T_4 = cat(z_result_result_hi_4, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 584:17]
    node _z_result_T_28 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_29 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_30 = lt(_z_result_T_28, _z_result_T_29) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:26]
    node _z_result_T_31 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_32 = eq(_z_result_T_31, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:53]
    node _z_result_T_33 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:62]
    node _z_result_T_34 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:81]
    node _z_result_T_35 = gt(_z_result_T_33, _z_result_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:69]
    node _z_result_T_36 = eq(_z_result_T_35, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:64]
    node _z_result_T_37 = and(_z_result_T_32, _z_result_T_36) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:61]
    node _z_result_T_38 = or(_z_result_T_30, _z_result_T_37) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:39]
    node _z_result_T_39 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_40 = eq(_z_result_T_39, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:103]
    node _z_result_T_41 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:62]
    node _z_result_T_42 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:81]
    node _z_result_T_43 = gt(_z_result_T_41, _z_result_T_42) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:69]
    node _z_result_T_44 = and(_z_result_T_40, _z_result_T_43) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:111]
    node _z_result_T_45 = or(_z_result_T_38, _z_result_T_44) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:89]
    node z_result_result_hi_5 = cat(UInt<1>("h0"), UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 588:20]
    node _z_result_result_T_5 = cat(z_result_result_hi_5, UInt<3>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 588:20]
    node _GEN_11 = mux(_z_result_T_45, _z_result_result_T_5, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:139 588:14 590:14]
    node _GEN_12 = mux(z_result_isResultNaN_2, _z_result_result_T_4, _GEN_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 581:22 582:14]
    node _z_result_isResultNaN_T_30 = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_31 = eq(_z_result_isResultNaN_T_30, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_result_isResultNaN_T_32 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_33 = eq(_z_result_isResultNaN_T_32, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_result_isResultNaN_T_34 = and(_z_result_isResultNaN_T_31, _z_result_isResultNaN_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_result_isResultNaN_T_35 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_36 = eq(_z_result_isResultNaN_T_35, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_result_isResultNaN_T_37 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_38 = eq(_z_result_isResultNaN_T_37, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_result_isResultNaN_T_39 = and(_z_result_isResultNaN_T_36, _z_result_isResultNaN_T_38) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_result_isResultNaN_3 = or(_z_result_isResultNaN_T_34, _z_result_isResultNaN_T_39) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 598:34]
    node z_result_result_hi_6 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 604:17]
    node _z_result_result_T_6 = cat(z_result_result_hi_6, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 604:17]
    node _z_result_T_46 = eq(a_data, b_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 606:26]
    node z_result_result_hi_7 = cat(UInt<1>("h0"), UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 608:20]
    node _z_result_result_T_7 = cat(z_result_result_hi_7, UInt<3>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 608:20]
    node _GEN_13 = mux(_z_result_T_46, _z_result_result_T_7, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 606:42 608:14 610:14]
    node _GEN_14 = mux(z_result_isResultNaN_3, _z_result_result_T_6, _GEN_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 601:23 602:14]
    node z_result_result_2 = _GEN_12 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 576:22]
    node z_result_result_3 = _GEN_14 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 596:22]
    node _z_result_T_47 = xor(z_result_result_2, z_result_result_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 644:32]
    node _GEN_15 = mux(z_isResultNaN_4, _z_result_T_27, _z_result_T_47) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 638:23 639:14 644:14]
    node _z_isResultNaN_T_50 = bits(a_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_51 = eq(_z_isResultNaN_T_50, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_52 = bits(a_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_53 = eq(_z_isResultNaN_T_52, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_isResultNaN_T_54 = and(_z_isResultNaN_T_51, _z_isResultNaN_T_53) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_isResultNaN_T_55 = bits(b_data, 6, 3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_56 = eq(_z_isResultNaN_T_55, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_57 = bits(b_data, 2, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_58 = eq(_z_isResultNaN_T_57, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 39:38]
    node _z_isResultNaN_T_59 = and(_z_isResultNaN_T_56, _z_isResultNaN_T_58) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_isResultNaN_5 = or(_z_isResultNaN_T_54, _z_isResultNaN_T_59) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 652:34]
    node z_result_hi_8 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 658:17]
    node _z_result_T_48 = cat(z_result_hi_8, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 658:17]
    node _z_T_37 = neq(a_data, b_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 660:26]
    node z_result_hi_9 = cat(UInt<1>("h0"), UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 662:20]
    node _z_result_T_49 = cat(z_result_hi_9, UInt<3>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 662:20]
    node _GEN_16 = mux(_z_T_37, _z_result_T_49, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 660:42 662:14 664:14]
    node _GEN_17 = mux(z_isResultNaN_5, _z_result_T_48, _GEN_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 655:23 656:14]
    node z_result_4 = _GEN_15 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 633:22]
    node z_result_5 = _GEN_17 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 650:22]
    node _GEN_18 = mux(_T_5, z_result_4, z_result_5) @[\\src\\main\\scala\\fpu8\\Compare.scala 21:37 22:9 24:9]
    node z_result_3 = _GEN_10 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 616:22]
    node _GEN_19 = mux(_T_4, z_result_3, _GEN_18) @[\\src\\main\\scala\\fpu8\\Compare.scala 19:37 20:9]
    node z_result_2 = _GEN_5 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 596:22]
    node _GEN_20 = mux(_T_3, z_result_2, _GEN_19) @[\\src\\main\\scala\\fpu8\\Compare.scala 17:37 18:9]
    node z_result_1 = _GEN_3 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 576:22]
    node _GEN_21 = mux(_T_2, z_result_1, _GEN_20) @[\\src\\main\\scala\\fpu8\\Compare.scala 15:37 16:9]
    node z_result = _GEN_1 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 556:22]
    node _GEN_22 = mux(_T_1, z_result, _GEN_21) @[\\src\\main\\scala\\fpu8\\Compare.scala 13:31 14:9]
    node _GEN_23 = mux(_T, _GEN_22, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Compare.scala 12:23 27:6]
    z <= _GEN_23

  module Compare_1 :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\Compare.scala 6:18]
    input compareMode : UInt<3> @[\\src\\main\\scala\\fpu8\\Compare.scala 7:23]
    input a_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Compare.scala 8:13]
    input b_data : UInt<8> @[\\src\\main\\scala\\fpu8\\Compare.scala 9:13]
    output z : UInt<8> @[\\src\\main\\scala\\fpu8\\Compare.scala 10:13]

    node _T = eq(enable, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\Compare.scala 12:15]
    node _T_1 = eq(compareMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Compare.scala 13:22]
    node _z_isResultNaN_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_1 = eq(_z_isResultNaN_T, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_3 = eq(_z_isResultNaN_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_isResultNaN_T_4 = eq(_z_isResultNaN_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_isResultNaN_T_5 = and(_z_isResultNaN_T_1, _z_isResultNaN_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_isResultNaN_T_6 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_7 = eq(_z_isResultNaN_T_6, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_8 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_9 = eq(_z_isResultNaN_T_8, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_isResultNaN_T_10 = eq(_z_isResultNaN_T_9, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_isResultNaN_T_11 = and(_z_isResultNaN_T_7, _z_isResultNaN_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_isResultNaN = or(_z_isResultNaN_T_5, _z_isResultNaN_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 558:34]
    node _z_resultNaNFractionValue_T = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_1 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_2 = gt(_z_resultNaNFractionValue_T, _z_resultNaNFractionValue_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:33]
    node _z_resultNaNFractionValue_T_3 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_4 = bits(_z_resultNaNFractionValue_T_3, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:64]
    node _z_resultNaNFractionValue_T_5 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_6 = bits(_z_resultNaNFractionValue_T_5, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:83]
    node z_resultNaNFractionValue = mux(_z_resultNaNFractionValue_T_2, _z_resultNaNFractionValue_T_4, _z_resultNaNFractionValue_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:18]
    node z_result_lo = cat(UInt<1>("h1"), z_resultNaNFractionValue) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 563:22]
    node z_result_hi = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 563:22]
    node _z_result_T = cat(z_result_hi, z_result_lo) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 563:22]
    node _z_T = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_1 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_2 = gt(_z_T, _z_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:26]
    node _z_T_3 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_4 = eq(_z_T_3, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:53]
    node _z_T_5 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:62]
    node _z_T_6 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:81]
    node _z_T_7 = gt(_z_T_5, _z_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:69]
    node _z_T_8 = and(_z_T_4, _z_T_7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:61]
    node _z_T_9 = or(_z_T_2, _z_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:39]
    node _z_T_10 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_11 = eq(_z_T_10, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:102]
    node _z_T_12 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:62]
    node _z_T_13 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:81]
    node _z_T_14 = gt(_z_T_12, _z_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:69]
    node _z_T_15 = eq(_z_T_14, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:113]
    node _z_T_16 = and(_z_T_11, _z_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:110]
    node _z_T_17 = or(_z_T_9, _z_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:88]
    node z_result_hi_1 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 568:20]
    node _z_result_T_1 = cat(z_result_hi_1, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 568:20]
    node _GEN_0 = mux(_z_T_17, _z_result_T_1, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:138 568:14 570:14]
    node _GEN_1 = mux(z_isResultNaN, _z_result_T, _GEN_0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 561:22 562:14]
    node _T_2 = eq(compareMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\Compare.scala 15:28]
    node _z_isResultNaN_T_12 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_13 = eq(_z_isResultNaN_T_12, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_14 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_15 = eq(_z_isResultNaN_T_14, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_isResultNaN_T_16 = eq(_z_isResultNaN_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_isResultNaN_T_17 = and(_z_isResultNaN_T_13, _z_isResultNaN_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_isResultNaN_T_18 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_19 = eq(_z_isResultNaN_T_18, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_20 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_21 = eq(_z_isResultNaN_T_20, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_isResultNaN_T_22 = eq(_z_isResultNaN_T_21, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_isResultNaN_T_23 = and(_z_isResultNaN_T_19, _z_isResultNaN_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_isResultNaN_1 = or(_z_isResultNaN_T_17, _z_isResultNaN_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 578:34]
    node _z_resultNaNFractionValue_T_7 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_8 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_9 = gt(_z_resultNaNFractionValue_T_7, _z_resultNaNFractionValue_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:33]
    node _z_resultNaNFractionValue_T_10 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_11 = bits(_z_resultNaNFractionValue_T_10, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:64]
    node _z_resultNaNFractionValue_T_12 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_13 = bits(_z_resultNaNFractionValue_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:83]
    node z_resultNaNFractionValue_1 = mux(_z_resultNaNFractionValue_T_9, _z_resultNaNFractionValue_T_11, _z_resultNaNFractionValue_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:18]
    node z_result_lo_1 = cat(UInt<1>("h1"), z_resultNaNFractionValue_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 583:22]
    node z_result_hi_2 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 583:22]
    node _z_result_T_2 = cat(z_result_hi_2, z_result_lo_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 583:22]
    node _z_T_18 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_19 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_20 = lt(_z_T_18, _z_T_19) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:26]
    node _z_T_21 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_22 = eq(_z_T_21, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:53]
    node _z_T_23 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:62]
    node _z_T_24 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:81]
    node _z_T_25 = gt(_z_T_23, _z_T_24) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:69]
    node _z_T_26 = eq(_z_T_25, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:64]
    node _z_T_27 = and(_z_T_22, _z_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:61]
    node _z_T_28 = or(_z_T_20, _z_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:39]
    node _z_T_29 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_T_30 = eq(_z_T_29, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:103]
    node _z_T_31 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:62]
    node _z_T_32 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:81]
    node _z_T_33 = gt(_z_T_31, _z_T_32) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:69]
    node _z_T_34 = and(_z_T_30, _z_T_33) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:111]
    node _z_T_35 = or(_z_T_28, _z_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:89]
    node z_result_hi_3 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 588:20]
    node _z_result_T_3 = cat(z_result_hi_3, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 588:20]
    node _GEN_2 = mux(_z_T_35, _z_result_T_3, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:139 588:14 590:14]
    node _GEN_3 = mux(z_isResultNaN_1, _z_result_T_2, _GEN_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 581:22 582:14]
    node _T_3 = eq(compareMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\Compare.scala 17:28]
    node _z_isResultNaN_T_24 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_25 = eq(_z_isResultNaN_T_24, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_26 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_27 = eq(_z_isResultNaN_T_26, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_isResultNaN_T_28 = eq(_z_isResultNaN_T_27, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_isResultNaN_T_29 = and(_z_isResultNaN_T_25, _z_isResultNaN_T_28) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_isResultNaN_T_30 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_31 = eq(_z_isResultNaN_T_30, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_32 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_33 = eq(_z_isResultNaN_T_32, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_isResultNaN_T_34 = eq(_z_isResultNaN_T_33, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_isResultNaN_T_35 = and(_z_isResultNaN_T_31, _z_isResultNaN_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_isResultNaN_2 = or(_z_isResultNaN_T_29, _z_isResultNaN_T_35) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 598:34]
    node _z_resultNaNFractionValue_T_14 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_15 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_16 = gt(_z_resultNaNFractionValue_T_14, _z_resultNaNFractionValue_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:33]
    node _z_resultNaNFractionValue_T_17 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_18 = bits(_z_resultNaNFractionValue_T_17, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:64]
    node _z_resultNaNFractionValue_T_19 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_20 = bits(_z_resultNaNFractionValue_T_19, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:83]
    node z_resultNaNFractionValue_2 = mux(_z_resultNaNFractionValue_T_16, _z_resultNaNFractionValue_T_18, _z_resultNaNFractionValue_T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:18]
    node z_result_lo_2 = cat(UInt<1>("h1"), z_resultNaNFractionValue_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 603:22]
    node z_result_hi_4 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 603:22]
    node _z_result_T_4 = cat(z_result_hi_4, z_result_lo_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 603:22]
    node _z_T_36 = eq(a_data, b_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 606:26]
    node z_result_hi_5 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 608:20]
    node _z_result_T_5 = cat(z_result_hi_5, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 608:20]
    node _GEN_4 = mux(_z_T_36, _z_result_T_5, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 606:42 608:14 610:14]
    node _GEN_5 = mux(z_isResultNaN_2, _z_result_T_4, _GEN_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 601:23 602:14]
    node _T_4 = eq(compareMode, UInt<2>("h3")) @[\\src\\main\\scala\\fpu8\\Compare.scala 19:28]
    node _z_isResultNaN_T_36 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_37 = eq(_z_isResultNaN_T_36, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_38 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_39 = eq(_z_isResultNaN_T_38, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_isResultNaN_T_40 = eq(_z_isResultNaN_T_39, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_isResultNaN_T_41 = and(_z_isResultNaN_T_37, _z_isResultNaN_T_40) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_isResultNaN_T_42 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_43 = eq(_z_isResultNaN_T_42, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_44 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_45 = eq(_z_isResultNaN_T_44, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_isResultNaN_T_46 = eq(_z_isResultNaN_T_45, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_isResultNaN_T_47 = and(_z_isResultNaN_T_43, _z_isResultNaN_T_46) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_isResultNaN_3 = or(_z_isResultNaN_T_41, _z_isResultNaN_T_47) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 618:34]
    node _z_resultNaNFractionValue_T_21 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_22 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_23 = gt(_z_resultNaNFractionValue_T_21, _z_resultNaNFractionValue_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:33]
    node _z_resultNaNFractionValue_T_24 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_25 = bits(_z_resultNaNFractionValue_T_24, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:64]
    node _z_resultNaNFractionValue_T_26 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_27 = bits(_z_resultNaNFractionValue_T_26, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:83]
    node z_resultNaNFractionValue_3 = mux(_z_resultNaNFractionValue_T_23, _z_resultNaNFractionValue_T_25, _z_resultNaNFractionValue_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:18]
    node z_result_lo_3 = cat(UInt<1>("h1"), z_resultNaNFractionValue_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 623:22]
    node z_result_hi_6 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 623:22]
    node _z_result_T_6 = cat(z_result_hi_6, z_result_lo_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 623:22]
    node _z_result_isResultNaN_T = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_1 = eq(_z_result_isResultNaN_T, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_result_isResultNaN_T_2 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_3 = eq(_z_result_isResultNaN_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_result_isResultNaN_T_4 = eq(_z_result_isResultNaN_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_result_isResultNaN_T_5 = and(_z_result_isResultNaN_T_1, _z_result_isResultNaN_T_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_result_isResultNaN_T_6 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_7 = eq(_z_result_isResultNaN_T_6, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_result_isResultNaN_T_8 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_9 = eq(_z_result_isResultNaN_T_8, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_result_isResultNaN_T_10 = eq(_z_result_isResultNaN_T_9, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_result_isResultNaN_T_11 = and(_z_result_isResultNaN_T_7, _z_result_isResultNaN_T_10) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_result_isResultNaN = or(_z_result_isResultNaN_T_5, _z_result_isResultNaN_T_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 558:34]
    node _z_result_resultNaNFractionValue_T = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_1 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_2 = gt(_z_result_resultNaNFractionValue_T, _z_result_resultNaNFractionValue_T_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:33]
    node _z_result_resultNaNFractionValue_T_3 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_4 = bits(_z_result_resultNaNFractionValue_T_3, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:64]
    node _z_result_resultNaNFractionValue_T_5 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_6 = bits(_z_result_resultNaNFractionValue_T_5, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:83]
    node z_result_resultNaNFractionValue = mux(_z_result_resultNaNFractionValue_T_2, _z_result_resultNaNFractionValue_T_4, _z_result_resultNaNFractionValue_T_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:18]
    node z_result_result_lo = cat(UInt<1>("h1"), z_result_resultNaNFractionValue) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 563:22]
    node z_result_result_hi = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 563:22]
    node _z_result_result_T = cat(z_result_result_hi, z_result_result_lo) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 563:22]
    node _z_result_T_7 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_8 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_9 = gt(_z_result_T_7, _z_result_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:26]
    node _z_result_T_10 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_11 = eq(_z_result_T_10, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:53]
    node _z_result_T_12 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:62]
    node _z_result_T_13 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:81]
    node _z_result_T_14 = gt(_z_result_T_12, _z_result_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:69]
    node _z_result_T_15 = and(_z_result_T_11, _z_result_T_14) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:61]
    node _z_result_T_16 = or(_z_result_T_9, _z_result_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:39]
    node _z_result_T_17 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_18 = eq(_z_result_T_17, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:102]
    node _z_result_T_19 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:62]
    node _z_result_T_20 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:81]
    node _z_result_T_21 = gt(_z_result_T_19, _z_result_T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:69]
    node _z_result_T_22 = eq(_z_result_T_21, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:113]
    node _z_result_T_23 = and(_z_result_T_18, _z_result_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:110]
    node _z_result_T_24 = or(_z_result_T_16, _z_result_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:88]
    node z_result_result_hi_1 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 568:20]
    node _z_result_result_T_1 = cat(z_result_result_hi_1, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 568:20]
    node _GEN_6 = mux(_z_result_T_24, _z_result_result_T_1, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 566:138 568:14 570:14]
    node _GEN_7 = mux(z_result_isResultNaN, _z_result_result_T, _GEN_6) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 561:22 562:14]
    node _z_result_isResultNaN_T_12 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_13 = eq(_z_result_isResultNaN_T_12, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_result_isResultNaN_T_14 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_15 = eq(_z_result_isResultNaN_T_14, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_result_isResultNaN_T_16 = eq(_z_result_isResultNaN_T_15, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_result_isResultNaN_T_17 = and(_z_result_isResultNaN_T_13, _z_result_isResultNaN_T_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_result_isResultNaN_T_18 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_19 = eq(_z_result_isResultNaN_T_18, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_result_isResultNaN_T_20 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_21 = eq(_z_result_isResultNaN_T_20, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_result_isResultNaN_T_22 = eq(_z_result_isResultNaN_T_21, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_result_isResultNaN_T_23 = and(_z_result_isResultNaN_T_19, _z_result_isResultNaN_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_result_isResultNaN_1 = or(_z_result_isResultNaN_T_17, _z_result_isResultNaN_T_23) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 598:34]
    node _z_result_resultNaNFractionValue_T_7 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_8 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_9 = gt(_z_result_resultNaNFractionValue_T_7, _z_result_resultNaNFractionValue_T_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:33]
    node _z_result_resultNaNFractionValue_T_10 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_11 = bits(_z_result_resultNaNFractionValue_T_10, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:64]
    node _z_result_resultNaNFractionValue_T_12 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_13 = bits(_z_result_resultNaNFractionValue_T_12, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:83]
    node z_result_resultNaNFractionValue_1 = mux(_z_result_resultNaNFractionValue_T_9, _z_result_resultNaNFractionValue_T_11, _z_result_resultNaNFractionValue_T_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:18]
    node z_result_result_lo_1 = cat(UInt<1>("h1"), z_result_resultNaNFractionValue_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 603:22]
    node z_result_result_hi_2 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 603:22]
    node _z_result_result_T_2 = cat(z_result_result_hi_2, z_result_result_lo_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 603:22]
    node _z_result_T_25 = eq(a_data, b_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 606:26]
    node z_result_result_hi_3 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 608:20]
    node _z_result_result_T_3 = cat(z_result_result_hi_3, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 608:20]
    node _GEN_8 = mux(_z_result_T_25, _z_result_result_T_3, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 606:42 608:14 610:14]
    node _GEN_9 = mux(z_result_isResultNaN_1, _z_result_result_T_2, _GEN_8) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 601:23 602:14]
    node z_result_result = _GEN_7 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 556:22]
    node z_result_result_1 = _GEN_9 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 596:22]
    node _z_result_T_26 = xor(z_result_result, z_result_result_1) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 627:32]
    node _GEN_10 = mux(z_isResultNaN_3, _z_result_T_6, _z_result_T_26) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 621:23 622:14 627:14]
    node _T_5 = eq(compareMode, UInt<3>("h4")) @[\\src\\main\\scala\\fpu8\\Compare.scala 21:28]
    node _z_isResultNaN_T_48 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_49 = eq(_z_isResultNaN_T_48, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_50 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_51 = eq(_z_isResultNaN_T_50, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_isResultNaN_T_52 = eq(_z_isResultNaN_T_51, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_isResultNaN_T_53 = and(_z_isResultNaN_T_49, _z_isResultNaN_T_52) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_isResultNaN_T_54 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_55 = eq(_z_isResultNaN_T_54, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_56 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_57 = eq(_z_isResultNaN_T_56, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_isResultNaN_T_58 = eq(_z_isResultNaN_T_57, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_isResultNaN_T_59 = and(_z_isResultNaN_T_55, _z_isResultNaN_T_58) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_isResultNaN_4 = or(_z_isResultNaN_T_53, _z_isResultNaN_T_59) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 635:34]
    node _z_resultNaNFractionValue_T_28 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_29 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_30 = gt(_z_resultNaNFractionValue_T_28, _z_resultNaNFractionValue_T_29) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:33]
    node _z_resultNaNFractionValue_T_31 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_32 = bits(_z_resultNaNFractionValue_T_31, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:64]
    node _z_resultNaNFractionValue_T_33 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_34 = bits(_z_resultNaNFractionValue_T_33, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:83]
    node z_resultNaNFractionValue_4 = mux(_z_resultNaNFractionValue_T_30, _z_resultNaNFractionValue_T_32, _z_resultNaNFractionValue_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:18]
    node z_result_lo_4 = cat(UInt<1>("h1"), z_resultNaNFractionValue_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 640:22]
    node z_result_hi_7 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 640:22]
    node _z_result_T_27 = cat(z_result_hi_7, z_result_lo_4) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 640:22]
    node _z_result_isResultNaN_T_24 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_25 = eq(_z_result_isResultNaN_T_24, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_result_isResultNaN_T_26 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_27 = eq(_z_result_isResultNaN_T_26, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_result_isResultNaN_T_28 = eq(_z_result_isResultNaN_T_27, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_result_isResultNaN_T_29 = and(_z_result_isResultNaN_T_25, _z_result_isResultNaN_T_28) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_result_isResultNaN_T_30 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_31 = eq(_z_result_isResultNaN_T_30, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_result_isResultNaN_T_32 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_33 = eq(_z_result_isResultNaN_T_32, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_result_isResultNaN_T_34 = eq(_z_result_isResultNaN_T_33, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_result_isResultNaN_T_35 = and(_z_result_isResultNaN_T_31, _z_result_isResultNaN_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_result_isResultNaN_2 = or(_z_result_isResultNaN_T_29, _z_result_isResultNaN_T_35) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 578:34]
    node _z_result_resultNaNFractionValue_T_14 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_15 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_16 = gt(_z_result_resultNaNFractionValue_T_14, _z_result_resultNaNFractionValue_T_15) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:33]
    node _z_result_resultNaNFractionValue_T_17 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_18 = bits(_z_result_resultNaNFractionValue_T_17, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:64]
    node _z_result_resultNaNFractionValue_T_19 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_20 = bits(_z_result_resultNaNFractionValue_T_19, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:83]
    node z_result_resultNaNFractionValue_2 = mux(_z_result_resultNaNFractionValue_T_16, _z_result_resultNaNFractionValue_T_18, _z_result_resultNaNFractionValue_T_20) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:18]
    node z_result_result_lo_2 = cat(UInt<1>("h1"), z_result_resultNaNFractionValue_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 583:22]
    node z_result_result_hi_4 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 583:22]
    node _z_result_result_T_4 = cat(z_result_result_hi_4, z_result_result_lo_2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 583:22]
    node _z_result_T_28 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_29 = bits(b_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_30 = lt(_z_result_T_28, _z_result_T_29) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:26]
    node _z_result_T_31 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_32 = eq(_z_result_T_31, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:53]
    node _z_result_T_33 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:62]
    node _z_result_T_34 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:81]
    node _z_result_T_35 = gt(_z_result_T_33, _z_result_T_34) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:69]
    node _z_result_T_36 = eq(_z_result_T_35, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:64]
    node _z_result_T_37 = and(_z_result_T_32, _z_result_T_36) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:61]
    node _z_result_T_38 = or(_z_result_T_30, _z_result_T_37) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:39]
    node _z_result_T_39 = bits(a_data, 7, 7) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 23:24]
    node _z_result_T_40 = eq(_z_result_T_39, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:103]
    node _z_result_T_41 = bits(a_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:62]
    node _z_result_T_42 = bits(b_data, 6, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:81]
    node _z_result_T_43 = gt(_z_result_T_41, _z_result_T_42) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 29:69]
    node _z_result_T_44 = and(_z_result_T_40, _z_result_T_43) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:111]
    node _z_result_T_45 = or(_z_result_T_38, _z_result_T_44) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:89]
    node z_result_result_hi_5 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 588:20]
    node _z_result_result_T_5 = cat(z_result_result_hi_5, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 588:20]
    node _GEN_11 = mux(_z_result_T_45, _z_result_result_T_5, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 586:139 588:14 590:14]
    node _GEN_12 = mux(z_result_isResultNaN_2, _z_result_result_T_4, _GEN_11) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 581:22 582:14]
    node _z_result_isResultNaN_T_36 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_37 = eq(_z_result_isResultNaN_T_36, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_result_isResultNaN_T_38 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_39 = eq(_z_result_isResultNaN_T_38, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_result_isResultNaN_T_40 = eq(_z_result_isResultNaN_T_39, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_result_isResultNaN_T_41 = and(_z_result_isResultNaN_T_37, _z_result_isResultNaN_T_40) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_result_isResultNaN_T_42 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_result_isResultNaN_T_43 = eq(_z_result_isResultNaN_T_42, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_result_isResultNaN_T_44 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_isResultNaN_T_45 = eq(_z_result_isResultNaN_T_44, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_result_isResultNaN_T_46 = eq(_z_result_isResultNaN_T_45, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_result_isResultNaN_T_47 = and(_z_result_isResultNaN_T_43, _z_result_isResultNaN_T_46) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_result_isResultNaN_3 = or(_z_result_isResultNaN_T_41, _z_result_isResultNaN_T_47) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 598:34]
    node _z_result_resultNaNFractionValue_T_21 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_22 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_23 = gt(_z_result_resultNaNFractionValue_T_21, _z_result_resultNaNFractionValue_T_22) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:33]
    node _z_result_resultNaNFractionValue_T_24 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_25 = bits(_z_result_resultNaNFractionValue_T_24, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:64]
    node _z_result_resultNaNFractionValue_T_26 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_result_resultNaNFractionValue_T_27 = bits(_z_result_resultNaNFractionValue_T_26, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:83]
    node z_result_resultNaNFractionValue_3 = mux(_z_result_resultNaNFractionValue_T_23, _z_result_resultNaNFractionValue_T_25, _z_result_resultNaNFractionValue_T_27) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:18]
    node z_result_result_lo_3 = cat(UInt<1>("h1"), z_result_resultNaNFractionValue_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 603:22]
    node z_result_result_hi_6 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 603:22]
    node _z_result_result_T_6 = cat(z_result_result_hi_6, z_result_result_lo_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 603:22]
    node _z_result_T_46 = eq(a_data, b_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 606:26]
    node z_result_result_hi_7 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 608:20]
    node _z_result_result_T_7 = cat(z_result_result_hi_7, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 608:20]
    node _GEN_13 = mux(_z_result_T_46, _z_result_result_T_7, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 606:42 608:14 610:14]
    node _GEN_14 = mux(z_result_isResultNaN_3, _z_result_result_T_6, _GEN_13) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 601:23 602:14]
    node z_result_result_2 = _GEN_12 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 576:22]
    node z_result_result_3 = _GEN_14 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 596:22]
    node _z_result_T_47 = xor(z_result_result_2, z_result_result_3) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 644:32]
    node _GEN_15 = mux(z_isResultNaN_4, _z_result_T_27, _z_result_T_47) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 638:23 639:14 644:14]
    node _z_isResultNaN_T_60 = bits(a_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_61 = eq(_z_isResultNaN_T_60, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_62 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_63 = eq(_z_isResultNaN_T_62, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_isResultNaN_T_64 = eq(_z_isResultNaN_T_63, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_isResultNaN_T_65 = and(_z_isResultNaN_T_61, _z_isResultNaN_T_64) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node _z_isResultNaN_T_66 = bits(b_data, 6, 2) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 25:28]
    node _z_isResultNaN_T_67 = eq(_z_isResultNaN_T_66, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 35:33]
    node _z_isResultNaN_T_68 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_isResultNaN_T_69 = eq(_z_isResultNaN_T_68, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 37:36]
    node _z_isResultNaN_T_70 = eq(_z_isResultNaN_T_69, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 43:15]
    node _z_isResultNaN_T_71 = and(_z_isResultNaN_T_67, _z_isResultNaN_T_70) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 42:30]
    node z_isResultNaN_5 = or(_z_isResultNaN_T_65, _z_isResultNaN_T_71) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 652:34]
    node _z_resultNaNFractionValue_T_35 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_36 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_37 = gt(_z_resultNaNFractionValue_T_35, _z_resultNaNFractionValue_T_36) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:33]
    node _z_resultNaNFractionValue_T_38 = bits(a_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_39 = bits(_z_resultNaNFractionValue_T_38, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:64]
    node _z_resultNaNFractionValue_T_40 = bits(b_data, 1, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 27:28]
    node _z_resultNaNFractionValue_T_41 = bits(_z_resultNaNFractionValue_T_40, 0, 0) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:83]
    node z_resultNaNFractionValue_5 = mux(_z_resultNaNFractionValue_T_37, _z_resultNaNFractionValue_T_39, _z_resultNaNFractionValue_T_41) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 120:18]
    node z_result_lo_5 = cat(UInt<1>("h1"), z_resultNaNFractionValue_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 657:22]
    node z_result_hi_8 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 657:22]
    node _z_result_T_48 = cat(z_result_hi_8, z_result_lo_5) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 657:22]
    node _z_T_37 = neq(a_data, b_data) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 660:26]
    node z_result_hi_9 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 662:20]
    node _z_result_T_49 = cat(z_result_hi_9, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 662:20]
    node _GEN_16 = mux(_z_T_37, _z_result_T_49, UInt<8>("h0")) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 660:42 662:14 664:14]
    node _GEN_17 = mux(z_isResultNaN_5, _z_result_T_48, _GEN_16) @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 655:23 656:14]
    node z_result_4 = _GEN_15 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 633:22]
    node z_result_5 = _GEN_17 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 650:22]
    node _GEN_18 = mux(_T_5, z_result_4, z_result_5) @[\\src\\main\\scala\\fpu8\\Compare.scala 21:37 22:9 24:9]
    node z_result_3 = _GEN_10 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 616:22]
    node _GEN_19 = mux(_T_4, z_result_3, _GEN_18) @[\\src\\main\\scala\\fpu8\\Compare.scala 19:37 20:9]
    node z_result_2 = _GEN_5 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 596:22]
    node _GEN_20 = mux(_T_3, z_result_2, _GEN_19) @[\\src\\main\\scala\\fpu8\\Compare.scala 17:37 18:9]
    node z_result_1 = _GEN_3 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 576:22]
    node _GEN_21 = mux(_T_2, z_result_1, _GEN_20) @[\\src\\main\\scala\\fpu8\\Compare.scala 15:37 16:9]
    node z_result = _GEN_1 @[\\src\\main\\scala\\fpu8\\FloatingPoint.scala 556:22]
    node _GEN_22 = mux(_T_1, z_result, _GEN_21) @[\\src\\main\\scala\\fpu8\\Compare.scala 13:31 14:9]
    node _GEN_23 = mux(_T, _GEN_22, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\Compare.scala 12:23 27:6]
    z <= _GEN_23

  module GenerateFinalResult :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 12:18]
    input sign : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 13:16]
    input exponent : UInt<4> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 14:20]
    input mantissa : UInt<3> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 15:20]
    input roundingMode : UInt<2> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 16:24]
    input overflow : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 17:20]
    input saturationMode : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 18:26]
    input isInfty : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 19:19]
    input is0 : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 20:15]
    input isNaN : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 21:17]
    input NaNFractionValue : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 22:28]
    output z : UInt<8> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 23:13]

    node _result_T = bits(overflow, 0, 0) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 28:71]
    node _result_T_1 = bits(is0, 0, 0) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 28:99]
    node _result_T_2 = bits(isNaN, 0, 0) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 28:113]
    node _result_T_3 = eq(_result_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 40:10]
    node _result_T_4 = eq(_result_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 40:18]
    node _result_T_5 = and(_result_T_3, _result_T_4) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 40:15]
    node _result_T_6 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 42:28]
    node _result_T_7 = eq(saturationMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 42:54]
    node _result_T_8 = and(_result_T_6, _result_T_7) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 42:36]
    node _result_T_9 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 43:26]
    node _result_T_10 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 43:50]
    node _result_T_11 = or(_result_T_9, _result_T_10) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 43:34]
    node _result_T_12 = eq(saturationMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 43:77]
    node _result_T_13 = and(_result_T_11, _result_T_12) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 43:59]
    node _result_T_14 = eq(sign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 43:93]
    node _result_T_15 = and(_result_T_13, _result_T_14) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 43:85]
    node _result_T_16 = or(_result_T_8, _result_T_15) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 42:63]
    node result_z_hi = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 44:19]
    node _result_z_T = cat(result_z_hi, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 44:19]
    node _result_T_17 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 45:34]
    node _result_T_18 = eq(saturationMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 45:60]
    node _result_T_19 = and(_result_T_17, _result_T_18) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 45:42]
    node _result_T_20 = eq(roundingMode, UInt<2>("h3")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 45:86]
    node _result_T_21 = eq(saturationMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 45:112]
    node _result_T_22 = and(_result_T_20, _result_T_21) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 45:94]
    node _result_T_23 = or(_result_T_19, _result_T_22) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 45:69]
    node result_z_hi_1 = cat(sign, UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 46:19]
    node _result_z_T_1 = cat(result_z_hi_1, UInt<3>("h6")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 46:19]
    node _result_T_24 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 47:34]
    node _result_T_25 = eq(saturationMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 47:60]
    node _result_T_26 = and(_result_T_24, _result_T_25) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 47:42]
    node _result_T_27 = eq(sign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 47:76]
    node _result_T_28 = and(_result_T_26, _result_T_27) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 47:68]
    node _result_T_29 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 47:102]
    node _result_T_30 = eq(sign, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 47:118]
    node _result_T_31 = and(_result_T_29, _result_T_30) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 47:110]
    node _result_T_32 = or(_result_T_28, _result_T_31) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 47:85]
    node result_z_hi_2 = cat(UInt<1>("h1"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 48:19]
    node _result_z_T_2 = cat(result_z_hi_2, UInt<3>("h6")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 48:19]
    node _result_T_33 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 49:34]
    node _result_T_34 = eq(sign, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 49:50]
    node _result_T_35 = and(_result_T_33, _result_T_34) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 49:42]
    node _result_T_36 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 49:76]
    node _result_T_37 = eq(saturationMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 49:102]
    node _result_T_38 = and(_result_T_36, _result_T_37) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 49:84]
    node _result_T_39 = eq(sign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 49:118]
    node _result_T_40 = and(_result_T_38, _result_T_39) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 49:110]
    node _result_T_41 = or(_result_T_35, _result_T_40) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 49:59]
    node result_z_hi_3 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 50:19]
    node _result_z_T_3 = cat(result_z_hi_3, UInt<3>("h6")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 50:19]
    node _GEN_0 = mux(_result_T_41, _result_z_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 49:128 50:13 52:13]
    node _GEN_1 = mux(_result_T_32, _result_z_T_2, _GEN_0) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 47:128 48:13]
    node _GEN_2 = mux(_result_T_23, _result_z_T_1, _GEN_1) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 45:122 46:13]
    node _GEN_3 = mux(_result_T_16, _result_z_T, _GEN_2) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 43:103 44:13]
    node result_z_hi_4 = cat(sign, exponent) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 55:17]
    node _result_z_T_4 = cat(result_z_hi_4, mantissa) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 55:17]
    node _GEN_4 = mux(_result_T, _GEN_3, _result_z_T_4) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 41:22 55:11]
    node _result_T_42 = eq(_result_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 57:23]
    node _result_T_43 = and(_result_T_1, _result_T_42) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 57:20]
    node result_z_hi_5 = cat(UInt<1>("h0"), UInt<4>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 58:15]
    node _result_z_T_5 = cat(result_z_hi_5, UInt<3>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 58:15]
    node result_z_hi_6 = cat(UInt<1>("h0"), UInt<4>("hf")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 60:15]
    node _result_z_T_6 = cat(result_z_hi_6, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 60:15]
    node _GEN_5 = mux(_result_T_2, _result_z_T_6, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 59:23 60:9 62:9]
    node _GEN_6 = mux(_result_T_43, _result_z_T_5, _GEN_5) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 57:31 58:9]
    node _GEN_7 = mux(_result_T_5, _GEN_4, _GEN_6) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 40:26]
    node _T = eq(enable, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 31:15]
    node result = _GEN_7 @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 39:17]
    node _GEN_8 = mux(_T, result, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 31:23 32:7 34:7]
    z <= _GEN_8

  module GenerateFinalResult_1 :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 12:18]
    input sign : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 13:16]
    input exponent : UInt<5> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 14:20]
    input mantissa : UInt<2> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 15:20]
    input roundingMode : UInt<2> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 16:24]
    input overflow : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 17:20]
    input saturationMode : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 18:26]
    input isInfty : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 19:19]
    input is0 : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 20:15]
    input isNaN : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 21:17]
    input NaNFractionValue : UInt<1> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 22:28]
    output z : UInt<8> @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 23:13]

    node _result_T = bits(overflow, 0, 0) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 26:76]
    node _result_T_1 = bits(isInfty, 0, 0) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 27:15]
    node _result_T_2 = bits(is0, 0, 0) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 27:27]
    node _result_T_3 = bits(isNaN, 0, 0) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 27:41]
    node _result_T_4 = eq(_result_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 70:10]
    node _result_T_5 = eq(_result_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 70:22]
    node _result_T_6 = and(_result_T_4, _result_T_5) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 70:19]
    node _result_T_7 = eq(_result_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 70:30]
    node _result_T_8 = and(_result_T_6, _result_T_7) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 70:27]
    node _result_T_9 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 72:27]
    node _result_T_10 = eq(saturationMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 72:53]
    node _result_T_11 = and(_result_T_9, _result_T_10) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 72:35]
    node result_z_hi = cat(sign, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 73:19]
    node _result_z_T = cat(result_z_hi, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 73:19]
    node _result_T_12 = eq(roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 74:34]
    node _result_T_13 = eq(saturationMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 74:60]
    node _result_T_14 = and(_result_T_12, _result_T_13) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 74:42]
    node _result_T_15 = eq(roundingMode, UInt<2>("h3")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 74:85]
    node _result_T_16 = or(_result_T_14, _result_T_15) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 74:69]
    node result_z_hi_1 = cat(sign, UInt<5>("h1e")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 75:19]
    node _result_z_T_1 = cat(result_z_hi_1, UInt<2>("h3")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 75:19]
    node _result_T_17 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 76:33]
    node _result_T_18 = eq(saturationMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 76:59]
    node _result_T_19 = and(_result_T_17, _result_T_18) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 76:41]
    node _result_T_20 = eq(sign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 76:75]
    node _result_T_21 = and(_result_T_19, _result_T_20) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 76:67]
    node result_z_hi_2 = cat(UInt<1>("h1"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 77:19]
    node _result_z_T_2 = cat(result_z_hi_2, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 77:19]
    node _result_T_22 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:34]
    node _result_T_23 = eq(saturationMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:60]
    node _result_T_24 = and(_result_T_22, _result_T_23) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:42]
    node _result_T_25 = eq(sign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:76]
    node _result_T_26 = and(_result_T_24, _result_T_25) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:68]
    node _result_T_27 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:102]
    node _result_T_28 = eq(sign, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:118]
    node _result_T_29 = and(_result_T_27, _result_T_28) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:110]
    node _result_T_30 = or(_result_T_26, _result_T_29) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:85]
    node result_z_hi_3 = cat(UInt<1>("h1"), UInt<5>("h1e")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 79:19]
    node _result_z_T_3 = cat(result_z_hi_3, UInt<2>("h3")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 79:19]
    node _result_T_31 = eq(roundingMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:34]
    node _result_T_32 = eq(sign, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:50]
    node _result_T_33 = and(_result_T_31, _result_T_32) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:42]
    node _result_T_34 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:76]
    node _result_T_35 = eq(saturationMode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:102]
    node _result_T_36 = and(_result_T_34, _result_T_35) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:84]
    node _result_T_37 = eq(sign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:118]
    node _result_T_38 = and(_result_T_36, _result_T_37) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:110]
    node _result_T_39 = or(_result_T_33, _result_T_38) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:59]
    node result_z_hi_4 = cat(UInt<1>("h0"), UInt<5>("h1e")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 81:19]
    node _result_z_T_4 = cat(result_z_hi_4, UInt<2>("h3")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 81:19]
    node _result_T_40 = eq(roundingMode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 82:33]
    node _result_T_41 = eq(saturationMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 82:59]
    node _result_T_42 = and(_result_T_40, _result_T_41) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 82:41]
    node _result_T_43 = eq(sign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 82:75]
    node _result_T_44 = and(_result_T_42, _result_T_43) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 82:67]
    node result_z_hi_5 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 83:19]
    node _result_z_T_5 = cat(result_z_hi_5, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 83:19]
    node _GEN_0 = mux(_result_T_44, _result_z_T_5, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 82:84 83:13 85:13]
    node _GEN_1 = mux(_result_T_39, _result_z_T_4, _GEN_0) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 80:128 81:13]
    node _GEN_2 = mux(_result_T_30, _result_z_T_3, _GEN_1) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 78:128 79:13]
    node _GEN_3 = mux(_result_T_21, _result_z_T_2, _GEN_2) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 76:84 77:13]
    node _GEN_4 = mux(_result_T_16, _result_z_T_1, _GEN_3) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 74:94 75:13]
    node _GEN_5 = mux(_result_T_11, _result_z_T, _GEN_4) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 72:62 73:13]
    node result_z_hi_6 = cat(sign, exponent) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 88:17]
    node _result_z_T_6 = cat(result_z_hi_6, mantissa) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 88:17]
    node _GEN_6 = mux(_result_T, _GEN_5, _result_z_T_6) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 71:22 88:11]
    node _result_T_45 = eq(_result_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 90:27]
    node _result_T_46 = and(_result_T_1, _result_T_45) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 90:24]
    node _result_T_47 = eq(_result_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 90:35]
    node _result_T_48 = and(_result_T_46, _result_T_47) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 90:32]
    node result_z_hi_7 = cat(sign, UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 91:15]
    node _result_z_T_7 = cat(result_z_hi_7, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 91:15]
    node _result_T_49 = eq(_result_T_1, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 92:16]
    node _result_T_50 = and(_result_T_49, _result_T_2) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 92:25]
    node _result_T_51 = eq(_result_T_3, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 92:35]
    node _result_T_52 = and(_result_T_50, _result_T_51) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 92:32]
    node result_z_hi_8 = cat(sign, UInt<5>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 93:15]
    node _result_z_T_8 = cat(result_z_hi_8, UInt<2>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 93:15]
    node result_z_lo = cat(UInt<1>("h1"), NaNFractionValue) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 95:15]
    node result_z_hi_9 = cat(UInt<1>("h0"), UInt<5>("h1f")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 95:15]
    node _result_z_T_9 = cat(result_z_hi_9, result_z_lo) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 95:15]
    node _GEN_7 = mux(_result_T_3, _result_z_T_9, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 94:23 95:9 97:9]
    node _GEN_8 = mux(_result_T_52, _result_z_T_8, _GEN_7) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 92:43 93:9]
    node _GEN_9 = mux(_result_T_48, _result_z_T_7, _GEN_8) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 90:43 91:9]
    node _GEN_10 = mux(_result_T_8, _GEN_6, _GEN_9) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 70:38]
    node _T = eq(enable, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 31:15]
    node result = _GEN_10 @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 69:17]
    node _GEN_11 = mux(_T, result, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\GenerateFinalResult.scala 31:23 32:7 34:7]
    z <= _GEN_11

  module FPU8Top :
    input clock : Clock
    input reset : UInt<1>
    input enable : UInt<1> @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 6:18]
    input encoding : UInt<1> @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 7:20]
    input a : UInt<8> @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 8:13]
    input b : UInt<8> @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 9:13]
    input opCode : UInt<4> @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 10:18]
    input roundingMode : UInt<2> @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 11:24]
    input saturationMode : UInt<1> @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 12:26]
    output z : UInt<8> @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 13:13]

    inst addSubE4M3 of Add @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 27:26]
    inst addSubE5M2 of Add_1 @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 28:26]
    inst multiplyE4M3 of Multiply @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 30:28]
    inst multiplyE5M2 of Multiply_1 @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 31:28]
    inst divideE4M3 of Divide @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 33:26]
    inst divideE5M2 of Divide_1 @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 34:26]
    inst compareE4M3 of Compare @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 36:27]
    inst compareE5M2 of Compare_1 @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 37:27]
    inst generateFinalResultE4M3 of GenerateFinalResult @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 39:39]
    inst generateFinalResultE5M2 of GenerateFinalResult_1 @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 40:39]
    node _addSubE4M3_enable_T = eq(encoding, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 42:37]
    node _addSubE4M3_enable_T_1 = eq(opCode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 42:56]
    node _addSubE4M3_enable_T_2 = eq(opCode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 42:74]
    node _addSubE4M3_enable_T_3 = or(_addSubE4M3_enable_T_1, _addSubE4M3_enable_T_2) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 42:64]
    node _addSubE4M3_enable_T_4 = and(_addSubE4M3_enable_T, _addSubE4M3_enable_T_3) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 42:45]
    node _addSubE4M3_enable_T_5 = mux(_addSubE4M3_enable_T_4, enable, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 42:27]
    node _addSubE4M3_subtract_T = eq(opCode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 45:37]
    node _addSubE4M3_subtract_T_1 = mux(_addSubE4M3_subtract_T, UInt<1>("h1"), UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 45:29]
    node _addSubE5M2_enable_T = eq(encoding, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 48:37]
    node _addSubE5M2_enable_T_1 = eq(opCode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 48:56]
    node _addSubE5M2_enable_T_2 = eq(opCode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 48:74]
    node _addSubE5M2_enable_T_3 = or(_addSubE5M2_enable_T_1, _addSubE5M2_enable_T_2) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 48:64]
    node _addSubE5M2_enable_T_4 = and(_addSubE5M2_enable_T, _addSubE5M2_enable_T_3) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 48:45]
    node _addSubE5M2_enable_T_5 = mux(_addSubE5M2_enable_T_4, enable, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 48:27]
    node _addSubE5M2_subtract_T = eq(opCode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 51:37]
    node _addSubE5M2_subtract_T_1 = mux(_addSubE5M2_subtract_T, UInt<1>("h1"), UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 51:29]
    node _multiplyE4M3_enable_T = eq(encoding, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 54:39]
    node _multiplyE4M3_enable_T_1 = eq(opCode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 54:57]
    node _multiplyE4M3_enable_T_2 = and(_multiplyE4M3_enable_T, _multiplyE4M3_enable_T_1) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 54:47]
    node _multiplyE4M3_enable_T_3 = mux(_multiplyE4M3_enable_T_2, enable, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 54:29]
    node _multiplyE5M2_enable_T = eq(encoding, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 59:39]
    node _multiplyE5M2_enable_T_1 = eq(opCode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 59:57]
    node _multiplyE5M2_enable_T_2 = and(_multiplyE5M2_enable_T, _multiplyE5M2_enable_T_1) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 59:47]
    node _multiplyE5M2_enable_T_3 = mux(_multiplyE5M2_enable_T_2, enable, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 59:29]
    node _divideE4M3_enable_T = eq(encoding, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 64:37]
    node _divideE4M3_enable_T_1 = eq(opCode, UInt<2>("h3")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 64:55]
    node _divideE4M3_enable_T_2 = and(_divideE4M3_enable_T, _divideE4M3_enable_T_1) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 64:45]
    node _divideE4M3_enable_T_3 = mux(_divideE4M3_enable_T_2, enable, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 64:27]
    node _divideE5M2_enable_T = eq(encoding, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 69:37]
    node _divideE5M2_enable_T_1 = eq(opCode, UInt<2>("h3")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 69:55]
    node _divideE5M2_enable_T_2 = and(_divideE5M2_enable_T, _divideE5M2_enable_T_1) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 69:45]
    node _divideE5M2_enable_T_3 = mux(_divideE5M2_enable_T_2, enable, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 69:27]
    node _compareE4M3_enable_T = eq(encoding, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 74:38]
    node _compareE4M3_enable_T_1 = eq(opCode, UInt<3>("h4")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 75:13]
    node _compareE4M3_enable_T_2 = eq(opCode, UInt<3>("h5")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 75:31]
    node _compareE4M3_enable_T_3 = or(_compareE4M3_enable_T_1, _compareE4M3_enable_T_2) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 75:21]
    node _compareE4M3_enable_T_4 = eq(opCode, UInt<3>("h6")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 75:49]
    node _compareE4M3_enable_T_5 = or(_compareE4M3_enable_T_3, _compareE4M3_enable_T_4) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 75:39]
    node _compareE4M3_enable_T_6 = eq(opCode, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 75:67]
    node _compareE4M3_enable_T_7 = or(_compareE4M3_enable_T_5, _compareE4M3_enable_T_6) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 75:57]
    node _compareE4M3_enable_T_8 = eq(opCode, UInt<4>("h8")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 75:85]
    node _compareE4M3_enable_T_9 = or(_compareE4M3_enable_T_7, _compareE4M3_enable_T_8) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 75:75]
    node _compareE4M3_enable_T_10 = eq(opCode, UInt<4>("h9")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 75:103]
    node _compareE4M3_enable_T_11 = or(_compareE4M3_enable_T_9, _compareE4M3_enable_T_10) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 75:93]
    node _compareE4M3_enable_T_12 = and(_compareE4M3_enable_T, _compareE4M3_enable_T_11) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 74:46]
    node _compareE4M3_enable_T_13 = mux(_compareE4M3_enable_T_12, enable, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 74:28]
    node _compareE4M3_compareMode_T = eq(opCode, UInt<3>("h4")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 77:41]
    node _compareE4M3_compareMode_T_1 = eq(opCode, UInt<3>("h5")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 78:16]
    node _compareE4M3_compareMode_T_2 = eq(opCode, UInt<3>("h6")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 79:18]
    node _compareE4M3_compareMode_T_3 = eq(opCode, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 80:20]
    node _compareE4M3_compareMode_T_4 = eq(opCode, UInt<4>("h8")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 81:22]
    node _compareE4M3_compareMode_T_5 = mux(_compareE4M3_compareMode_T_4, UInt<3>("h4"), UInt<3>("h5")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 81:14]
    node _compareE4M3_compareMode_T_6 = mux(_compareE4M3_compareMode_T_3, UInt<2>("h3"), _compareE4M3_compareMode_T_5) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 80:12]
    node _compareE4M3_compareMode_T_7 = mux(_compareE4M3_compareMode_T_2, UInt<2>("h2"), _compareE4M3_compareMode_T_6) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 79:10]
    node _compareE4M3_compareMode_T_8 = mux(_compareE4M3_compareMode_T_1, UInt<1>("h1"), _compareE4M3_compareMode_T_7) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 78:8]
    node _compareE4M3_compareMode_T_9 = mux(_compareE4M3_compareMode_T, UInt<1>("h0"), _compareE4M3_compareMode_T_8) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 77:33]
    node _compareE5M2_enable_T = eq(encoding, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 85:38]
    node _compareE5M2_enable_T_1 = eq(opCode, UInt<3>("h4")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 86:13]
    node _compareE5M2_enable_T_2 = eq(opCode, UInt<3>("h5")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 86:31]
    node _compareE5M2_enable_T_3 = or(_compareE5M2_enable_T_1, _compareE5M2_enable_T_2) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 86:21]
    node _compareE5M2_enable_T_4 = eq(opCode, UInt<3>("h6")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 86:49]
    node _compareE5M2_enable_T_5 = or(_compareE5M2_enable_T_3, _compareE5M2_enable_T_4) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 86:39]
    node _compareE5M2_enable_T_6 = eq(opCode, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 86:67]
    node _compareE5M2_enable_T_7 = or(_compareE5M2_enable_T_5, _compareE5M2_enable_T_6) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 86:57]
    node _compareE5M2_enable_T_8 = eq(opCode, UInt<4>("h8")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 86:85]
    node _compareE5M2_enable_T_9 = or(_compareE5M2_enable_T_7, _compareE5M2_enable_T_8) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 86:75]
    node _compareE5M2_enable_T_10 = eq(opCode, UInt<4>("h9")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 86:103]
    node _compareE5M2_enable_T_11 = or(_compareE5M2_enable_T_9, _compareE5M2_enable_T_10) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 86:93]
    node _compareE5M2_enable_T_12 = and(_compareE5M2_enable_T, _compareE5M2_enable_T_11) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 85:46]
    node _compareE5M2_enable_T_13 = mux(_compareE5M2_enable_T_12, enable, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 85:28]
    node _compareE5M2_compareMode_T = eq(opCode, UInt<3>("h4")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 88:41]
    node _compareE5M2_compareMode_T_1 = eq(opCode, UInt<3>("h5")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 89:16]
    node _compareE5M2_compareMode_T_2 = eq(opCode, UInt<3>("h6")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 90:18]
    node _compareE5M2_compareMode_T_3 = eq(opCode, UInt<3>("h7")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 91:20]
    node _compareE5M2_compareMode_T_4 = eq(opCode, UInt<4>("h8")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 92:22]
    node _compareE5M2_compareMode_T_5 = mux(_compareE5M2_compareMode_T_4, UInt<3>("h4"), UInt<3>("h5")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 92:14]
    node _compareE5M2_compareMode_T_6 = mux(_compareE5M2_compareMode_T_3, UInt<2>("h3"), _compareE5M2_compareMode_T_5) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 91:12]
    node _compareE5M2_compareMode_T_7 = mux(_compareE5M2_compareMode_T_2, UInt<2>("h2"), _compareE5M2_compareMode_T_6) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 90:10]
    node _compareE5M2_compareMode_T_8 = mux(_compareE5M2_compareMode_T_1, UInt<1>("h1"), _compareE5M2_compareMode_T_7) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 89:8]
    node _compareE5M2_compareMode_T_9 = mux(_compareE5M2_compareMode_T, UInt<1>("h0"), _compareE5M2_compareMode_T_8) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 88:33]
    node _generateFinalResultE4M3_enable_T = eq(encoding, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 96:50]
    node _generateFinalResultE4M3_enable_T_1 = mux(_generateFinalResultE4M3_enable_T, enable, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 96:40]
    node _generateFinalResultE5M2_enable_T = eq(encoding, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 97:50]
    node _generateFinalResultE5M2_enable_T_1 = mux(_generateFinalResultE5M2_enable_T, enable, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 97:40]
    node _T = eq(encoding, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:17]
    node _T_1 = eq(opCode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 111:17]
    node _T_2 = eq(opCode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 111:35]
    node _T_3 = or(_T_1, _T_2) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 111:25]
    node _generateFinalResultE4M3_exponent_T = bits(addSubE4M3.exponent, 3, 0) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 113:62]
    node _generateFinalResultE4M3_mantissa_T = bits(addSubE4M3.fraction, 2, 0) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 114:62]
    node _T_4 = eq(opCode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 124:23]
    node _generateFinalResultE4M3_exponent_T_1 = bits(multiplyE4M3.exponent, 3, 0) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 126:64]
    node _generateFinalResultE4M3_mantissa_T_1 = bits(multiplyE4M3.fraction, 2, 0) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 127:64]
    node _T_5 = eq(opCode, UInt<2>("h3")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 137:23]
    node _generateFinalResultE4M3_exponent_T_2 = bits(divideE4M3.exponent, 3, 0) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 139:62]
    node _generateFinalResultE4M3_mantissa_T_2 = bits(divideE4M3.fraction, 2, 0) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 140:62]
    node _GEN_0 = mux(_T_5, divideE4M3.sign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 137:31 138:36 151:36]
    node _GEN_1 = mux(_T_5, _generateFinalResultE4M3_exponent_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 137:31 139:40 152:40]
    node _GEN_2 = mux(_T_5, _generateFinalResultE4M3_mantissa_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 137:31 140:40 153:40]
    node _GEN_3 = mux(_T_5, roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 137:31 141:44 154:44]
    node _GEN_4 = mux(_T_5, divideE4M3.overflow, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 137:31 142:40 155:40]
    node _GEN_5 = mux(_T_5, saturationMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 137:31 143:46 156:46]
    node _GEN_6 = mux(_T_5, divideE4M3.isInfty, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 137:31 144:39 157:39]
    node _GEN_7 = mux(_T_5, divideE4M3.is0, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 137:31 145:35 158:35]
    node _GEN_8 = mux(_T_5, divideE4M3.isNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 137:31 146:37 159:37]
    node _GEN_9 = mux(_T_5, divideE4M3.NaNFractionValue, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 137:31 147:48 160:48]
    node _GEN_10 = mux(_T_5, generateFinalResultE4M3.z, compareE4M3.z) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 137:31 149:9 162:9]
    node _GEN_11 = mux(_T_4, multiplyE4M3.sign, _GEN_0) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 124:32 125:36]
    node _GEN_12 = mux(_T_4, _generateFinalResultE4M3_exponent_T_1, _GEN_1) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 124:32 126:40]
    node _GEN_13 = mux(_T_4, _generateFinalResultE4M3_mantissa_T_1, _GEN_2) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 124:32 127:40]
    node _GEN_14 = mux(_T_4, roundingMode, _GEN_3) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 124:32 128:44]
    node _GEN_15 = mux(_T_4, multiplyE4M3.overflow, _GEN_4) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 124:32 129:40]
    node _GEN_16 = mux(_T_4, saturationMode, _GEN_5) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 124:32 130:46]
    node _GEN_17 = mux(_T_4, multiplyE4M3.isInfty, _GEN_6) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 124:32 131:39]
    node _GEN_18 = mux(_T_4, multiplyE4M3.is0, _GEN_7) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 124:32 132:35]
    node _GEN_19 = mux(_T_4, multiplyE4M3.isNaN, _GEN_8) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 124:32 133:37]
    node _GEN_20 = mux(_T_4, multiplyE4M3.NaNFractionValue, _GEN_9) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 124:32 134:48]
    node _GEN_21 = mux(_T_4, generateFinalResultE4M3.z, _GEN_10) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 124:32 136:9]
    node _GEN_22 = mux(_T_3, addSubE4M3.sign, _GEN_11) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 111:43 112:36]
    node _GEN_23 = mux(_T_3, _generateFinalResultE4M3_exponent_T, _GEN_12) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 111:43 113:40]
    node _GEN_24 = mux(_T_3, _generateFinalResultE4M3_mantissa_T, _GEN_13) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 111:43 114:40]
    node _GEN_25 = mux(_T_3, roundingMode, _GEN_14) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 111:43 115:44]
    node _GEN_26 = mux(_T_3, addSubE4M3.overflow, _GEN_15) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 111:43 116:40]
    node _GEN_27 = mux(_T_3, saturationMode, _GEN_16) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 111:43 117:46]
    node _GEN_28 = mux(_T_3, addSubE4M3.isInfty, _GEN_17) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 111:43 118:39]
    node _GEN_29 = mux(_T_3, addSubE4M3.is0, _GEN_18) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 111:43 119:35]
    node _GEN_30 = mux(_T_3, addSubE4M3.isNaN, _GEN_19) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 111:43 120:37]
    node _GEN_31 = mux(_T_3, addSubE4M3.NaNFractionValue, _GEN_20) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 111:43 121:48]
    node _GEN_32 = mux(_T_3, generateFinalResultE4M3.z, _GEN_21) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 111:43 123:9]
    node _T_6 = eq(opCode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 176:17]
    node _T_7 = eq(opCode, UInt<1>("h1")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 176:35]
    node _T_8 = or(_T_6, _T_7) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 176:25]
    node _generateFinalResultE5M2_exponent_T = bits(addSubE5M2.exponent, 4, 0) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 178:62]
    node _generateFinalResultE5M2_mantissa_T = bits(addSubE5M2.fraction, 1, 0) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 179:62]
    node _T_9 = eq(opCode, UInt<2>("h2")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 189:23]
    node _generateFinalResultE5M2_exponent_T_1 = bits(multiplyE5M2.exponent, 4, 0) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 191:64]
    node _generateFinalResultE5M2_mantissa_T_1 = bits(multiplyE5M2.fraction, 1, 0) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 192:64]
    node _T_10 = eq(opCode, UInt<2>("h3")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 202:23]
    node _generateFinalResultE5M2_exponent_T_2 = bits(divideE5M2.exponent, 4, 0) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 204:62]
    node _generateFinalResultE5M2_mantissa_T_2 = bits(divideE5M2.fraction, 1, 0) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 205:62]
    node _GEN_33 = mux(_T_10, divideE5M2.sign, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 202:32 203:36 216:36]
    node _GEN_34 = mux(_T_10, _generateFinalResultE5M2_exponent_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 202:32 204:40 217:40]
    node _GEN_35 = mux(_T_10, _generateFinalResultE5M2_mantissa_T_2, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 202:32 205:40 218:40]
    node _GEN_36 = mux(_T_10, roundingMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 202:32 206:44 219:44]
    node _GEN_37 = mux(_T_10, divideE5M2.overflow, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 202:32 207:40 220:40]
    node _GEN_38 = mux(_T_10, saturationMode, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 202:32 208:46 221:46]
    node _GEN_39 = mux(_T_10, divideE5M2.isInfty, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 202:32 209:39 222:39]
    node _GEN_40 = mux(_T_10, divideE5M2.is0, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 202:32 210:35 223:35]
    node _GEN_41 = mux(_T_10, divideE5M2.isNaN, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 202:32 211:37 224:37]
    node _GEN_42 = mux(_T_10, divideE5M2.NaNFractionValue, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 202:32 212:48 225:48]
    node _GEN_43 = mux(_T_10, generateFinalResultE5M2.z, compareE5M2.z) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 202:32 214:9 227:9]
    node _GEN_44 = mux(_T_9, multiplyE5M2.sign, _GEN_33) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 189:31 190:36]
    node _GEN_45 = mux(_T_9, _generateFinalResultE5M2_exponent_T_1, _GEN_34) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 189:31 191:40]
    node _GEN_46 = mux(_T_9, _generateFinalResultE5M2_mantissa_T_1, _GEN_35) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 189:31 192:40]
    node _GEN_47 = mux(_T_9, roundingMode, _GEN_36) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 189:31 193:44]
    node _GEN_48 = mux(_T_9, multiplyE5M2.overflow, _GEN_37) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 189:31 194:40]
    node _GEN_49 = mux(_T_9, saturationMode, _GEN_38) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 189:31 195:46]
    node _GEN_50 = mux(_T_9, multiplyE5M2.isInfty, _GEN_39) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 189:31 196:39]
    node _GEN_51 = mux(_T_9, multiplyE5M2.is0, _GEN_40) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 189:31 197:35]
    node _GEN_52 = mux(_T_9, multiplyE5M2.isNaN, _GEN_41) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 189:31 198:37]
    node _GEN_53 = mux(_T_9, multiplyE5M2.NaNFractionValue, _GEN_42) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 189:31 199:48]
    node _GEN_54 = mux(_T_9, generateFinalResultE5M2.z, _GEN_43) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 189:31 201:9]
    node _GEN_55 = mux(_T_8, addSubE5M2.sign, _GEN_44) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 176:44 177:36]
    node _GEN_56 = mux(_T_8, _generateFinalResultE5M2_exponent_T, _GEN_45) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 176:44 178:40]
    node _GEN_57 = mux(_T_8, _generateFinalResultE5M2_mantissa_T, _GEN_46) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 176:44 179:40]
    node _GEN_58 = mux(_T_8, roundingMode, _GEN_47) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 176:44 180:44]
    node _GEN_59 = mux(_T_8, addSubE5M2.overflow, _GEN_48) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 176:44 181:40]
    node _GEN_60 = mux(_T_8, saturationMode, _GEN_49) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 176:44 182:46]
    node _GEN_61 = mux(_T_8, addSubE5M2.isInfty, _GEN_50) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 176:44 183:39]
    node _GEN_62 = mux(_T_8, addSubE5M2.is0, _GEN_51) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 176:44 184:35]
    node _GEN_63 = mux(_T_8, addSubE5M2.isNaN, _GEN_52) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 176:44 185:37]
    node _GEN_64 = mux(_T_8, addSubE5M2.NaNFractionValue, _GEN_53) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 176:44 186:48]
    node _GEN_65 = mux(_T_8, generateFinalResultE5M2.z, _GEN_54) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 176:44 188:9]
    node _GEN_66 = mux(_T, UInt<1>("h0"), _GEN_55) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 100:34]
    node _GEN_67 = mux(_T, UInt<1>("h0"), _GEN_56) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 101:38]
    node _GEN_68 = mux(_T, UInt<1>("h0"), _GEN_57) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 102:38]
    node _GEN_69 = mux(_T, UInt<1>("h0"), _GEN_58) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 103:42]
    node _GEN_70 = mux(_T, UInt<1>("h0"), _GEN_59) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 104:38]
    node _GEN_71 = mux(_T, UInt<1>("h0"), _GEN_60) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 105:44]
    node _GEN_72 = mux(_T, UInt<1>("h0"), _GEN_61) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 106:37]
    node _GEN_73 = mux(_T, UInt<1>("h0"), _GEN_62) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 107:33]
    node _GEN_74 = mux(_T, UInt<1>("h0"), _GEN_63) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 108:35]
    node _GEN_75 = mux(_T, UInt<1>("h0"), _GEN_64) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 109:46]
    node _GEN_76 = mux(_T, _GEN_22, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 165:34]
    node _GEN_77 = mux(_T, _GEN_23, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 166:38]
    node _GEN_78 = mux(_T, _GEN_24, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 167:38]
    node _GEN_79 = mux(_T, _GEN_25, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 168:42]
    node _GEN_80 = mux(_T, _GEN_26, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 169:38]
    node _GEN_81 = mux(_T, _GEN_27, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 170:44]
    node _GEN_82 = mux(_T, _GEN_28, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 171:37]
    node _GEN_83 = mux(_T, _GEN_29, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 172:33]
    node _GEN_84 = mux(_T, _GEN_30, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 173:35]
    node _GEN_85 = mux(_T, _GEN_31, UInt<1>("h0")) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25 174:46]
    node _GEN_86 = mux(_T, _GEN_32, _GEN_65) @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 99:25]
    node aE4M3_data = a @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 15:19 18:14]
    node bE4M3_data = b @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 16:19 19:14]
    node aE5M2_data = a @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 21:19 24:14]
    node bE5M2_data = b @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 22:19 25:14]
    z <= _GEN_86
    addSubE4M3.clock <= clock
    addSubE4M3.reset <= reset
    addSubE4M3.enable <= _addSubE4M3_enable_T_5 @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 42:21]
    addSubE4M3.a_data <= aE4M3_data @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 43:16]
    addSubE4M3.b_data <= bE4M3_data @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 44:16]
    addSubE4M3.subtract <= _addSubE4M3_subtract_T_1 @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 45:23]
    addSubE4M3.roundingMode <= roundingMode @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 46:27]
    addSubE5M2.clock <= clock
    addSubE5M2.reset <= reset
    addSubE5M2.enable <= _addSubE5M2_enable_T_5 @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 48:21]
    addSubE5M2.a_data <= aE5M2_data @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 49:16]
    addSubE5M2.b_data <= bE5M2_data @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 50:16]
    addSubE5M2.subtract <= _addSubE5M2_subtract_T_1 @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 51:23]
    addSubE5M2.roundingMode <= roundingMode @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 52:27]
    multiplyE4M3.clock <= clock
    multiplyE4M3.reset <= reset
    multiplyE4M3.enable <= _multiplyE4M3_enable_T_3 @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 54:23]
    multiplyE4M3.a_data <= aE4M3_data @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 55:18]
    multiplyE4M3.b_data <= bE4M3_data @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 56:18]
    multiplyE4M3.roundingMode <= roundingMode @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 57:29]
    multiplyE5M2.clock <= clock
    multiplyE5M2.reset <= reset
    multiplyE5M2.enable <= _multiplyE5M2_enable_T_3 @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 59:23]
    multiplyE5M2.a_data <= aE5M2_data @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 60:18]
    multiplyE5M2.b_data <= bE5M2_data @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 61:18]
    multiplyE5M2.roundingMode <= roundingMode @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 62:29]
    divideE4M3.clock <= clock
    divideE4M3.reset <= reset
    divideE4M3.enable <= _divideE4M3_enable_T_3 @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 64:21]
    divideE4M3.a_data <= aE4M3_data @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 65:16]
    divideE4M3.b_data <= bE4M3_data @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 66:16]
    divideE4M3.roundingMode <= roundingMode @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 67:27]
    divideE5M2.clock <= clock
    divideE5M2.reset <= reset
    divideE5M2.enable <= _divideE5M2_enable_T_3 @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 69:21]
    divideE5M2.a_data <= aE5M2_data @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 70:16]
    divideE5M2.b_data <= bE5M2_data @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 71:16]
    divideE5M2.roundingMode <= roundingMode @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 72:27]
    compareE4M3.clock <= clock
    compareE4M3.reset <= reset
    compareE4M3.enable <= _compareE4M3_enable_T_13 @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 74:22]
    compareE4M3.compareMode <= _compareE4M3_compareMode_T_9 @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 77:27]
    compareE4M3.a_data <= aE4M3_data @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 82:17]
    compareE4M3.b_data <= bE4M3_data @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 83:17]
    compareE5M2.clock <= clock
    compareE5M2.reset <= reset
    compareE5M2.enable <= _compareE5M2_enable_T_13 @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 85:22]
    compareE5M2.compareMode <= _compareE5M2_compareMode_T_9 @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 88:27]
    compareE5M2.a_data <= aE5M2_data @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 93:17]
    compareE5M2.b_data <= bE5M2_data @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 94:17]
    generateFinalResultE4M3.clock <= clock
    generateFinalResultE4M3.reset <= reset
    generateFinalResultE4M3.enable <= _generateFinalResultE4M3_enable_T_1 @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 96:34]
    generateFinalResultE4M3.sign <= _GEN_76
    generateFinalResultE4M3.exponent <= _GEN_77
    generateFinalResultE4M3.mantissa <= _GEN_78
    generateFinalResultE4M3.roundingMode <= _GEN_79
    generateFinalResultE4M3.overflow <= _GEN_80
    generateFinalResultE4M3.saturationMode <= _GEN_81
    generateFinalResultE4M3.isInfty <= _GEN_82
    generateFinalResultE4M3.is0 <= _GEN_83
    generateFinalResultE4M3.isNaN <= _GEN_84
    generateFinalResultE4M3.NaNFractionValue <= _GEN_85
    generateFinalResultE5M2.clock <= clock
    generateFinalResultE5M2.reset <= reset
    generateFinalResultE5M2.enable <= _generateFinalResultE5M2_enable_T_1 @[\\src\\main\\scala\\fpu8\\FPU8Top.scala 97:34]
    generateFinalResultE5M2.sign <= _GEN_66
    generateFinalResultE5M2.exponent <= _GEN_67
    generateFinalResultE5M2.mantissa <= _GEN_68
    generateFinalResultE5M2.roundingMode <= _GEN_69
    generateFinalResultE5M2.overflow <= _GEN_70
    generateFinalResultE5M2.saturationMode <= _GEN_71
    generateFinalResultE5M2.isInfty <= _GEN_72
    generateFinalResultE5M2.is0 <= _GEN_73
    generateFinalResultE5M2.isNaN <= _GEN_74
    generateFinalResultE5M2.NaNFractionValue <= _GEN_75
